
Test_Uart_Thong3Cong.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000184  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004f60  08000184  08000184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000434  080050e4  080050e4  000060e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005518  08005518  00007068  2**0
                  CONTENTS
  4 .ARM          00000008  08005518  08005518  00006518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005520  08005520  00007068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005520  08005520  00006520  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08005524  08005524  00006524  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000068  20000000  08005528  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00013200  20000068  08005590  00007068  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20013268  08005590  00007268  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00007068  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000ab5e  00000000  00000000  00007091  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002104  00000000  00000000  00011bef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000009a0  00000000  00000000  00013cf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000750  00000000  00000000  00014698  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001e4ff  00000000  00000000  00014de8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000beeb  00000000  00000000  000332e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000b2655  00000000  00000000  0003f1d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000086  00000000  00000000  000f1827  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002e7c  00000000  00000000  000f18b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000070  00000000  00000000  000f472c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	@ (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4b04      	ldr	r3, [pc, #16]	@ (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b113      	cbz	r3, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2301      	movs	r3, #1
 8000198:	7023      	strb	r3, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	20000068 	.word	0x20000068
 80001a0:	00000000 	.word	0x00000000
 80001a4:	080050cc 	.word	0x080050cc

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b03      	ldr	r3, [pc, #12]	@ (80001b8 <frame_dummy+0x10>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4903      	ldr	r1, [pc, #12]	@ (80001bc <frame_dummy+0x14>)
 80001b0:	4803      	ldr	r0, [pc, #12]	@ (80001c0 <frame_dummy+0x18>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	bd08      	pop	{r3, pc}
 80001b8:	00000000 	.word	0x00000000
 80001bc:	2000006c 	.word	0x2000006c
 80001c0:	080050cc 	.word	0x080050cc

080001c4 <__aeabi_uldivmod>:
 80001c4:	b953      	cbnz	r3, 80001dc <__aeabi_uldivmod+0x18>
 80001c6:	b94a      	cbnz	r2, 80001dc <__aeabi_uldivmod+0x18>
 80001c8:	2900      	cmp	r1, #0
 80001ca:	bf08      	it	eq
 80001cc:	2800      	cmpeq	r0, #0
 80001ce:	bf1c      	itt	ne
 80001d0:	f04f 31ff 	movne.w	r1, #4294967295
 80001d4:	f04f 30ff 	movne.w	r0, #4294967295
 80001d8:	f000 b968 	b.w	80004ac <__aeabi_idiv0>
 80001dc:	f1ad 0c08 	sub.w	ip, sp, #8
 80001e0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001e4:	f000 f806 	bl	80001f4 <__udivmoddi4>
 80001e8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001ec:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001f0:	b004      	add	sp, #16
 80001f2:	4770      	bx	lr

080001f4 <__udivmoddi4>:
 80001f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001f8:	9d08      	ldr	r5, [sp, #32]
 80001fa:	460c      	mov	r4, r1
 80001fc:	2b00      	cmp	r3, #0
 80001fe:	d14e      	bne.n	800029e <__udivmoddi4+0xaa>
 8000200:	4694      	mov	ip, r2
 8000202:	458c      	cmp	ip, r1
 8000204:	4686      	mov	lr, r0
 8000206:	fab2 f282 	clz	r2, r2
 800020a:	d962      	bls.n	80002d2 <__udivmoddi4+0xde>
 800020c:	b14a      	cbz	r2, 8000222 <__udivmoddi4+0x2e>
 800020e:	f1c2 0320 	rsb	r3, r2, #32
 8000212:	4091      	lsls	r1, r2
 8000214:	fa20 f303 	lsr.w	r3, r0, r3
 8000218:	fa0c fc02 	lsl.w	ip, ip, r2
 800021c:	4319      	orrs	r1, r3
 800021e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000222:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000226:	fbb1 f4f7 	udiv	r4, r1, r7
 800022a:	fb07 1114 	mls	r1, r7, r4, r1
 800022e:	fa1f f68c 	uxth.w	r6, ip
 8000232:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000236:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800023a:	fb04 f106 	mul.w	r1, r4, r6
 800023e:	4299      	cmp	r1, r3
 8000240:	d90a      	bls.n	8000258 <__udivmoddi4+0x64>
 8000242:	eb1c 0303 	adds.w	r3, ip, r3
 8000246:	f104 30ff 	add.w	r0, r4, #4294967295
 800024a:	f080 8110 	bcs.w	800046e <__udivmoddi4+0x27a>
 800024e:	4299      	cmp	r1, r3
 8000250:	f240 810d 	bls.w	800046e <__udivmoddi4+0x27a>
 8000254:	3c02      	subs	r4, #2
 8000256:	4463      	add	r3, ip
 8000258:	1a59      	subs	r1, r3, r1
 800025a:	fbb1 f0f7 	udiv	r0, r1, r7
 800025e:	fb07 1110 	mls	r1, r7, r0, r1
 8000262:	fb00 f606 	mul.w	r6, r0, r6
 8000266:	fa1f f38e 	uxth.w	r3, lr
 800026a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800026e:	429e      	cmp	r6, r3
 8000270:	d90a      	bls.n	8000288 <__udivmoddi4+0x94>
 8000272:	eb1c 0303 	adds.w	r3, ip, r3
 8000276:	f100 31ff 	add.w	r1, r0, #4294967295
 800027a:	f080 80fa 	bcs.w	8000472 <__udivmoddi4+0x27e>
 800027e:	429e      	cmp	r6, r3
 8000280:	f240 80f7 	bls.w	8000472 <__udivmoddi4+0x27e>
 8000284:	4463      	add	r3, ip
 8000286:	3802      	subs	r0, #2
 8000288:	2100      	movs	r1, #0
 800028a:	1b9b      	subs	r3, r3, r6
 800028c:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000290:	b11d      	cbz	r5, 800029a <__udivmoddi4+0xa6>
 8000292:	40d3      	lsrs	r3, r2
 8000294:	2200      	movs	r2, #0
 8000296:	e9c5 3200 	strd	r3, r2, [r5]
 800029a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800029e:	428b      	cmp	r3, r1
 80002a0:	d905      	bls.n	80002ae <__udivmoddi4+0xba>
 80002a2:	b10d      	cbz	r5, 80002a8 <__udivmoddi4+0xb4>
 80002a4:	e9c5 0100 	strd	r0, r1, [r5]
 80002a8:	2100      	movs	r1, #0
 80002aa:	4608      	mov	r0, r1
 80002ac:	e7f5      	b.n	800029a <__udivmoddi4+0xa6>
 80002ae:	fab3 f183 	clz	r1, r3
 80002b2:	2900      	cmp	r1, #0
 80002b4:	d146      	bne.n	8000344 <__udivmoddi4+0x150>
 80002b6:	42a3      	cmp	r3, r4
 80002b8:	d302      	bcc.n	80002c0 <__udivmoddi4+0xcc>
 80002ba:	4290      	cmp	r0, r2
 80002bc:	f0c0 80ee 	bcc.w	800049c <__udivmoddi4+0x2a8>
 80002c0:	1a86      	subs	r6, r0, r2
 80002c2:	eb64 0303 	sbc.w	r3, r4, r3
 80002c6:	2001      	movs	r0, #1
 80002c8:	2d00      	cmp	r5, #0
 80002ca:	d0e6      	beq.n	800029a <__udivmoddi4+0xa6>
 80002cc:	e9c5 6300 	strd	r6, r3, [r5]
 80002d0:	e7e3      	b.n	800029a <__udivmoddi4+0xa6>
 80002d2:	2a00      	cmp	r2, #0
 80002d4:	f040 808f 	bne.w	80003f6 <__udivmoddi4+0x202>
 80002d8:	eba1 040c 	sub.w	r4, r1, ip
 80002dc:	2101      	movs	r1, #1
 80002de:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002e2:	fa1f f78c 	uxth.w	r7, ip
 80002e6:	fbb4 f6f8 	udiv	r6, r4, r8
 80002ea:	fb08 4416 	mls	r4, r8, r6, r4
 80002ee:	fb07 f006 	mul.w	r0, r7, r6
 80002f2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002f6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80002fa:	4298      	cmp	r0, r3
 80002fc:	d908      	bls.n	8000310 <__udivmoddi4+0x11c>
 80002fe:	eb1c 0303 	adds.w	r3, ip, r3
 8000302:	f106 34ff 	add.w	r4, r6, #4294967295
 8000306:	d202      	bcs.n	800030e <__udivmoddi4+0x11a>
 8000308:	4298      	cmp	r0, r3
 800030a:	f200 80cb 	bhi.w	80004a4 <__udivmoddi4+0x2b0>
 800030e:	4626      	mov	r6, r4
 8000310:	1a1c      	subs	r4, r3, r0
 8000312:	fbb4 f0f8 	udiv	r0, r4, r8
 8000316:	fb08 4410 	mls	r4, r8, r0, r4
 800031a:	fb00 f707 	mul.w	r7, r0, r7
 800031e:	fa1f f38e 	uxth.w	r3, lr
 8000322:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000326:	429f      	cmp	r7, r3
 8000328:	d908      	bls.n	800033c <__udivmoddi4+0x148>
 800032a:	eb1c 0303 	adds.w	r3, ip, r3
 800032e:	f100 34ff 	add.w	r4, r0, #4294967295
 8000332:	d202      	bcs.n	800033a <__udivmoddi4+0x146>
 8000334:	429f      	cmp	r7, r3
 8000336:	f200 80ae 	bhi.w	8000496 <__udivmoddi4+0x2a2>
 800033a:	4620      	mov	r0, r4
 800033c:	1bdb      	subs	r3, r3, r7
 800033e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000342:	e7a5      	b.n	8000290 <__udivmoddi4+0x9c>
 8000344:	f1c1 0720 	rsb	r7, r1, #32
 8000348:	408b      	lsls	r3, r1
 800034a:	fa22 fc07 	lsr.w	ip, r2, r7
 800034e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000352:	fa24 f607 	lsr.w	r6, r4, r7
 8000356:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800035a:	fbb6 f8f9 	udiv	r8, r6, r9
 800035e:	fa1f fe8c 	uxth.w	lr, ip
 8000362:	fb09 6618 	mls	r6, r9, r8, r6
 8000366:	fa20 f307 	lsr.w	r3, r0, r7
 800036a:	408c      	lsls	r4, r1
 800036c:	fa00 fa01 	lsl.w	sl, r0, r1
 8000370:	fb08 f00e 	mul.w	r0, r8, lr
 8000374:	431c      	orrs	r4, r3
 8000376:	0c23      	lsrs	r3, r4, #16
 8000378:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800037c:	4298      	cmp	r0, r3
 800037e:	fa02 f201 	lsl.w	r2, r2, r1
 8000382:	d90a      	bls.n	800039a <__udivmoddi4+0x1a6>
 8000384:	eb1c 0303 	adds.w	r3, ip, r3
 8000388:	f108 36ff 	add.w	r6, r8, #4294967295
 800038c:	f080 8081 	bcs.w	8000492 <__udivmoddi4+0x29e>
 8000390:	4298      	cmp	r0, r3
 8000392:	d97e      	bls.n	8000492 <__udivmoddi4+0x29e>
 8000394:	f1a8 0802 	sub.w	r8, r8, #2
 8000398:	4463      	add	r3, ip
 800039a:	1a1e      	subs	r6, r3, r0
 800039c:	fbb6 f3f9 	udiv	r3, r6, r9
 80003a0:	fb09 6613 	mls	r6, r9, r3, r6
 80003a4:	fb03 fe0e 	mul.w	lr, r3, lr
 80003a8:	b2a4      	uxth	r4, r4
 80003aa:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80003ae:	45a6      	cmp	lr, r4
 80003b0:	d908      	bls.n	80003c4 <__udivmoddi4+0x1d0>
 80003b2:	eb1c 0404 	adds.w	r4, ip, r4
 80003b6:	f103 30ff 	add.w	r0, r3, #4294967295
 80003ba:	d266      	bcs.n	800048a <__udivmoddi4+0x296>
 80003bc:	45a6      	cmp	lr, r4
 80003be:	d964      	bls.n	800048a <__udivmoddi4+0x296>
 80003c0:	3b02      	subs	r3, #2
 80003c2:	4464      	add	r4, ip
 80003c4:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 80003c8:	fba0 8302 	umull	r8, r3, r0, r2
 80003cc:	eba4 040e 	sub.w	r4, r4, lr
 80003d0:	429c      	cmp	r4, r3
 80003d2:	46c6      	mov	lr, r8
 80003d4:	461e      	mov	r6, r3
 80003d6:	d350      	bcc.n	800047a <__udivmoddi4+0x286>
 80003d8:	d04d      	beq.n	8000476 <__udivmoddi4+0x282>
 80003da:	b155      	cbz	r5, 80003f2 <__udivmoddi4+0x1fe>
 80003dc:	ebba 030e 	subs.w	r3, sl, lr
 80003e0:	eb64 0406 	sbc.w	r4, r4, r6
 80003e4:	fa04 f707 	lsl.w	r7, r4, r7
 80003e8:	40cb      	lsrs	r3, r1
 80003ea:	431f      	orrs	r7, r3
 80003ec:	40cc      	lsrs	r4, r1
 80003ee:	e9c5 7400 	strd	r7, r4, [r5]
 80003f2:	2100      	movs	r1, #0
 80003f4:	e751      	b.n	800029a <__udivmoddi4+0xa6>
 80003f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80003fa:	f1c2 0320 	rsb	r3, r2, #32
 80003fe:	40d9      	lsrs	r1, r3
 8000400:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000404:	fa20 f303 	lsr.w	r3, r0, r3
 8000408:	fa00 fe02 	lsl.w	lr, r0, r2
 800040c:	fbb1 f0f8 	udiv	r0, r1, r8
 8000410:	fb08 1110 	mls	r1, r8, r0, r1
 8000414:	4094      	lsls	r4, r2
 8000416:	431c      	orrs	r4, r3
 8000418:	fa1f f78c 	uxth.w	r7, ip
 800041c:	0c23      	lsrs	r3, r4, #16
 800041e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000422:	fb00 f107 	mul.w	r1, r0, r7
 8000426:	4299      	cmp	r1, r3
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0x248>
 800042a:	eb1c 0303 	adds.w	r3, ip, r3
 800042e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000432:	d22c      	bcs.n	800048e <__udivmoddi4+0x29a>
 8000434:	4299      	cmp	r1, r3
 8000436:	d92a      	bls.n	800048e <__udivmoddi4+0x29a>
 8000438:	3802      	subs	r0, #2
 800043a:	4463      	add	r3, ip
 800043c:	1a5b      	subs	r3, r3, r1
 800043e:	fbb3 f1f8 	udiv	r1, r3, r8
 8000442:	fb08 3311 	mls	r3, r8, r1, r3
 8000446:	b2a4      	uxth	r4, r4
 8000448:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800044c:	fb01 f307 	mul.w	r3, r1, r7
 8000450:	42a3      	cmp	r3, r4
 8000452:	d908      	bls.n	8000466 <__udivmoddi4+0x272>
 8000454:	eb1c 0404 	adds.w	r4, ip, r4
 8000458:	f101 36ff 	add.w	r6, r1, #4294967295
 800045c:	d213      	bcs.n	8000486 <__udivmoddi4+0x292>
 800045e:	42a3      	cmp	r3, r4
 8000460:	d911      	bls.n	8000486 <__udivmoddi4+0x292>
 8000462:	3902      	subs	r1, #2
 8000464:	4464      	add	r4, ip
 8000466:	1ae4      	subs	r4, r4, r3
 8000468:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800046c:	e73b      	b.n	80002e6 <__udivmoddi4+0xf2>
 800046e:	4604      	mov	r4, r0
 8000470:	e6f2      	b.n	8000258 <__udivmoddi4+0x64>
 8000472:	4608      	mov	r0, r1
 8000474:	e708      	b.n	8000288 <__udivmoddi4+0x94>
 8000476:	45c2      	cmp	sl, r8
 8000478:	d2af      	bcs.n	80003da <__udivmoddi4+0x1e6>
 800047a:	ebb8 0e02 	subs.w	lr, r8, r2
 800047e:	eb63 060c 	sbc.w	r6, r3, ip
 8000482:	3801      	subs	r0, #1
 8000484:	e7a9      	b.n	80003da <__udivmoddi4+0x1e6>
 8000486:	4631      	mov	r1, r6
 8000488:	e7ed      	b.n	8000466 <__udivmoddi4+0x272>
 800048a:	4603      	mov	r3, r0
 800048c:	e79a      	b.n	80003c4 <__udivmoddi4+0x1d0>
 800048e:	4630      	mov	r0, r6
 8000490:	e7d4      	b.n	800043c <__udivmoddi4+0x248>
 8000492:	46b0      	mov	r8, r6
 8000494:	e781      	b.n	800039a <__udivmoddi4+0x1a6>
 8000496:	4463      	add	r3, ip
 8000498:	3802      	subs	r0, #2
 800049a:	e74f      	b.n	800033c <__udivmoddi4+0x148>
 800049c:	4606      	mov	r6, r0
 800049e:	4623      	mov	r3, r4
 80004a0:	4608      	mov	r0, r1
 80004a2:	e711      	b.n	80002c8 <__udivmoddi4+0xd4>
 80004a4:	3e02      	subs	r6, #2
 80004a6:	4463      	add	r3, ip
 80004a8:	e732      	b.n	8000310 <__udivmoddi4+0x11c>
 80004aa:	bf00      	nop

080004ac <__aeabi_idiv0>:
 80004ac:	4770      	bx	lr
 80004ae:	bf00      	nop

080004b0 <GetSector>:
 80004b0:	b480      	push	{r7}
 80004b2:	b085      	sub	sp, #20
 80004b4:	af00      	add	r7, sp, #0
 80004b6:	6078      	str	r0, [r7, #4]
 80004b8:	2300      	movs	r3, #0
 80004ba:	60fb      	str	r3, [r7, #12]
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	4a44      	ldr	r2, [pc, #272]	@ (80005d0 <GetSector+0x120>)
 80004c0:	4293      	cmp	r3, r2
 80004c2:	d206      	bcs.n	80004d2 <GetSector+0x22>
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80004ca:	d302      	bcc.n	80004d2 <GetSector+0x22>
 80004cc:	2300      	movs	r3, #0
 80004ce:	60fb      	str	r3, [r7, #12]
 80004d0:	e077      	b.n	80005c2 <GetSector+0x112>
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	4a3f      	ldr	r2, [pc, #252]	@ (80005d4 <GetSector+0x124>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d206      	bcs.n	80004e8 <GetSector+0x38>
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	4a3c      	ldr	r2, [pc, #240]	@ (80005d0 <GetSector+0x120>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d302      	bcc.n	80004e8 <GetSector+0x38>
 80004e2:	2301      	movs	r3, #1
 80004e4:	60fb      	str	r3, [r7, #12]
 80004e6:	e06c      	b.n	80005c2 <GetSector+0x112>
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	4a3b      	ldr	r2, [pc, #236]	@ (80005d8 <GetSector+0x128>)
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d206      	bcs.n	80004fe <GetSector+0x4e>
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	4a38      	ldr	r2, [pc, #224]	@ (80005d4 <GetSector+0x124>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d302      	bcc.n	80004fe <GetSector+0x4e>
 80004f8:	2302      	movs	r3, #2
 80004fa:	60fb      	str	r3, [r7, #12]
 80004fc:	e061      	b.n	80005c2 <GetSector+0x112>
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	4a36      	ldr	r2, [pc, #216]	@ (80005dc <GetSector+0x12c>)
 8000502:	4293      	cmp	r3, r2
 8000504:	d806      	bhi.n	8000514 <GetSector+0x64>
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	4a33      	ldr	r2, [pc, #204]	@ (80005d8 <GetSector+0x128>)
 800050a:	4293      	cmp	r3, r2
 800050c:	d302      	bcc.n	8000514 <GetSector+0x64>
 800050e:	2303      	movs	r3, #3
 8000510:	60fb      	str	r3, [r7, #12]
 8000512:	e056      	b.n	80005c2 <GetSector+0x112>
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	4a32      	ldr	r2, [pc, #200]	@ (80005e0 <GetSector+0x130>)
 8000518:	4293      	cmp	r3, r2
 800051a:	d806      	bhi.n	800052a <GetSector+0x7a>
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	4a2f      	ldr	r2, [pc, #188]	@ (80005dc <GetSector+0x12c>)
 8000520:	4293      	cmp	r3, r2
 8000522:	d902      	bls.n	800052a <GetSector+0x7a>
 8000524:	2304      	movs	r3, #4
 8000526:	60fb      	str	r3, [r7, #12]
 8000528:	e04b      	b.n	80005c2 <GetSector+0x112>
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	4a2d      	ldr	r2, [pc, #180]	@ (80005e4 <GetSector+0x134>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d806      	bhi.n	8000540 <GetSector+0x90>
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	4a2a      	ldr	r2, [pc, #168]	@ (80005e0 <GetSector+0x130>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d902      	bls.n	8000540 <GetSector+0x90>
 800053a:	2305      	movs	r3, #5
 800053c:	60fb      	str	r3, [r7, #12]
 800053e:	e040      	b.n	80005c2 <GetSector+0x112>
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	4a29      	ldr	r2, [pc, #164]	@ (80005e8 <GetSector+0x138>)
 8000544:	4293      	cmp	r3, r2
 8000546:	d806      	bhi.n	8000556 <GetSector+0xa6>
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	4a26      	ldr	r2, [pc, #152]	@ (80005e4 <GetSector+0x134>)
 800054c:	4293      	cmp	r3, r2
 800054e:	d902      	bls.n	8000556 <GetSector+0xa6>
 8000550:	2306      	movs	r3, #6
 8000552:	60fb      	str	r3, [r7, #12]
 8000554:	e035      	b.n	80005c2 <GetSector+0x112>
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	4a24      	ldr	r2, [pc, #144]	@ (80005ec <GetSector+0x13c>)
 800055a:	4293      	cmp	r3, r2
 800055c:	d806      	bhi.n	800056c <GetSector+0xbc>
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	4a21      	ldr	r2, [pc, #132]	@ (80005e8 <GetSector+0x138>)
 8000562:	4293      	cmp	r3, r2
 8000564:	d902      	bls.n	800056c <GetSector+0xbc>
 8000566:	2307      	movs	r3, #7
 8000568:	60fb      	str	r3, [r7, #12]
 800056a:	e02a      	b.n	80005c2 <GetSector+0x112>
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	4a20      	ldr	r2, [pc, #128]	@ (80005f0 <GetSector+0x140>)
 8000570:	4293      	cmp	r3, r2
 8000572:	d806      	bhi.n	8000582 <GetSector+0xd2>
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	4a1d      	ldr	r2, [pc, #116]	@ (80005ec <GetSector+0x13c>)
 8000578:	4293      	cmp	r3, r2
 800057a:	d902      	bls.n	8000582 <GetSector+0xd2>
 800057c:	2308      	movs	r3, #8
 800057e:	60fb      	str	r3, [r7, #12]
 8000580:	e01f      	b.n	80005c2 <GetSector+0x112>
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	4a1b      	ldr	r2, [pc, #108]	@ (80005f4 <GetSector+0x144>)
 8000586:	4293      	cmp	r3, r2
 8000588:	d806      	bhi.n	8000598 <GetSector+0xe8>
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	4a18      	ldr	r2, [pc, #96]	@ (80005f0 <GetSector+0x140>)
 800058e:	4293      	cmp	r3, r2
 8000590:	d902      	bls.n	8000598 <GetSector+0xe8>
 8000592:	2309      	movs	r3, #9
 8000594:	60fb      	str	r3, [r7, #12]
 8000596:	e014      	b.n	80005c2 <GetSector+0x112>
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	4a17      	ldr	r2, [pc, #92]	@ (80005f8 <GetSector+0x148>)
 800059c:	4293      	cmp	r3, r2
 800059e:	d806      	bhi.n	80005ae <GetSector+0xfe>
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	4a14      	ldr	r2, [pc, #80]	@ (80005f4 <GetSector+0x144>)
 80005a4:	4293      	cmp	r3, r2
 80005a6:	d902      	bls.n	80005ae <GetSector+0xfe>
 80005a8:	230a      	movs	r3, #10
 80005aa:	60fb      	str	r3, [r7, #12]
 80005ac:	e009      	b.n	80005c2 <GetSector+0x112>
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	f1b3 6f01 	cmp.w	r3, #135266304	@ 0x8100000
 80005b4:	d205      	bcs.n	80005c2 <GetSector+0x112>
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	4a0f      	ldr	r2, [pc, #60]	@ (80005f8 <GetSector+0x148>)
 80005ba:	4293      	cmp	r3, r2
 80005bc:	d901      	bls.n	80005c2 <GetSector+0x112>
 80005be:	230b      	movs	r3, #11
 80005c0:	60fb      	str	r3, [r7, #12]
 80005c2:	68fb      	ldr	r3, [r7, #12]
 80005c4:	4618      	mov	r0, r3
 80005c6:	3714      	adds	r7, #20
 80005c8:	46bd      	mov	sp, r7
 80005ca:	bc80      	pop	{r7}
 80005cc:	4770      	bx	lr
 80005ce:	bf00      	nop
 80005d0:	08004000 	.word	0x08004000
 80005d4:	08008000 	.word	0x08008000
 80005d8:	0800c000 	.word	0x0800c000
 80005dc:	0800ffff 	.word	0x0800ffff
 80005e0:	0801ffff 	.word	0x0801ffff
 80005e4:	0803ffff 	.word	0x0803ffff
 80005e8:	0805ffff 	.word	0x0805ffff
 80005ec:	0807ffff 	.word	0x0807ffff
 80005f0:	0809ffff 	.word	0x0809ffff
 80005f4:	080bffff 	.word	0x080bffff
 80005f8:	080dffff 	.word	0x080dffff

080005fc <Flash_Erase_sector>:
 80005fc:	b580      	push	{r7, lr}
 80005fe:	b084      	sub	sp, #16
 8000600:	af00      	add	r7, sp, #0
 8000602:	6078      	str	r0, [r7, #4]
 8000604:	f001 fd66 	bl	80020d4 <HAL_FLASH_Unlock>
 8000608:	6878      	ldr	r0, [r7, #4]
 800060a:	f7ff ff51 	bl	80004b0 <GetSector>
 800060e:	60f8      	str	r0, [r7, #12]
 8000610:	4b0e      	ldr	r3, [pc, #56]	@ (800064c <Flash_Erase_sector+0x50>)
 8000612:	2200      	movs	r2, #0
 8000614:	601a      	str	r2, [r3, #0]
 8000616:	4b0d      	ldr	r3, [pc, #52]	@ (800064c <Flash_Erase_sector+0x50>)
 8000618:	2202      	movs	r2, #2
 800061a:	611a      	str	r2, [r3, #16]
 800061c:	4a0b      	ldr	r2, [pc, #44]	@ (800064c <Flash_Erase_sector+0x50>)
 800061e:	68fb      	ldr	r3, [r7, #12]
 8000620:	6093      	str	r3, [r2, #8]
 8000622:	4b0a      	ldr	r3, [pc, #40]	@ (800064c <Flash_Erase_sector+0x50>)
 8000624:	2201      	movs	r2, #1
 8000626:	60da      	str	r2, [r3, #12]
 8000628:	f107 0308 	add.w	r3, r7, #8
 800062c:	4619      	mov	r1, r3
 800062e:	4807      	ldr	r0, [pc, #28]	@ (800064c <Flash_Erase_sector+0x50>)
 8000630:	f001 feb8 	bl	80023a4 <HAL_FLASHEx_Erase>
 8000634:	4603      	mov	r3, r0
 8000636:	2b00      	cmp	r3, #0
 8000638:	d002      	beq.n	8000640 <Flash_Erase_sector+0x44>
 800063a:	f001 fd7d 	bl	8002138 <HAL_FLASH_GetError>
 800063e:	e001      	b.n	8000644 <Flash_Erase_sector+0x48>
 8000640:	f001 fd6a 	bl	8002118 <HAL_FLASH_Lock>
 8000644:	3710      	adds	r7, #16
 8000646:	46bd      	mov	sp, r7
 8000648:	bd80      	pop	{r7, pc}
 800064a:	bf00      	nop
 800064c:	20000084 	.word	0x20000084

08000650 <Flash_Write_byte>:
 8000650:	b5b0      	push	{r4, r5, r7, lr}
 8000652:	b086      	sub	sp, #24
 8000654:	af00      	add	r7, sp, #0
 8000656:	60f8      	str	r0, [r7, #12]
 8000658:	60b9      	str	r1, [r7, #8]
 800065a:	4613      	mov	r3, r2
 800065c:	80fb      	strh	r3, [r7, #6]
 800065e:	2300      	movs	r3, #0
 8000660:	617b      	str	r3, [r7, #20]
 8000662:	f001 fd37 	bl	80020d4 <HAL_FLASH_Unlock>
 8000666:	e01c      	b.n	80006a2 <Flash_Write_byte+0x52>
 8000668:	697b      	ldr	r3, [r7, #20]
 800066a:	68ba      	ldr	r2, [r7, #8]
 800066c:	4413      	add	r3, r2
 800066e:	781b      	ldrb	r3, [r3, #0]
 8000670:	b2db      	uxtb	r3, r3
 8000672:	2200      	movs	r2, #0
 8000674:	461c      	mov	r4, r3
 8000676:	4615      	mov	r5, r2
 8000678:	4622      	mov	r2, r4
 800067a:	462b      	mov	r3, r5
 800067c:	68f9      	ldr	r1, [r7, #12]
 800067e:	2000      	movs	r0, #0
 8000680:	f001 fcd4 	bl	800202c <HAL_FLASH_Program>
 8000684:	4603      	mov	r3, r0
 8000686:	2b00      	cmp	r3, #0
 8000688:	d106      	bne.n	8000698 <Flash_Write_byte+0x48>
 800068a:	68fb      	ldr	r3, [r7, #12]
 800068c:	3301      	adds	r3, #1
 800068e:	60fb      	str	r3, [r7, #12]
 8000690:	697b      	ldr	r3, [r7, #20]
 8000692:	3301      	adds	r3, #1
 8000694:	617b      	str	r3, [r7, #20]
 8000696:	e004      	b.n	80006a2 <Flash_Write_byte+0x52>
 8000698:	f001 fd4e 	bl	8002138 <HAL_FLASH_GetError>
 800069c:	6138      	str	r0, [r7, #16]
 800069e:	693b      	ldr	r3, [r7, #16]
 80006a0:	e006      	b.n	80006b0 <Flash_Write_byte+0x60>
 80006a2:	88fb      	ldrh	r3, [r7, #6]
 80006a4:	697a      	ldr	r2, [r7, #20]
 80006a6:	429a      	cmp	r2, r3
 80006a8:	dbde      	blt.n	8000668 <Flash_Write_byte+0x18>
 80006aa:	f001 fd35 	bl	8002118 <HAL_FLASH_Lock>
 80006ae:	2300      	movs	r3, #0
 80006b0:	4618      	mov	r0, r3
 80006b2:	3718      	adds	r7, #24
 80006b4:	46bd      	mov	sp, r7
 80006b6:	bdb0      	pop	{r4, r5, r7, pc}

080006b8 <Flash_Read_Data>:
 80006b8:	b480      	push	{r7}
 80006ba:	b085      	sub	sp, #20
 80006bc:	af00      	add	r7, sp, #0
 80006be:	60f8      	str	r0, [r7, #12]
 80006c0:	60b9      	str	r1, [r7, #8]
 80006c2:	4613      	mov	r3, r2
 80006c4:	80fb      	strh	r3, [r7, #6]
 80006c6:	68fb      	ldr	r3, [r7, #12]
 80006c8:	681a      	ldr	r2, [r3, #0]
 80006ca:	68bb      	ldr	r3, [r7, #8]
 80006cc:	601a      	str	r2, [r3, #0]
 80006ce:	68fb      	ldr	r3, [r7, #12]
 80006d0:	3304      	adds	r3, #4
 80006d2:	60fb      	str	r3, [r7, #12]
 80006d4:	68bb      	ldr	r3, [r7, #8]
 80006d6:	3304      	adds	r3, #4
 80006d8:	60bb      	str	r3, [r7, #8]
 80006da:	88fb      	ldrh	r3, [r7, #6]
 80006dc:	1e5a      	subs	r2, r3, #1
 80006de:	80fa      	strh	r2, [r7, #6]
 80006e0:	2b00      	cmp	r3, #0
 80006e2:	d000      	beq.n	80006e6 <Flash_Read_Data+0x2e>
 80006e4:	e7ef      	b.n	80006c6 <Flash_Read_Data+0xe>
 80006e6:	bf00      	nop
 80006e8:	bf00      	nop
 80006ea:	3714      	adds	r7, #20
 80006ec:	46bd      	mov	sp, r7
 80006ee:	bc80      	pop	{r7}
 80006f0:	4770      	bx	lr

080006f2 <convertdata>:
 80006f2:	b480      	push	{r7}
 80006f4:	b085      	sub	sp, #20
 80006f6:	af00      	add	r7, sp, #0
 80006f8:	6078      	str	r0, [r7, #4]
 80006fa:	6039      	str	r1, [r7, #0]
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	60fb      	str	r3, [r7, #12]
 8000700:	68fb      	ldr	r3, [r7, #12]
 8000702:	b2da      	uxtb	r2, r3
 8000704:	683b      	ldr	r3, [r7, #0]
 8000706:	701a      	strb	r2, [r3, #0]
 8000708:	68fb      	ldr	r3, [r7, #12]
 800070a:	0a1b      	lsrs	r3, r3, #8
 800070c:	60fb      	str	r3, [r7, #12]
 800070e:	683b      	ldr	r3, [r7, #0]
 8000710:	3301      	adds	r3, #1
 8000712:	68fa      	ldr	r2, [r7, #12]
 8000714:	b2d2      	uxtb	r2, r2
 8000716:	701a      	strb	r2, [r3, #0]
 8000718:	68fb      	ldr	r3, [r7, #12]
 800071a:	0a1b      	lsrs	r3, r3, #8
 800071c:	60fb      	str	r3, [r7, #12]
 800071e:	683b      	ldr	r3, [r7, #0]
 8000720:	3302      	adds	r3, #2
 8000722:	68fa      	ldr	r2, [r7, #12]
 8000724:	b2d2      	uxtb	r2, r2
 8000726:	701a      	strb	r2, [r3, #0]
 8000728:	68fb      	ldr	r3, [r7, #12]
 800072a:	0a1b      	lsrs	r3, r3, #8
 800072c:	60fb      	str	r3, [r7, #12]
 800072e:	683b      	ldr	r3, [r7, #0]
 8000730:	3303      	adds	r3, #3
 8000732:	68fa      	ldr	r2, [r7, #12]
 8000734:	b2d2      	uxtb	r2, r2
 8000736:	701a      	strb	r2, [r3, #0]
 8000738:	bf00      	nop
 800073a:	3714      	adds	r7, #20
 800073c:	46bd      	mov	sp, r7
 800073e:	bc80      	pop	{r7}
 8000740:	4770      	bx	lr
	...

08000744 <__io_putchar>:
#else
#define PUTCHAR_PROTOTYPE int fputc (int ch, FILE *f)
#endif

PUTCHAR_PROTOTYPE
{
 8000744:	b580      	push	{r7, lr}
 8000746:	b082      	sub	sp, #8
 8000748:	af00      	add	r7, sp, #0
 800074a:	6078      	str	r0, [r7, #4]
HAL_UART_Transmit(&huart1,(uint8_t *)&ch,1,0xFFFF);
 800074c:	1d39      	adds	r1, r7, #4
 800074e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000752:	2201      	movs	r2, #1
 8000754:	4803      	ldr	r0, [pc, #12]	@ (8000764 <__io_putchar+0x20>)
 8000756:	f002 fdc1 	bl	80032dc <HAL_UART_Transmit>

return ch;
 800075a:	687b      	ldr	r3, [r7, #4]
}
 800075c:	4618      	mov	r0, r3
 800075e:	3708      	adds	r7, #8
 8000760:	46bd      	mov	sp, r7
 8000762:	bd80      	pop	{r7, pc}
 8000764:	20000098 	.word	0x20000098

08000768 <ProcessUart2Data>:
        last_packet_time = HAL_GetTick();  // Cập nhật thời gian nhận gói cuối cùng
    }
}
#endif

void ProcessUart2Data(uint8_t* data, uint16_t size) {
 8000768:	b580      	push	{r7, lr}
 800076a:	b084      	sub	sp, #16
 800076c:	af00      	add	r7, sp, #0
 800076e:	6078      	str	r0, [r7, #4]
 8000770:	460b      	mov	r3, r1
 8000772:	807b      	strh	r3, [r7, #2]
	uint32_t time2;

	uint32_t timer1;
	uint32_t timer2;
	uint16_t lentosend;
	uint32_t totaltam =0;
 8000774:	2300      	movs	r3, #0
 8000776:	60fb      	str	r3, [r7, #12]
	int num_of_words;
	int numofwords;


    // Kiểm tra nếu kích thước là chính xác 4096 byte hoặc nhỏ hơn
    if (size <= CHUNK_SIZE) {
 8000778:	887b      	ldrh	r3, [r7, #2]
 800077a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800077e:	d83c      	bhi.n	80007fa <ProcessUart2Data+0x92>
        // Nếu kích thước là 6 byte, reset packetCount và đặt cờ reset
        if (size == 6) {
 8000780:	887b      	ldrh	r3, [r7, #2]
 8000782:	2b06      	cmp	r3, #6
 8000784:	d106      	bne.n	8000794 <ProcessUart2Data+0x2c>
            packetCount = 0;  // Đặt packetCount là 0 để bắt đầu lại từ gói 0
 8000786:	4b1f      	ldr	r3, [pc, #124]	@ (8000804 <ProcessUart2Data+0x9c>)
 8000788:	2200      	movs	r2, #0
 800078a:	601a      	str	r2, [r3, #0]
            resetFlag = 1;    // Đặt cờ để cho phép nhận các gói tiếp theo
 800078c:	4b1e      	ldr	r3, [pc, #120]	@ (8000808 <ProcessUart2Data+0xa0>)
 800078e:	2201      	movs	r2, #1
 8000790:	701a      	strb	r2, [r3, #0]

            // Đánh dấu thời gian nhận gói cuối cùng
            last_packet_time = HAL_GetTick();
        }
    }
}
 8000792:	e032      	b.n	80007fa <ProcessUart2Data+0x92>
        } else if (resetFlag) {
 8000794:	4b1c      	ldr	r3, [pc, #112]	@ (8000808 <ProcessUart2Data+0xa0>)
 8000796:	781b      	ldrb	r3, [r3, #0]
 8000798:	2b00      	cmp	r3, #0
 800079a:	d02e      	beq.n	80007fa <ProcessUart2Data+0x92>
        	len_tam = size;
 800079c:	887b      	ldrh	r3, [r7, #2]
 800079e:	817b      	strh	r3, [r7, #10]
            printf("Packet %d = %d\n", packetCount, size);
 80007a0:	4b18      	ldr	r3, [pc, #96]	@ (8000804 <ProcessUart2Data+0x9c>)
 80007a2:	681b      	ldr	r3, [r3, #0]
 80007a4:	887a      	ldrh	r2, [r7, #2]
 80007a6:	4619      	mov	r1, r3
 80007a8:	4818      	ldr	r0, [pc, #96]	@ (800080c <ProcessUart2Data+0xa4>)
 80007aa:	f003 fe17 	bl	80043dc <iprintf>
            memcpy(&temp_buffer[temp_buffer_index], data, size);
 80007ae:	4b18      	ldr	r3, [pc, #96]	@ (8000810 <ProcessUart2Data+0xa8>)
 80007b0:	681b      	ldr	r3, [r3, #0]
 80007b2:	4a18      	ldr	r2, [pc, #96]	@ (8000814 <ProcessUart2Data+0xac>)
 80007b4:	4413      	add	r3, r2
 80007b6:	887a      	ldrh	r2, [r7, #2]
 80007b8:	6879      	ldr	r1, [r7, #4]
 80007ba:	4618      	mov	r0, r3
 80007bc:	f003 ffd9 	bl	8004772 <memcpy>
            temp_buffer_index = size;
 80007c0:	887b      	ldrh	r3, [r7, #2]
 80007c2:	4a13      	ldr	r2, [pc, #76]	@ (8000810 <ProcessUart2Data+0xa8>)
 80007c4:	6013      	str	r3, [r2, #0]
            Handle_Uart();
 80007c6:	f000 f997 	bl	8000af8 <Handle_Uart>
            packetCount++;
 80007ca:	4b0e      	ldr	r3, [pc, #56]	@ (8000804 <ProcessUart2Data+0x9c>)
 80007cc:	681b      	ldr	r3, [r3, #0]
 80007ce:	3301      	adds	r3, #1
 80007d0:	4a0c      	ldr	r2, [pc, #48]	@ (8000804 <ProcessUart2Data+0x9c>)
 80007d2:	6013      	str	r3, [r2, #0]
            total_packets++;
 80007d4:	4b10      	ldr	r3, [pc, #64]	@ (8000818 <ProcessUart2Data+0xb0>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	3301      	adds	r3, #1
 80007da:	4a0f      	ldr	r2, [pc, #60]	@ (8000818 <ProcessUart2Data+0xb0>)
 80007dc:	6013      	str	r3, [r2, #0]
            total_bytes += size;
 80007de:	887a      	ldrh	r2, [r7, #2]
 80007e0:	4b0e      	ldr	r3, [pc, #56]	@ (800081c <ProcessUart2Data+0xb4>)
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	4413      	add	r3, r2
 80007e6:	4a0d      	ldr	r2, [pc, #52]	@ (800081c <ProcessUart2Data+0xb4>)
 80007e8:	6013      	str	r3, [r2, #0]
            temp_buffer_index = 0;
 80007ea:	4b09      	ldr	r3, [pc, #36]	@ (8000810 <ProcessUart2Data+0xa8>)
 80007ec:	2200      	movs	r2, #0
 80007ee:	601a      	str	r2, [r3, #0]
            last_packet_time = HAL_GetTick();
 80007f0:	f001 fa74 	bl	8001cdc <HAL_GetTick>
 80007f4:	4603      	mov	r3, r0
 80007f6:	4a0a      	ldr	r2, [pc, #40]	@ (8000820 <ProcessUart2Data+0xb8>)
 80007f8:	6013      	str	r3, [r2, #0]
}
 80007fa:	bf00      	nop
 80007fc:	3710      	adds	r7, #16
 80007fe:	46bd      	mov	sp, r7
 8000800:	bd80      	pop	{r7, pc}
 8000802:	bf00      	nop
 8000804:	2000c994 	.word	0x2000c994
 8000808:	2000c998 	.word	0x2000c998
 800080c:	080050e4 	.word	0x080050e4
 8000810:	2000c970 	.word	0x2000c970
 8000814:	20000170 	.word	0x20000170
 8000818:	2000c99c 	.word	0x2000c99c
 800081c:	2000c9a0 	.word	0x2000c9a0
 8000820:	2000c990 	.word	0x2000c990

08000824 <PrintUart3Data>:

#endif

#if 1
void PrintUart3Data(uint8_t* data, uint16_t size)
{
 8000824:	b580      	push	{r7, lr}
 8000826:	b084      	sub	sp, #16
 8000828:	af00      	add	r7, sp, #0
 800082a:	6078      	str	r0, [r7, #4]
 800082c:	460b      	mov	r3, r1
 800082e:	807b      	strh	r3, [r7, #2]
	for (int j = 0; j < size; j++)
 8000830:	2300      	movs	r3, #0
 8000832:	60fb      	str	r3, [r7, #12]
 8000834:	e142      	b.n	8000abc <PrintUart3Data+0x298>
	{
		switch (data[j])
 8000836:	68fb      	ldr	r3, [r7, #12]
 8000838:	687a      	ldr	r2, [r7, #4]
 800083a:	4413      	add	r3, r2
 800083c:	781b      	ldrb	r3, [r3, #0]
 800083e:	2b5f      	cmp	r3, #95	@ 0x5f
 8000840:	f000 80e4 	beq.w	8000a0c <PrintUart3Data+0x1e8>
 8000844:	2b5f      	cmp	r3, #95	@ 0x5f
 8000846:	f300 812b 	bgt.w	8000aa0 <PrintUart3Data+0x27c>
 800084a:	2b5c      	cmp	r3, #92	@ 0x5c
 800084c:	d077      	beq.n	800093e <PrintUart3Data+0x11a>
 800084e:	2b5c      	cmp	r3, #92	@ 0x5c
 8000850:	f300 8126 	bgt.w	8000aa0 <PrintUart3Data+0x27c>
 8000854:	2b3c      	cmp	r3, #60	@ 0x3c
 8000856:	d008      	beq.n	800086a <PrintUart3Data+0x46>
 8000858:	2b3c      	cmp	r3, #60	@ 0x3c
 800085a:	f300 8121 	bgt.w	8000aa0 <PrintUart3Data+0x27c>
 800085e:	2b14      	cmp	r3, #20
 8000860:	d038      	beq.n	80008d4 <PrintUart3Data+0xb0>
 8000862:	2b1c      	cmp	r3, #28
 8000864:	f000 80a0 	beq.w	80009a8 <PrintUart3Data+0x184>
            {
            	printf("(Read Data): _TM-T88III.\n");
            }
            break;
		default:
			break;
 8000868:	e11a      	b.n	8000aa0 <PrintUart3Data+0x27c>
			if (data[j+1] == 0x00 && data[j+2] == 0x00 && data[j+3] == 0x0f)
 800086a:	68fb      	ldr	r3, [r7, #12]
 800086c:	3301      	adds	r3, #1
 800086e:	687a      	ldr	r2, [r7, #4]
 8000870:	4413      	add	r3, r2
 8000872:	781b      	ldrb	r3, [r3, #0]
 8000874:	2b00      	cmp	r3, #0
 8000876:	d111      	bne.n	800089c <PrintUart3Data+0x78>
 8000878:	68fb      	ldr	r3, [r7, #12]
 800087a:	3302      	adds	r3, #2
 800087c:	687a      	ldr	r2, [r7, #4]
 800087e:	4413      	add	r3, r2
 8000880:	781b      	ldrb	r3, [r3, #0]
 8000882:	2b00      	cmp	r3, #0
 8000884:	d10a      	bne.n	800089c <PrintUart3Data+0x78>
 8000886:	68fb      	ldr	r3, [r7, #12]
 8000888:	3303      	adds	r3, #3
 800088a:	687a      	ldr	r2, [r7, #4]
 800088c:	4413      	add	r3, r2
 800088e:	781b      	ldrb	r3, [r3, #0]
 8000890:	2b0f      	cmp	r3, #15
 8000892:	d103      	bne.n	800089c <PrintUart3Data+0x78>
				printf("(Read Data): Mo nap may\n");
 8000894:	488f      	ldr	r0, [pc, #572]	@ (8000ad4 <PrintUart3Data+0x2b0>)
 8000896:	f003 fe11 	bl	80044bc <puts>
			break;
 800089a:	e103      	b.n	8000aa4 <PrintUart3Data+0x280>
			else if(data[j+1] == 0x00 && data[j+2] == 0x03 && data[j+3] == 0x0f)
 800089c:	68fb      	ldr	r3, [r7, #12]
 800089e:	3301      	adds	r3, #1
 80008a0:	687a      	ldr	r2, [r7, #4]
 80008a2:	4413      	add	r3, r2
 80008a4:	781b      	ldrb	r3, [r3, #0]
 80008a6:	2b00      	cmp	r3, #0
 80008a8:	f040 80fc 	bne.w	8000aa4 <PrintUart3Data+0x280>
 80008ac:	68fb      	ldr	r3, [r7, #12]
 80008ae:	3302      	adds	r3, #2
 80008b0:	687a      	ldr	r2, [r7, #4]
 80008b2:	4413      	add	r3, r2
 80008b4:	781b      	ldrb	r3, [r3, #0]
 80008b6:	2b03      	cmp	r3, #3
 80008b8:	f040 80f4 	bne.w	8000aa4 <PrintUart3Data+0x280>
 80008bc:	68fb      	ldr	r3, [r7, #12]
 80008be:	3303      	adds	r3, #3
 80008c0:	687a      	ldr	r2, [r7, #4]
 80008c2:	4413      	add	r3, r2
 80008c4:	781b      	ldrb	r3, [r3, #0]
 80008c6:	2b0f      	cmp	r3, #15
 80008c8:	f040 80ec 	bne.w	8000aa4 <PrintUart3Data+0x280>
				printf("(Read Data): Mo nap may (PAPER OUT)\n");
 80008cc:	4882      	ldr	r0, [pc, #520]	@ (8000ad8 <PrintUart3Data+0x2b4>)
 80008ce:	f003 fdf5 	bl	80044bc <puts>
			break;
 80008d2:	e0e7      	b.n	8000aa4 <PrintUart3Data+0x280>
			if (data[j+1] == 0x00 && data[j+2] == 0x00 && data[j+3] == 0x0f)
 80008d4:	68fb      	ldr	r3, [r7, #12]
 80008d6:	3301      	adds	r3, #1
 80008d8:	687a      	ldr	r2, [r7, #4]
 80008da:	4413      	add	r3, r2
 80008dc:	781b      	ldrb	r3, [r3, #0]
 80008de:	2b00      	cmp	r3, #0
 80008e0:	d111      	bne.n	8000906 <PrintUart3Data+0xe2>
 80008e2:	68fb      	ldr	r3, [r7, #12]
 80008e4:	3302      	adds	r3, #2
 80008e6:	687a      	ldr	r2, [r7, #4]
 80008e8:	4413      	add	r3, r2
 80008ea:	781b      	ldrb	r3, [r3, #0]
 80008ec:	2b00      	cmp	r3, #0
 80008ee:	d10a      	bne.n	8000906 <PrintUart3Data+0xe2>
 80008f0:	68fb      	ldr	r3, [r7, #12]
 80008f2:	3303      	adds	r3, #3
 80008f4:	687a      	ldr	r2, [r7, #4]
 80008f6:	4413      	add	r3, r2
 80008f8:	781b      	ldrb	r3, [r3, #0]
 80008fa:	2b0f      	cmp	r3, #15
 80008fc:	d103      	bne.n	8000906 <PrintUart3Data+0xe2>
				printf("(Read Data): Dong nap may\n");
 80008fe:	4877      	ldr	r0, [pc, #476]	@ (8000adc <PrintUart3Data+0x2b8>)
 8000900:	f003 fddc 	bl	80044bc <puts>
			break;
 8000904:	e0d0      	b.n	8000aa8 <PrintUart3Data+0x284>
			else if (data[j+1] == 0x00 && data[j+2] == 0x03 && data[j+3] == 0x0f)
 8000906:	68fb      	ldr	r3, [r7, #12]
 8000908:	3301      	adds	r3, #1
 800090a:	687a      	ldr	r2, [r7, #4]
 800090c:	4413      	add	r3, r2
 800090e:	781b      	ldrb	r3, [r3, #0]
 8000910:	2b00      	cmp	r3, #0
 8000912:	f040 80c9 	bne.w	8000aa8 <PrintUart3Data+0x284>
 8000916:	68fb      	ldr	r3, [r7, #12]
 8000918:	3302      	adds	r3, #2
 800091a:	687a      	ldr	r2, [r7, #4]
 800091c:	4413      	add	r3, r2
 800091e:	781b      	ldrb	r3, [r3, #0]
 8000920:	2b03      	cmp	r3, #3
 8000922:	f040 80c1 	bne.w	8000aa8 <PrintUart3Data+0x284>
 8000926:	68fb      	ldr	r3, [r7, #12]
 8000928:	3303      	adds	r3, #3
 800092a:	687a      	ldr	r2, [r7, #4]
 800092c:	4413      	add	r3, r2
 800092e:	781b      	ldrb	r3, [r3, #0]
 8000930:	2b0f      	cmp	r3, #15
 8000932:	f040 80b9 	bne.w	8000aa8 <PrintUart3Data+0x284>
				printf("(Read Data): Dong nap may (PAPER OUT)\n");
 8000936:	486a      	ldr	r0, [pc, #424]	@ (8000ae0 <PrintUart3Data+0x2bc>)
 8000938:	f003 fdc0 	bl	80044bc <puts>
			break;
 800093c:	e0b4      	b.n	8000aa8 <PrintUart3Data+0x284>
			if (data[j+1] == 0x00 && data[j+2] == 0x00 && data[j+3] == 0x0f)
 800093e:	68fb      	ldr	r3, [r7, #12]
 8000940:	3301      	adds	r3, #1
 8000942:	687a      	ldr	r2, [r7, #4]
 8000944:	4413      	add	r3, r2
 8000946:	781b      	ldrb	r3, [r3, #0]
 8000948:	2b00      	cmp	r3, #0
 800094a:	d111      	bne.n	8000970 <PrintUart3Data+0x14c>
 800094c:	68fb      	ldr	r3, [r7, #12]
 800094e:	3302      	adds	r3, #2
 8000950:	687a      	ldr	r2, [r7, #4]
 8000952:	4413      	add	r3, r2
 8000954:	781b      	ldrb	r3, [r3, #0]
 8000956:	2b00      	cmp	r3, #0
 8000958:	d10a      	bne.n	8000970 <PrintUart3Data+0x14c>
 800095a:	68fb      	ldr	r3, [r7, #12]
 800095c:	3303      	adds	r3, #3
 800095e:	687a      	ldr	r2, [r7, #4]
 8000960:	4413      	add	r3, r2
 8000962:	781b      	ldrb	r3, [r3, #0]
 8000964:	2b0f      	cmp	r3, #15
 8000966:	d103      	bne.n	8000970 <PrintUart3Data+0x14c>
				printf("(Read Data): FEED\n");
 8000968:	485e      	ldr	r0, [pc, #376]	@ (8000ae4 <PrintUart3Data+0x2c0>)
 800096a:	f003 fda7 	bl	80044bc <puts>
			break;
 800096e:	e09d      	b.n	8000aac <PrintUart3Data+0x288>
			else if (data[j+1] == 0x00 && data[j+2] == 0x03 && data[j+3] == 0x0f)
 8000970:	68fb      	ldr	r3, [r7, #12]
 8000972:	3301      	adds	r3, #1
 8000974:	687a      	ldr	r2, [r7, #4]
 8000976:	4413      	add	r3, r2
 8000978:	781b      	ldrb	r3, [r3, #0]
 800097a:	2b00      	cmp	r3, #0
 800097c:	f040 8096 	bne.w	8000aac <PrintUart3Data+0x288>
 8000980:	68fb      	ldr	r3, [r7, #12]
 8000982:	3302      	adds	r3, #2
 8000984:	687a      	ldr	r2, [r7, #4]
 8000986:	4413      	add	r3, r2
 8000988:	781b      	ldrb	r3, [r3, #0]
 800098a:	2b03      	cmp	r3, #3
 800098c:	f040 808e 	bne.w	8000aac <PrintUart3Data+0x288>
 8000990:	68fb      	ldr	r3, [r7, #12]
 8000992:	3303      	adds	r3, #3
 8000994:	687a      	ldr	r2, [r7, #4]
 8000996:	4413      	add	r3, r2
 8000998:	781b      	ldrb	r3, [r3, #0]
 800099a:	2b0f      	cmp	r3, #15
 800099c:	f040 8086 	bne.w	8000aac <PrintUart3Data+0x288>
				printf("(Read Data): FEED (PAPER OUT)\n");
 80009a0:	4851      	ldr	r0, [pc, #324]	@ (8000ae8 <PrintUart3Data+0x2c4>)
 80009a2:	f003 fd8b 	bl	80044bc <puts>
			break;
 80009a6:	e081      	b.n	8000aac <PrintUart3Data+0x288>
			if (data[j+1] == 0x00 && data[j+2] == 0x00 && data[j+3] == 0x0f)
 80009a8:	68fb      	ldr	r3, [r7, #12]
 80009aa:	3301      	adds	r3, #1
 80009ac:	687a      	ldr	r2, [r7, #4]
 80009ae:	4413      	add	r3, r2
 80009b0:	781b      	ldrb	r3, [r3, #0]
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d111      	bne.n	80009da <PrintUart3Data+0x1b6>
 80009b6:	68fb      	ldr	r3, [r7, #12]
 80009b8:	3302      	adds	r3, #2
 80009ba:	687a      	ldr	r2, [r7, #4]
 80009bc:	4413      	add	r3, r2
 80009be:	781b      	ldrb	r3, [r3, #0]
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	d10a      	bne.n	80009da <PrintUart3Data+0x1b6>
 80009c4:	68fb      	ldr	r3, [r7, #12]
 80009c6:	3303      	adds	r3, #3
 80009c8:	687a      	ldr	r2, [r7, #4]
 80009ca:	4413      	add	r3, r2
 80009cc:	781b      	ldrb	r3, [r3, #0]
 80009ce:	2b0f      	cmp	r3, #15
 80009d0:	d103      	bne.n	80009da <PrintUart3Data+0x1b6>
				printf("(Read Data): Turn off machine\n");
 80009d2:	4846      	ldr	r0, [pc, #280]	@ (8000aec <PrintUart3Data+0x2c8>)
 80009d4:	f003 fd72 	bl	80044bc <puts>
			break;
 80009d8:	e06a      	b.n	8000ab0 <PrintUart3Data+0x28c>
			else if (data[j+1] == 0x00 && data[j+2] == 0x03 && data[j+3] == 0x0f)
 80009da:	68fb      	ldr	r3, [r7, #12]
 80009dc:	3301      	adds	r3, #1
 80009de:	687a      	ldr	r2, [r7, #4]
 80009e0:	4413      	add	r3, r2
 80009e2:	781b      	ldrb	r3, [r3, #0]
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d163      	bne.n	8000ab0 <PrintUart3Data+0x28c>
 80009e8:	68fb      	ldr	r3, [r7, #12]
 80009ea:	3302      	adds	r3, #2
 80009ec:	687a      	ldr	r2, [r7, #4]
 80009ee:	4413      	add	r3, r2
 80009f0:	781b      	ldrb	r3, [r3, #0]
 80009f2:	2b03      	cmp	r3, #3
 80009f4:	d15c      	bne.n	8000ab0 <PrintUart3Data+0x28c>
 80009f6:	68fb      	ldr	r3, [r7, #12]
 80009f8:	3303      	adds	r3, #3
 80009fa:	687a      	ldr	r2, [r7, #4]
 80009fc:	4413      	add	r3, r2
 80009fe:	781b      	ldrb	r3, [r3, #0]
 8000a00:	2b0f      	cmp	r3, #15
 8000a02:	d155      	bne.n	8000ab0 <PrintUart3Data+0x28c>
				printf("(Read Data): Turn off machine (PAPER OUT)\n");
 8000a04:	483a      	ldr	r0, [pc, #232]	@ (8000af0 <PrintUart3Data+0x2cc>)
 8000a06:	f003 fd59 	bl	80044bc <puts>
			break;
 8000a0a:	e051      	b.n	8000ab0 <PrintUart3Data+0x28c>
            if (data[j+1] == 0x54 && data[j+2] == 0x4d && data[j+3] == 0x2d && data[j+4] == 0x54 &&
 8000a0c:	68fb      	ldr	r3, [r7, #12]
 8000a0e:	3301      	adds	r3, #1
 8000a10:	687a      	ldr	r2, [r7, #4]
 8000a12:	4413      	add	r3, r2
 8000a14:	781b      	ldrb	r3, [r3, #0]
 8000a16:	2b54      	cmp	r3, #84	@ 0x54
 8000a18:	d14c      	bne.n	8000ab4 <PrintUart3Data+0x290>
 8000a1a:	68fb      	ldr	r3, [r7, #12]
 8000a1c:	3302      	adds	r3, #2
 8000a1e:	687a      	ldr	r2, [r7, #4]
 8000a20:	4413      	add	r3, r2
 8000a22:	781b      	ldrb	r3, [r3, #0]
 8000a24:	2b4d      	cmp	r3, #77	@ 0x4d
 8000a26:	d145      	bne.n	8000ab4 <PrintUart3Data+0x290>
 8000a28:	68fb      	ldr	r3, [r7, #12]
 8000a2a:	3303      	adds	r3, #3
 8000a2c:	687a      	ldr	r2, [r7, #4]
 8000a2e:	4413      	add	r3, r2
 8000a30:	781b      	ldrb	r3, [r3, #0]
 8000a32:	2b2d      	cmp	r3, #45	@ 0x2d
 8000a34:	d13e      	bne.n	8000ab4 <PrintUart3Data+0x290>
 8000a36:	68fb      	ldr	r3, [r7, #12]
 8000a38:	3304      	adds	r3, #4
 8000a3a:	687a      	ldr	r2, [r7, #4]
 8000a3c:	4413      	add	r3, r2
 8000a3e:	781b      	ldrb	r3, [r3, #0]
 8000a40:	2b54      	cmp	r3, #84	@ 0x54
 8000a42:	d137      	bne.n	8000ab4 <PrintUart3Data+0x290>
                data[j+5] == 0x38 && data[j+6] == 0x38 && data[j+7] == 0x49 && data[j+8] == 0x49 &&
 8000a44:	68fb      	ldr	r3, [r7, #12]
 8000a46:	3305      	adds	r3, #5
 8000a48:	687a      	ldr	r2, [r7, #4]
 8000a4a:	4413      	add	r3, r2
 8000a4c:	781b      	ldrb	r3, [r3, #0]
            if (data[j+1] == 0x54 && data[j+2] == 0x4d && data[j+3] == 0x2d && data[j+4] == 0x54 &&
 8000a4e:	2b38      	cmp	r3, #56	@ 0x38
 8000a50:	d130      	bne.n	8000ab4 <PrintUart3Data+0x290>
                data[j+5] == 0x38 && data[j+6] == 0x38 && data[j+7] == 0x49 && data[j+8] == 0x49 &&
 8000a52:	68fb      	ldr	r3, [r7, #12]
 8000a54:	3306      	adds	r3, #6
 8000a56:	687a      	ldr	r2, [r7, #4]
 8000a58:	4413      	add	r3, r2
 8000a5a:	781b      	ldrb	r3, [r3, #0]
 8000a5c:	2b38      	cmp	r3, #56	@ 0x38
 8000a5e:	d129      	bne.n	8000ab4 <PrintUart3Data+0x290>
 8000a60:	68fb      	ldr	r3, [r7, #12]
 8000a62:	3307      	adds	r3, #7
 8000a64:	687a      	ldr	r2, [r7, #4]
 8000a66:	4413      	add	r3, r2
 8000a68:	781b      	ldrb	r3, [r3, #0]
 8000a6a:	2b49      	cmp	r3, #73	@ 0x49
 8000a6c:	d122      	bne.n	8000ab4 <PrintUart3Data+0x290>
 8000a6e:	68fb      	ldr	r3, [r7, #12]
 8000a70:	3308      	adds	r3, #8
 8000a72:	687a      	ldr	r2, [r7, #4]
 8000a74:	4413      	add	r3, r2
 8000a76:	781b      	ldrb	r3, [r3, #0]
 8000a78:	2b49      	cmp	r3, #73	@ 0x49
 8000a7a:	d11b      	bne.n	8000ab4 <PrintUart3Data+0x290>
                data[j+9] == 0x49 && data[j+10] == 0x00)
 8000a7c:	68fb      	ldr	r3, [r7, #12]
 8000a7e:	3309      	adds	r3, #9
 8000a80:	687a      	ldr	r2, [r7, #4]
 8000a82:	4413      	add	r3, r2
 8000a84:	781b      	ldrb	r3, [r3, #0]
                data[j+5] == 0x38 && data[j+6] == 0x38 && data[j+7] == 0x49 && data[j+8] == 0x49 &&
 8000a86:	2b49      	cmp	r3, #73	@ 0x49
 8000a88:	d114      	bne.n	8000ab4 <PrintUart3Data+0x290>
                data[j+9] == 0x49 && data[j+10] == 0x00)
 8000a8a:	68fb      	ldr	r3, [r7, #12]
 8000a8c:	330a      	adds	r3, #10
 8000a8e:	687a      	ldr	r2, [r7, #4]
 8000a90:	4413      	add	r3, r2
 8000a92:	781b      	ldrb	r3, [r3, #0]
 8000a94:	2b00      	cmp	r3, #0
 8000a96:	d10d      	bne.n	8000ab4 <PrintUart3Data+0x290>
            	printf("(Read Data): _TM-T88III.\n");
 8000a98:	4816      	ldr	r0, [pc, #88]	@ (8000af4 <PrintUart3Data+0x2d0>)
 8000a9a:	f003 fd0f 	bl	80044bc <puts>
            break;
 8000a9e:	e009      	b.n	8000ab4 <PrintUart3Data+0x290>
			break;
 8000aa0:	bf00      	nop
 8000aa2:	e008      	b.n	8000ab6 <PrintUart3Data+0x292>
			break;
 8000aa4:	bf00      	nop
 8000aa6:	e006      	b.n	8000ab6 <PrintUart3Data+0x292>
			break;
 8000aa8:	bf00      	nop
 8000aaa:	e004      	b.n	8000ab6 <PrintUart3Data+0x292>
			break;
 8000aac:	bf00      	nop
 8000aae:	e002      	b.n	8000ab6 <PrintUart3Data+0x292>
			break;
 8000ab0:	bf00      	nop
 8000ab2:	e000      	b.n	8000ab6 <PrintUart3Data+0x292>
            break;
 8000ab4:	bf00      	nop
	for (int j = 0; j < size; j++)
 8000ab6:	68fb      	ldr	r3, [r7, #12]
 8000ab8:	3301      	adds	r3, #1
 8000aba:	60fb      	str	r3, [r7, #12]
 8000abc:	887b      	ldrh	r3, [r7, #2]
 8000abe:	68fa      	ldr	r2, [r7, #12]
 8000ac0:	429a      	cmp	r2, r3
 8000ac2:	f6ff aeb8 	blt.w	8000836 <PrintUart3Data+0x12>
		}
	}
	printf("\n");
 8000ac6:	200a      	movs	r0, #10
 8000ac8:	f003 fc9a 	bl	8004400 <putchar>
}
 8000acc:	bf00      	nop
 8000ace:	3710      	adds	r7, #16
 8000ad0:	46bd      	mov	sp, r7
 8000ad2:	bd80      	pop	{r7, pc}
 8000ad4:	080050f4 	.word	0x080050f4
 8000ad8:	0800510c 	.word	0x0800510c
 8000adc:	08005130 	.word	0x08005130
 8000ae0:	0800514c 	.word	0x0800514c
 8000ae4:	08005174 	.word	0x08005174
 8000ae8:	08005188 	.word	0x08005188
 8000aec:	080051a8 	.word	0x080051a8
 8000af0:	080051c8 	.word	0x080051c8
 8000af4:	080051f4 	.word	0x080051f4

08000af8 <Handle_Uart>:
	ui8_status_esp =1U;

}

void Handle_Uart()
{
 8000af8:	b580      	push	{r7, lr}
 8000afa:	b082      	sub	sp, #8
 8000afc:	af00      	add	r7, sp, #0
	//test
	if(USER_RX_Buffer[0] == 't')
 8000afe:	4b4e      	ldr	r3, [pc, #312]	@ (8000c38 <Handle_Uart+0x140>)
 8000b00:	781b      	ldrb	r3, [r3, #0]
 8000b02:	2b74      	cmp	r3, #116	@ 0x74
 8000b04:	d10c      	bne.n	8000b20 <Handle_Uart+0x28>
	{
		USER_RX_Buffer[0]=0;
 8000b06:	4b4c      	ldr	r3, [pc, #304]	@ (8000c38 <Handle_Uart+0x140>)
 8000b08:	2200      	movs	r2, #0
 8000b0a:	701a      	strb	r2, [r3, #0]
		printf("Test \n");
 8000b0c:	484b      	ldr	r0, [pc, #300]	@ (8000c3c <Handle_Uart+0x144>)
 8000b0e:	f003 fcd5 	bl	80044bc <puts>
		fflush(stdout); //  ?ảm bảo đầu ra ngay lập tức
 8000b12:	4b4b      	ldr	r3, [pc, #300]	@ (8000c40 <Handle_Uart+0x148>)
 8000b14:	681b      	ldr	r3, [r3, #0]
 8000b16:	689b      	ldr	r3, [r3, #8]
 8000b18:	4618      	mov	r0, r3
 8000b1a:	f003 fb89 	bl	8004230 <fflush>
        fflush(stdout); // Đảm bảo đầu ra ngay lập tức

        // In ra dữ liệu từ temp_buffer
        test_write_byte();
    }
}
 8000b1e:	e087      	b.n	8000c30 <Handle_Uart+0x138>
    else if (USER_RX_Buffer[0] == 'x')
 8000b20:	4b45      	ldr	r3, [pc, #276]	@ (8000c38 <Handle_Uart+0x140>)
 8000b22:	781b      	ldrb	r3, [r3, #0]
 8000b24:	2b78      	cmp	r3, #120	@ 0x78
 8000b26:	d149      	bne.n	8000bbc <Handle_Uart+0xc4>
        USER_RX_Buffer[0] = 0;
 8000b28:	4b43      	ldr	r3, [pc, #268]	@ (8000c38 <Handle_Uart+0x140>)
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	701a      	strb	r2, [r3, #0]
        printf("Bat dau xoa flash\n");
 8000b2e:	4845      	ldr	r0, [pc, #276]	@ (8000c44 <Handle_Uart+0x14c>)
 8000b30:	f003 fcc4 	bl	80044bc <puts>
        fflush(stdout); //  ?ảm bảo đầu ra ngay lập tức
 8000b34:	4b42      	ldr	r3, [pc, #264]	@ (8000c40 <Handle_Uart+0x148>)
 8000b36:	681b      	ldr	r3, [r3, #0]
 8000b38:	689b      	ldr	r3, [r3, #8]
 8000b3a:	4618      	mov	r0, r3
 8000b3c:	f003 fb78 	bl	8004230 <fflush>
        uint32_t start_tick = HAL_GetTick();
 8000b40:	f001 f8cc 	bl	8001cdc <HAL_GetTick>
 8000b44:	6078      	str	r0, [r7, #4]
        printf("Erasing sector 5\n");
 8000b46:	4840      	ldr	r0, [pc, #256]	@ (8000c48 <Handle_Uart+0x150>)
 8000b48:	f003 fcb8 	bl	80044bc <puts>
        Flash_Erase_sector(FLASH_SECTOR_ADDRESS5);
 8000b4c:	483f      	ldr	r0, [pc, #252]	@ (8000c4c <Handle_Uart+0x154>)
 8000b4e:	f7ff fd55 	bl	80005fc <Flash_Erase_sector>
        printf("Erasing sector 6\n");
 8000b52:	483f      	ldr	r0, [pc, #252]	@ (8000c50 <Handle_Uart+0x158>)
 8000b54:	f003 fcb2 	bl	80044bc <puts>
        Flash_Erase_sector(FLASH_SECTOR_ADDRESS6);
 8000b58:	483e      	ldr	r0, [pc, #248]	@ (8000c54 <Handle_Uart+0x15c>)
 8000b5a:	f7ff fd4f 	bl	80005fc <Flash_Erase_sector>
        printf("Erasing sector 7\n");
 8000b5e:	483e      	ldr	r0, [pc, #248]	@ (8000c58 <Handle_Uart+0x160>)
 8000b60:	f003 fcac 	bl	80044bc <puts>
        Flash_Erase_sector(FLASH_SECTOR_ADDRESS7);
 8000b64:	483d      	ldr	r0, [pc, #244]	@ (8000c5c <Handle_Uart+0x164>)
 8000b66:	f7ff fd49 	bl	80005fc <Flash_Erase_sector>
        printf("Erasing sector 8\n");
 8000b6a:	483d      	ldr	r0, [pc, #244]	@ (8000c60 <Handle_Uart+0x168>)
 8000b6c:	f003 fca6 	bl	80044bc <puts>
        Flash_Erase_sector(FLASH_SECTOR_ADDRESS8);
 8000b70:	483c      	ldr	r0, [pc, #240]	@ (8000c64 <Handle_Uart+0x16c>)
 8000b72:	f7ff fd43 	bl	80005fc <Flash_Erase_sector>
        printf("Erasing sector 9\n");
 8000b76:	483c      	ldr	r0, [pc, #240]	@ (8000c68 <Handle_Uart+0x170>)
 8000b78:	f003 fca0 	bl	80044bc <puts>
        Flash_Erase_sector(FLASH_SECTOR_ADDRESS9);
 8000b7c:	483b      	ldr	r0, [pc, #236]	@ (8000c6c <Handle_Uart+0x174>)
 8000b7e:	f7ff fd3d 	bl	80005fc <Flash_Erase_sector>
        printf("Erasing sector 10\n");
 8000b82:	483b      	ldr	r0, [pc, #236]	@ (8000c70 <Handle_Uart+0x178>)
 8000b84:	f003 fc9a 	bl	80044bc <puts>
        Flash_Erase_sector(FLASH_SECTOR_ADDRESS10);
 8000b88:	483a      	ldr	r0, [pc, #232]	@ (8000c74 <Handle_Uart+0x17c>)
 8000b8a:	f7ff fd37 	bl	80005fc <Flash_Erase_sector>
        printf("Erasing sector 11\n");
 8000b8e:	483a      	ldr	r0, [pc, #232]	@ (8000c78 <Handle_Uart+0x180>)
 8000b90:	f003 fc94 	bl	80044bc <puts>
        Flash_Erase_sector(FLASH_SECTOR_ADDRESS11);
 8000b94:	4839      	ldr	r0, [pc, #228]	@ (8000c7c <Handle_Uart+0x184>)
 8000b96:	f7ff fd31 	bl	80005fc <Flash_Erase_sector>
        uint32_t end_tick = HAL_GetTick();
 8000b9a:	f001 f89f 	bl	8001cdc <HAL_GetTick>
 8000b9e:	6038      	str	r0, [r7, #0]
        printf("Da xoa flash trong %lu ms\r\n", end_tick - start_tick);
 8000ba0:	683a      	ldr	r2, [r7, #0]
 8000ba2:	687b      	ldr	r3, [r7, #4]
 8000ba4:	1ad3      	subs	r3, r2, r3
 8000ba6:	4619      	mov	r1, r3
 8000ba8:	4835      	ldr	r0, [pc, #212]	@ (8000c80 <Handle_Uart+0x188>)
 8000baa:	f003 fc17 	bl	80043dc <iprintf>
        fflush(stdout); //  ?ảm bảo đầu ra ngay lập tức
 8000bae:	4b24      	ldr	r3, [pc, #144]	@ (8000c40 <Handle_Uart+0x148>)
 8000bb0:	681b      	ldr	r3, [r3, #0]
 8000bb2:	689b      	ldr	r3, [r3, #8]
 8000bb4:	4618      	mov	r0, r3
 8000bb6:	f003 fb3b 	bl	8004230 <fflush>
}
 8000bba:	e039      	b.n	8000c30 <Handle_Uart+0x138>
    else if (USER_RX_Buffer[0] == 'r') // Thêm điều kiện để đọc dữ liệu từ flash
 8000bbc:	4b1e      	ldr	r3, [pc, #120]	@ (8000c38 <Handle_Uart+0x140>)
 8000bbe:	781b      	ldrb	r3, [r3, #0]
 8000bc0:	2b72      	cmp	r3, #114	@ 0x72
 8000bc2:	d112      	bne.n	8000bea <Handle_Uart+0xf2>
        USER_RX_Buffer[0] = 0;
 8000bc4:	4b1c      	ldr	r3, [pc, #112]	@ (8000c38 <Handle_Uart+0x140>)
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	701a      	strb	r2, [r3, #0]
        printf("Bat dau doc flash\n");
 8000bca:	482e      	ldr	r0, [pc, #184]	@ (8000c84 <Handle_Uart+0x18c>)
 8000bcc:	f003 fc76 	bl	80044bc <puts>
        fflush(stdout); // Đảm bảo đầu ra ngay lập tức
 8000bd0:	4b1b      	ldr	r3, [pc, #108]	@ (8000c40 <Handle_Uart+0x148>)
 8000bd2:	681b      	ldr	r3, [r3, #0]
 8000bd4:	689b      	ldr	r3, [r3, #8]
 8000bd6:	4618      	mov	r0, r3
 8000bd8:	f003 fb2a 	bl	8004230 <fflush>
        ReadAndPrintFirst4096Bytes(FLASH_SECTOR_ADDRESS5);
 8000bdc:	481b      	ldr	r0, [pc, #108]	@ (8000c4c <Handle_Uart+0x154>)
 8000bde:	f000 f869 	bl	8000cb4 <ReadAndPrintFirst4096Bytes>
        printf("Da doc flash xong. \n");
 8000be2:	4829      	ldr	r0, [pc, #164]	@ (8000c88 <Handle_Uart+0x190>)
 8000be4:	f003 fc6a 	bl	80044bc <puts>
}
 8000be8:	e022      	b.n	8000c30 <Handle_Uart+0x138>
    else if (USER_RX_Buffer[0] == 'c')
 8000bea:	4b13      	ldr	r3, [pc, #76]	@ (8000c38 <Handle_Uart+0x140>)
 8000bec:	781b      	ldrb	r3, [r3, #0]
 8000bee:	2b63      	cmp	r3, #99	@ 0x63
 8000bf0:	d10c      	bne.n	8000c0c <Handle_Uart+0x114>
        USER_RX_Buffer[0] = 0;
 8000bf2:	4b11      	ldr	r3, [pc, #68]	@ (8000c38 <Handle_Uart+0x140>)
 8000bf4:	2200      	movs	r2, #0
 8000bf6:	701a      	strb	r2, [r3, #0]
        printf("Bat dau doc temp_buffer\n");
 8000bf8:	4824      	ldr	r0, [pc, #144]	@ (8000c8c <Handle_Uart+0x194>)
 8000bfa:	f003 fc5f 	bl	80044bc <puts>
        fflush(stdout); // Đảm bảo đầu ra ngay lập tức
 8000bfe:	4b10      	ldr	r3, [pc, #64]	@ (8000c40 <Handle_Uart+0x148>)
 8000c00:	681b      	ldr	r3, [r3, #0]
 8000c02:	689b      	ldr	r3, [r3, #8]
 8000c04:	4618      	mov	r0, r3
 8000c06:	f003 fb13 	bl	8004230 <fflush>
}
 8000c0a:	e011      	b.n	8000c30 <Handle_Uart+0x138>
    else if (USER_RX_Buffer[0] == 'l')
 8000c0c:	4b0a      	ldr	r3, [pc, #40]	@ (8000c38 <Handle_Uart+0x140>)
 8000c0e:	781b      	ldrb	r3, [r3, #0]
 8000c10:	2b6c      	cmp	r3, #108	@ 0x6c
 8000c12:	d10d      	bne.n	8000c30 <Handle_Uart+0x138>
        USER_RX_Buffer[0] = 0;
 8000c14:	4b08      	ldr	r3, [pc, #32]	@ (8000c38 <Handle_Uart+0x140>)
 8000c16:	2200      	movs	r2, #0
 8000c18:	701a      	strb	r2, [r3, #0]
        printf("Bat dau doc temp_buffer\n");
 8000c1a:	481c      	ldr	r0, [pc, #112]	@ (8000c8c <Handle_Uart+0x194>)
 8000c1c:	f003 fc4e 	bl	80044bc <puts>
        fflush(stdout); // Đảm bảo đầu ra ngay lập tức
 8000c20:	4b07      	ldr	r3, [pc, #28]	@ (8000c40 <Handle_Uart+0x148>)
 8000c22:	681b      	ldr	r3, [r3, #0]
 8000c24:	689b      	ldr	r3, [r3, #8]
 8000c26:	4618      	mov	r0, r3
 8000c28:	f003 fb02 	bl	8004230 <fflush>
        test_write_byte();
 8000c2c:	f000 f8b8 	bl	8000da0 <test_write_byte>
}
 8000c30:	bf00      	nop
 8000c32:	3708      	adds	r7, #8
 8000c34:	46bd      	mov	sp, r7
 8000c36:	bd80      	pop	{r7, pc}
 8000c38:	2000c974 	.word	0x2000c974
 8000c3c:	08005210 	.word	0x08005210
 8000c40:	20000018 	.word	0x20000018
 8000c44:	08005218 	.word	0x08005218
 8000c48:	0800522c 	.word	0x0800522c
 8000c4c:	08020000 	.word	0x08020000
 8000c50:	08005240 	.word	0x08005240
 8000c54:	08040000 	.word	0x08040000
 8000c58:	08005254 	.word	0x08005254
 8000c5c:	08060000 	.word	0x08060000
 8000c60:	08005268 	.word	0x08005268
 8000c64:	08080000 	.word	0x08080000
 8000c68:	0800527c 	.word	0x0800527c
 8000c6c:	080a0000 	.word	0x080a0000
 8000c70:	08005290 	.word	0x08005290
 8000c74:	080c0000 	.word	0x080c0000
 8000c78:	080052a4 	.word	0x080052a4
 8000c7c:	080e0000 	.word	0x080e0000
 8000c80:	080052b8 	.word	0x080052b8
 8000c84:	080052d4 	.word	0x080052d4
 8000c88:	080052e8 	.word	0x080052e8
 8000c8c:	080052fc 	.word	0x080052fc

08000c90 <xuly_command_ESP>:

void xuly_command_ESP()
{
 8000c90:	b580      	push	{r7, lr}
 8000c92:	af00      	add	r7, sp, #0
	USER_RX_Buffer[0] = xulyUart.ui8_newinchar;
 8000c94:	4b05      	ldr	r3, [pc, #20]	@ (8000cac <xuly_command_ESP+0x1c>)
 8000c96:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8000c9a:	f893 2713 	ldrb.w	r2, [r3, #1811]	@ 0x713
 8000c9e:	4b04      	ldr	r3, [pc, #16]	@ (8000cb0 <xuly_command_ESP+0x20>)
 8000ca0:	701a      	strb	r2, [r3, #0]
	Handle_Uart();
 8000ca2:	f7ff ff29 	bl	8000af8 <Handle_Uart>
}
 8000ca6:	bf00      	nop
 8000ca8:	bd80      	pop	{r7, pc}
 8000caa:	bf00      	nop
 8000cac:	2000c9a4 	.word	0x2000c9a4
 8000cb0:	2000c974 	.word	0x2000c974

08000cb4 <ReadAndPrintFirst4096Bytes>:
//        }
//    }
//    printf("\n"); // Xuống hàng sau khi in hết dữ liệu
//}

void ReadAndPrintFirst4096Bytes(uint32_t flash_address) {
 8000cb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000cb8:	b08b      	sub	sp, #44	@ 0x2c
 8000cba:	af02      	add	r7, sp, #8
 8000cbc:	6078      	str	r0, [r7, #4]
 8000cbe:	466b      	mov	r3, sp
 8000cc0:	461e      	mov	r6, r3
    uint32_t size = 512; // Kích thước dữ liệu cần đọc
 8000cc2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8000cc6:	617b      	str	r3, [r7, #20]
    uint32_t Rx_Data[size];
 8000cc8:	6979      	ldr	r1, [r7, #20]
 8000cca:	460b      	mov	r3, r1
 8000ccc:	3b01      	subs	r3, #1
 8000cce:	613b      	str	r3, [r7, #16]
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	4688      	mov	r8, r1
 8000cd4:	4699      	mov	r9, r3
 8000cd6:	f04f 0200 	mov.w	r2, #0
 8000cda:	f04f 0300 	mov.w	r3, #0
 8000cde:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8000ce2:	ea43 63d8 	orr.w	r3, r3, r8, lsr #27
 8000ce6:	ea4f 1248 	mov.w	r2, r8, lsl #5
 8000cea:	2300      	movs	r3, #0
 8000cec:	460c      	mov	r4, r1
 8000cee:	461d      	mov	r5, r3
 8000cf0:	f04f 0200 	mov.w	r2, #0
 8000cf4:	f04f 0300 	mov.w	r3, #0
 8000cf8:	016b      	lsls	r3, r5, #5
 8000cfa:	ea43 63d4 	orr.w	r3, r3, r4, lsr #27
 8000cfe:	0162      	lsls	r2, r4, #5
 8000d00:	008b      	lsls	r3, r1, #2
 8000d02:	3307      	adds	r3, #7
 8000d04:	08db      	lsrs	r3, r3, #3
 8000d06:	00db      	lsls	r3, r3, #3
 8000d08:	ebad 0d03 	sub.w	sp, sp, r3
 8000d0c:	ab02      	add	r3, sp, #8
 8000d0e:	3303      	adds	r3, #3
 8000d10:	089b      	lsrs	r3, r3, #2
 8000d12:	009b      	lsls	r3, r3, #2
 8000d14:	60fb      	str	r3, [r7, #12]
    uint8_t u[4];
    int byte_count = 0;
 8000d16:	2300      	movs	r3, #0
 8000d18:	61fb      	str	r3, [r7, #28]

    // Đọc 4096 byte đầu tiên từ flash
    Flash_Read_Data(flash_address, Rx_Data, size);
 8000d1a:	697b      	ldr	r3, [r7, #20]
 8000d1c:	b29b      	uxth	r3, r3
 8000d1e:	461a      	mov	r2, r3
 8000d20:	68f9      	ldr	r1, [r7, #12]
 8000d22:	6878      	ldr	r0, [r7, #4]
 8000d24:	f7ff fcc8 	bl	80006b8 <Flash_Read_Data>

    // In ra dữ liệu đã đọc
    printf("First 512 bytes from flash:\n");
 8000d28:	481b      	ldr	r0, [pc, #108]	@ (8000d98 <ReadAndPrintFirst4096Bytes+0xe4>)
 8000d2a:	f003 fbc7 	bl	80044bc <puts>
    for (int i = 0; i < 512; i++) {
 8000d2e:	2300      	movs	r3, #0
 8000d30:	61bb      	str	r3, [r7, #24]
 8000d32:	e023      	b.n	8000d7c <ReadAndPrintFirst4096Bytes+0xc8>
        byte_count += 4; // Mỗi lần in ra 4 byte
 8000d34:	69fb      	ldr	r3, [r7, #28]
 8000d36:	3304      	adds	r3, #4
 8000d38:	61fb      	str	r3, [r7, #28]

        convertdata(Rx_Data[i], u);
 8000d3a:	68fb      	ldr	r3, [r7, #12]
 8000d3c:	69ba      	ldr	r2, [r7, #24]
 8000d3e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000d42:	f107 0208 	add.w	r2, r7, #8
 8000d46:	4611      	mov	r1, r2
 8000d48:	4618      	mov	r0, r3
 8000d4a:	f7ff fcd2 	bl	80006f2 <convertdata>
        printf("%02x %02x %02x %02x ", u[0], u[1], u[2], u[3]);
 8000d4e:	7a3b      	ldrb	r3, [r7, #8]
 8000d50:	4619      	mov	r1, r3
 8000d52:	7a7b      	ldrb	r3, [r7, #9]
 8000d54:	461a      	mov	r2, r3
 8000d56:	7abb      	ldrb	r3, [r7, #10]
 8000d58:	4618      	mov	r0, r3
 8000d5a:	7afb      	ldrb	r3, [r7, #11]
 8000d5c:	9300      	str	r3, [sp, #0]
 8000d5e:	4603      	mov	r3, r0
 8000d60:	480e      	ldr	r0, [pc, #56]	@ (8000d9c <ReadAndPrintFirst4096Bytes+0xe8>)
 8000d62:	f003 fb3b 	bl	80043dc <iprintf>

        if (byte_count >= 20) {
 8000d66:	69fb      	ldr	r3, [r7, #28]
 8000d68:	2b13      	cmp	r3, #19
 8000d6a:	dd04      	ble.n	8000d76 <ReadAndPrintFirst4096Bytes+0xc2>
            printf("\n"); // Xuống hàng sau mỗi 20 byte
 8000d6c:	200a      	movs	r0, #10
 8000d6e:	f003 fb47 	bl	8004400 <putchar>
            byte_count = 0; // Đặt lại biến đếm
 8000d72:	2300      	movs	r3, #0
 8000d74:	61fb      	str	r3, [r7, #28]
    for (int i = 0; i < 512; i++) {
 8000d76:	69bb      	ldr	r3, [r7, #24]
 8000d78:	3301      	adds	r3, #1
 8000d7a:	61bb      	str	r3, [r7, #24]
 8000d7c:	69bb      	ldr	r3, [r7, #24]
 8000d7e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000d82:	dbd7      	blt.n	8000d34 <ReadAndPrintFirst4096Bytes+0x80>
        }
    }
    printf("\n"); // Xuống hàng sau khi in hết dữ liệu
 8000d84:	200a      	movs	r0, #10
 8000d86:	f003 fb3b 	bl	8004400 <putchar>
 8000d8a:	46b5      	mov	sp, r6
}
 8000d8c:	bf00      	nop
 8000d8e:	3724      	adds	r7, #36	@ 0x24
 8000d90:	46bd      	mov	sp, r7
 8000d92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000d96:	bf00      	nop
 8000d98:	0800538c 	.word	0x0800538c
 8000d9c:	080053a8 	.word	0x080053a8

08000da0 <test_write_byte>:
    }
    printf("\n");
}

void test_write_byte()
{
 8000da0:	b580      	push	{r7, lr}
 8000da2:	f5ad 5d81 	sub.w	sp, sp, #4128	@ 0x1020
 8000da6:	b082      	sub	sp, #8
 8000da8:	af02      	add	r7, sp, #8
	printf("Test read/write flash");
 8000daa:	4899      	ldr	r0, [pc, #612]	@ (8001010 <test_write_byte+0x270>)
 8000dac:	f003 fb16 	bl	80043dc <iprintf>
	uint16_t lentosend;
	uint8_t datatest[4096];
	uint8_t tam =0;
 8000db0:	2300      	movs	r3, #0
 8000db2:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000db6:	f102 021f 	add.w	r2, r2, #31
 8000dba:	7013      	strb	r3, [r2, #0]
	 uint32_t tt;
	 uint32_t tt2;

	 uint32_t totaltam =0;
 8000dbc:	2300      	movs	r3, #0
 8000dbe:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000dc2:	f102 0214 	add.w	r2, r2, #20
 8000dc6:	6013      	str	r3, [r2, #0]
	int numofwords;
	uint32_t u32_addr_data_user =0U;
 8000dc8:	2300      	movs	r3, #0
 8000dca:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000dce:	f102 0210 	add.w	r2, r2, #16
 8000dd2:	6013      	str	r3, [r2, #0]
		}
		USBD_CongLog("\n");
#endif

		/*Khởi tạo giá trị test*/
		tam = 0;
 8000dd4:	2300      	movs	r3, #0
 8000dd6:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000dda:	f102 021f 	add.w	r2, r2, #31
 8000dde:	7013      	strb	r3, [r2, #0]
		for(int j =0; j < 4096; j++)
 8000de0:	2300      	movs	r3, #0
 8000de2:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000de6:	f102 0218 	add.w	r2, r2, #24
 8000dea:	6013      	str	r3, [r2, #0]
 8000dec:	e025      	b.n	8000e3a <test_write_byte+0x9a>
		{
			datatest[j] = tam;
 8000dee:	f107 0320 	add.w	r3, r7, #32
 8000df2:	461a      	mov	r2, r3
 8000df4:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000df8:	f103 0318 	add.w	r3, r3, #24
 8000dfc:	681b      	ldr	r3, [r3, #0]
 8000dfe:	4413      	add	r3, r2
 8000e00:	3b20      	subs	r3, #32
 8000e02:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000e06:	f102 021f 	add.w	r2, r2, #31
 8000e0a:	7812      	ldrb	r2, [r2, #0]
 8000e0c:	701a      	strb	r2, [r3, #0]

				tam++;
 8000e0e:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000e12:	f103 031f 	add.w	r3, r3, #31
 8000e16:	781b      	ldrb	r3, [r3, #0]
 8000e18:	3301      	adds	r3, #1
 8000e1a:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000e1e:	f102 021f 	add.w	r2, r2, #31
 8000e22:	7013      	strb	r3, [r2, #0]
		for(int j =0; j < 4096; j++)
 8000e24:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000e28:	f103 0318 	add.w	r3, r3, #24
 8000e2c:	681b      	ldr	r3, [r3, #0]
 8000e2e:	3301      	adds	r3, #1
 8000e30:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000e34:	f102 0218 	add.w	r2, r2, #24
 8000e38:	6013      	str	r3, [r2, #0]
 8000e3a:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000e3e:	f103 0318 	add.w	r3, r3, #24
 8000e42:	681b      	ldr	r3, [r3, #0]
 8000e44:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8000e48:	dbd1      	blt.n	8000dee <test_write_byte+0x4e>
				if (tam > 0xff) tam = 0;
		}

		/*xóa vùng nhớ*/
		Flash_Erase_sector(FLASH_SECTOR_ADDRESS5);
 8000e4a:	4872      	ldr	r0, [pc, #456]	@ (8001014 <test_write_byte+0x274>)
 8000e4c:	f7ff fbd6 	bl	80005fc <Flash_Erase_sector>

		u32_addr_data_user =FLASH_SECTOR_ADDRESS5;
 8000e50:	4b70      	ldr	r3, [pc, #448]	@ (8001014 <test_write_byte+0x274>)
 8000e52:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000e56:	f102 0210 	add.w	r2, r2, #16
 8000e5a:	6013      	str	r3, [r2, #0]

#if (1)
		lentosend =0x40U;
 8000e5c:	2340      	movs	r3, #64	@ 0x40
 8000e5e:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000e62:	f102 020e 	add.w	r2, r2, #14
 8000e66:	8013      	strh	r3, [r2, #0]
		totaltam+=lentosend;
 8000e68:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000e6c:	f103 030e 	add.w	r3, r3, #14
 8000e70:	881b      	ldrh	r3, [r3, #0]
 8000e72:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000e76:	f102 0214 	add.w	r2, r2, #20
 8000e7a:	6812      	ldr	r2, [r2, #0]
 8000e7c:	4413      	add	r3, r2
 8000e7e:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000e82:	f102 0214 	add.w	r2, r2, #20
 8000e86:	6013      	str	r3, [r2, #0]

		numofwords = lentosend;
 8000e88:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000e8c:	f103 030e 	add.w	r3, r3, #14
 8000e90:	881b      	ldrh	r3, [r3, #0]
 8000e92:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000e96:	f102 0208 	add.w	r2, r2, #8
 8000e9a:	6013      	str	r3, [r2, #0]
		tt = HAL_GetTick();
 8000e9c:	f000 ff1e 	bl	8001cdc <HAL_GetTick>
 8000ea0:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000ea4:	f103 0304 	add.w	r3, r3, #4
 8000ea8:	6018      	str	r0, [r3, #0]
		Flash_Write_byte(u32_addr_data_user, (uint8_t *)datatest, numofwords);
 8000eaa:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000eae:	f103 0308 	add.w	r3, r3, #8
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	b29a      	uxth	r2, r3
 8000eb6:	463b      	mov	r3, r7
 8000eb8:	4619      	mov	r1, r3
 8000eba:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000ebe:	f103 0310 	add.w	r3, r3, #16
 8000ec2:	6818      	ldr	r0, [r3, #0]
 8000ec4:	f7ff fbc4 	bl	8000650 <Flash_Write_byte>
		tt2 = HAL_GetTick();
 8000ec8:	f000 ff08 	bl	8001cdc <HAL_GetTick>
 8000ecc:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000ed0:	6018      	str	r0, [r3, #0]
		tt2 -= tt;
 8000ed2:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000ed6:	681a      	ldr	r2, [r3, #0]
 8000ed8:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000edc:	f103 0304 	add.w	r3, r3, #4
 8000ee0:	681b      	ldr	r3, [r3, #0]
 8000ee2:	1ad3      	subs	r3, r2, r3
 8000ee4:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000ee8:	6013      	str	r3, [r2, #0]
		printf("\n Write index =%d, addr = %x, size = %d, time = %d\n",0U, u32_addr_data_user , numofwords, tt2);
 8000eea:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	9300      	str	r3, [sp, #0]
 8000ef2:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000ef6:	f103 0308 	add.w	r3, r3, #8
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000f00:	f102 0210 	add.w	r2, r2, #16
 8000f04:	6812      	ldr	r2, [r2, #0]
 8000f06:	2100      	movs	r1, #0
 8000f08:	4843      	ldr	r0, [pc, #268]	@ (8001018 <test_write_byte+0x278>)
 8000f0a:	f003 fa67 	bl	80043dc <iprintf>
		u32_addr_data_user +=lentosend;
 8000f0e:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000f12:	f103 030e 	add.w	r3, r3, #14
 8000f16:	881b      	ldrh	r3, [r3, #0]
 8000f18:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000f1c:	f102 0210 	add.w	r2, r2, #16
 8000f20:	6812      	ldr	r2, [r2, #0]
 8000f22:	4413      	add	r3, r2
 8000f24:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000f28:	f102 0210 	add.w	r2, r2, #16
 8000f2c:	6013      	str	r3, [r2, #0]

		//chiều dài là số lẻ 4 thì bị sai?????????????????
		lentosend =0x15U;
 8000f2e:	2315      	movs	r3, #21
 8000f30:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000f34:	f102 020e 	add.w	r2, r2, #14
 8000f38:	8013      	strh	r3, [r2, #0]
//		lentosend =0x18U;

		totaltam+=lentosend;
 8000f3a:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000f3e:	f103 030e 	add.w	r3, r3, #14
 8000f42:	881b      	ldrh	r3, [r3, #0]
 8000f44:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000f48:	f102 0214 	add.w	r2, r2, #20
 8000f4c:	6812      	ldr	r2, [r2, #0]
 8000f4e:	4413      	add	r3, r2
 8000f50:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000f54:	f102 0214 	add.w	r2, r2, #20
 8000f58:	6013      	str	r3, [r2, #0]

		numofwords = lentosend;
 8000f5a:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000f5e:	f103 030e 	add.w	r3, r3, #14
 8000f62:	881b      	ldrh	r3, [r3, #0]
 8000f64:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000f68:	f102 0208 	add.w	r2, r2, #8
 8000f6c:	6013      	str	r3, [r2, #0]
		tt = HAL_GetTick();
 8000f6e:	f000 feb5 	bl	8001cdc <HAL_GetTick>
 8000f72:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000f76:	f103 0304 	add.w	r3, r3, #4
 8000f7a:	6018      	str	r0, [r3, #0]
		Flash_Write_byte(u32_addr_data_user, (uint8_t *)datatest, numofwords);
 8000f7c:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000f80:	f103 0308 	add.w	r3, r3, #8
 8000f84:	681b      	ldr	r3, [r3, #0]
 8000f86:	b29a      	uxth	r2, r3
 8000f88:	463b      	mov	r3, r7
 8000f8a:	4619      	mov	r1, r3
 8000f8c:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000f90:	f103 0310 	add.w	r3, r3, #16
 8000f94:	6818      	ldr	r0, [r3, #0]
 8000f96:	f7ff fb5b 	bl	8000650 <Flash_Write_byte>
		tt2 = HAL_GetTick();
 8000f9a:	f000 fe9f 	bl	8001cdc <HAL_GetTick>
 8000f9e:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000fa2:	6018      	str	r0, [r3, #0]
		tt2 -= tt;
 8000fa4:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000fa8:	681a      	ldr	r2, [r3, #0]
 8000faa:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000fae:	f103 0304 	add.w	r3, r3, #4
 8000fb2:	681b      	ldr	r3, [r3, #0]
 8000fb4:	1ad3      	subs	r3, r2, r3
 8000fb6:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000fba:	6013      	str	r3, [r2, #0]
		printf("\n Write index =%d, addr = %x, size = %d, time = %d\n",1U, u32_addr_data_user , numofwords, tt2);
 8000fbc:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000fc0:	681b      	ldr	r3, [r3, #0]
 8000fc2:	9300      	str	r3, [sp, #0]
 8000fc4:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000fc8:	f103 0308 	add.w	r3, r3, #8
 8000fcc:	681b      	ldr	r3, [r3, #0]
 8000fce:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000fd2:	f102 0210 	add.w	r2, r2, #16
 8000fd6:	6812      	ldr	r2, [r2, #0]
 8000fd8:	2101      	movs	r1, #1
 8000fda:	480f      	ldr	r0, [pc, #60]	@ (8001018 <test_write_byte+0x278>)
 8000fdc:	f003 f9fe 	bl	80043dc <iprintf>
		u32_addr_data_user +=lentosend;
 8000fe0:	f507 5380 	add.w	r3, r7, #4096	@ 0x1000
 8000fe4:	f103 030e 	add.w	r3, r3, #14
 8000fe8:	881b      	ldrh	r3, [r3, #0]
 8000fea:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000fee:	f102 0210 	add.w	r2, r2, #16
 8000ff2:	6812      	ldr	r2, [r2, #0]
 8000ff4:	4413      	add	r3, r2
 8000ff6:	f507 5280 	add.w	r2, r7, #4096	@ 0x1000
 8000ffa:	f102 0210 	add.w	r2, r2, #16
 8000ffe:	6013      	str	r3, [r2, #0]
#endif

		printf("--------------End Test write file------------------------------\n");
 8001000:	4806      	ldr	r0, [pc, #24]	@ (800101c <test_write_byte+0x27c>)
 8001002:	f003 fa5b 	bl	80044bc <puts>

}
 8001006:	bf00      	nop
 8001008:	f507 5781 	add.w	r7, r7, #4128	@ 0x1020
 800100c:	46bd      	mov	sp, r7
 800100e:	bd80      	pop	{r7, pc}
 8001010:	08005440 	.word	0x08005440
 8001014:	08020000 	.word	0x08020000
 8001018:	08005458 	.word	0x08005458
 800101c:	0800548c 	.word	0x0800548c

08001020 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001020:	b590      	push	{r4, r7, lr}
 8001022:	b083      	sub	sp, #12
 8001024:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001026:	f000 fdf5 	bl	8001c14 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800102a:	f000 f939 	bl	80012a0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800102e:	f000 f9fb 	bl	8001428 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8001032:	f000 f97b 	bl	800132c <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 8001036:	f000 f9a3 	bl	8001380 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 800103a:	f000 f9cb 	bl	80013d4 <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */
  HAL_GPIO_WritePin(GPIOC, EN1_Pin, 1);
 800103e:	2201      	movs	r2, #1
 8001040:	2110      	movs	r1, #16
 8001042:	4887      	ldr	r0, [pc, #540]	@ (8001260 <main+0x240>)
 8001044:	f001 fc74 	bl	8002930 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, EN2_Pin, 0);
 8001048:	2200      	movs	r2, #0
 800104a:	2120      	movs	r1, #32
 800104c:	4884      	ldr	r0, [pc, #528]	@ (8001260 <main+0x240>)
 800104e:	f001 fc6f 	bl	8002930 <HAL_GPIO_WritePin>

  xulyUart.CountTX = 0;
 8001052:	4b84      	ldr	r3, [pc, #528]	@ (8001264 <main+0x244>)
 8001054:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001058:	461a      	mov	r2, r3
 800105a:	2300      	movs	r3, #0
 800105c:	f8c2 3718 	str.w	r3, [r2, #1816]	@ 0x718
  xulyUart.ui8_indexUart = 0;
 8001060:	4b80      	ldr	r3, [pc, #512]	@ (8001264 <main+0x244>)
 8001062:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001066:	2200      	movs	r2, #0
 8001068:	f883 2715 	strb.w	r2, [r3, #1813]	@ 0x715

  HAL_UART_Receive_IT(&huart1, xulyUart.ui8_RX_buf, 1);
 800106c:	2201      	movs	r2, #1
 800106e:	497d      	ldr	r1, [pc, #500]	@ (8001264 <main+0x244>)
 8001070:	487d      	ldr	r0, [pc, #500]	@ (8001268 <main+0x248>)
 8001072:	f002 f9eb 	bl	800344c <HAL_UART_Receive_IT>
  HAL_UARTEx_ReceiveToIdle_IT(&huart2, xulyUart.ui8_rx2Data, BUFFER_SIZE);
 8001076:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800107a:	497c      	ldr	r1, [pc, #496]	@ (800126c <main+0x24c>)
 800107c:	487c      	ldr	r0, [pc, #496]	@ (8001270 <main+0x250>)
 800107e:	f002 fa0a 	bl	8003496 <HAL_UARTEx_ReceiveToIdle_IT>
  HAL_UARTEx_ReceiveToIdle_IT(&huart3, xulyUart.ui8_rx3Data, BUFFER_SIZE);
 8001082:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001086:	497b      	ldr	r1, [pc, #492]	@ (8001274 <main+0x254>)
 8001088:	487b      	ldr	r0, [pc, #492]	@ (8001278 <main+0x258>)
 800108a:	f002 fa04 	bl	8003496 <HAL_UARTEx_ReceiveToIdle_IT>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
      if (xulyUart.ui32_timer < HAL_GetTick()) {
 800108e:	4b75      	ldr	r3, [pc, #468]	@ (8001264 <main+0x244>)
 8001090:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001094:	f8d3 4720 	ldr.w	r4, [r3, #1824]	@ 0x720
 8001098:	f000 fe20 	bl	8001cdc <HAL_GetTick>
 800109c:	4603      	mov	r3, r0
 800109e:	429c      	cmp	r4, r3
 80010a0:	d20e      	bcs.n	80010c0 <main+0xa0>
          xulyUart.ui32_timer = HAL_GetTick() + 1000;
 80010a2:	f000 fe1b 	bl	8001cdc <HAL_GetTick>
 80010a6:	4603      	mov	r3, r0
 80010a8:	f503 737a 	add.w	r3, r3, #1000	@ 0x3e8
 80010ac:	4a6d      	ldr	r2, [pc, #436]	@ (8001264 <main+0x244>)
 80010ae:	f502 42c0 	add.w	r2, r2, #24576	@ 0x6000
 80010b2:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
          HAL_GPIO_TogglePin(GPIOD, LED_Pin);
 80010b6:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80010ba:	4870      	ldr	r0, [pc, #448]	@ (800127c <main+0x25c>)
 80010bc:	f001 fc50 	bl	8002960 <HAL_GPIO_TogglePin>
      }

      if (uart2_data_ready && (HAL_GetTick() - uart2_start_time >= WAIT_TIME_MS)) {
 80010c0:	4b6f      	ldr	r3, [pc, #444]	@ (8001280 <main+0x260>)
 80010c2:	781b      	ldrb	r3, [r3, #0]
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	d013      	beq.n	80010f0 <main+0xd0>
 80010c8:	f000 fe08 	bl	8001cdc <HAL_GetTick>
 80010cc:	4602      	mov	r2, r0
 80010ce:	4b6d      	ldr	r3, [pc, #436]	@ (8001284 <main+0x264>)
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	1ad3      	subs	r3, r2, r3
 80010d4:	2b13      	cmp	r3, #19
 80010d6:	d90b      	bls.n	80010f0 <main+0xd0>
          ProcessUart2Data(xulyUart.ui8_rx2Data, xulyUart.ui16_tx3Size);
 80010d8:	4b62      	ldr	r3, [pc, #392]	@ (8001264 <main+0x244>)
 80010da:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80010de:	f8b3 373e 	ldrh.w	r3, [r3, #1854]	@ 0x73e
 80010e2:	4619      	mov	r1, r3
 80010e4:	4861      	ldr	r0, [pc, #388]	@ (800126c <main+0x24c>)
 80010e6:	f7ff fb3f 	bl	8000768 <ProcessUart2Data>
          uart2_data_ready = 0;
 80010ea:	4b65      	ldr	r3, [pc, #404]	@ (8001280 <main+0x260>)
 80010ec:	2200      	movs	r2, #0
 80010ee:	701a      	strb	r2, [r3, #0]
//          printf("Packet count reset due to inactivity.\n");
//          last_packet_time = HAL_GetTick();  // Cập nhật lại th�?i gian nhận gói cuối cùng
//      }

      // Kiểm tra nếu đã quá thời gian RESET_TIME_MS mà không nhận được gói dữ liệu nào
      if (HAL_GetTick() - last_packet_time >= RESET_TIME_MS) {
 80010f0:	f000 fdf4 	bl	8001cdc <HAL_GetTick>
 80010f4:	4602      	mov	r2, r0
 80010f6:	4b64      	ldr	r3, [pc, #400]	@ (8001288 <main+0x268>)
 80010f8:	681b      	ldr	r3, [r3, #0]
 80010fa:	1ad3      	subs	r3, r2, r3
 80010fc:	f247 522f 	movw	r2, #29999	@ 0x752f
 8001100:	4293      	cmp	r3, r2
 8001102:	d90a      	bls.n	800111a <main+0xfa>
//          printf("Packet count reset due to inactivity.\n");

          packetCount = 0;  // Reset bộ đếm gói
 8001104:	4b61      	ldr	r3, [pc, #388]	@ (800128c <main+0x26c>)
 8001106:	2200      	movs	r2, #0
 8001108:	601a      	str	r2, [r3, #0]
          resetFlag = 1; // Đặt lại cờ để nhận gói mới
 800110a:	4b61      	ldr	r3, [pc, #388]	@ (8001290 <main+0x270>)
 800110c:	2201      	movs	r2, #1
 800110e:	701a      	strb	r2, [r3, #0]
          last_packet_time = HAL_GetTick();  // Cập nhật lại thời gian nhận gói cuối cùng
 8001110:	f000 fde4 	bl	8001cdc <HAL_GetTick>
 8001114:	4603      	mov	r3, r0
 8001116:	4a5c      	ldr	r2, [pc, #368]	@ (8001288 <main+0x268>)
 8001118:	6013      	str	r3, [r2, #0]
      }

	  if(xulyUart.uart3_receivedData == 1 && xulyUart.uart2_processingData == 0)
 800111a:	4b52      	ldr	r3, [pc, #328]	@ (8001264 <main+0x244>)
 800111c:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001120:	f8d3 3738 	ldr.w	r3, [r3, #1848]	@ 0x738
 8001124:	2b01      	cmp	r3, #1
 8001126:	d11e      	bne.n	8001166 <main+0x146>
 8001128:	4b4e      	ldr	r3, [pc, #312]	@ (8001264 <main+0x244>)
 800112a:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800112e:	f8d3 372c 	ldr.w	r3, [r3, #1836]	@ 0x72c
 8001132:	2b00      	cmp	r3, #0
 8001134:	d117      	bne.n	8001166 <main+0x146>
	  {
		  HAL_UART_Transmit_IT(&huart2, xulyUart.ui8_tx2Data, xulyUart.ui16_tx2Size);
 8001136:	4b4b      	ldr	r3, [pc, #300]	@ (8001264 <main+0x244>)
 8001138:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800113c:	f8b3 373c 	ldrh.w	r3, [r3, #1852]	@ 0x73c
 8001140:	461a      	mov	r2, r3
 8001142:	4954      	ldr	r1, [pc, #336]	@ (8001294 <main+0x274>)
 8001144:	484a      	ldr	r0, [pc, #296]	@ (8001270 <main+0x250>)
 8001146:	f002 f94c 	bl	80033e2 <HAL_UART_Transmit_IT>
//		  ProcessUart2Data(xulyUart.ui8_tx2Data, xulyUart.ui16_tx2Size);
		  xulyUart.uart2_processingData = 1;
 800114a:	4b46      	ldr	r3, [pc, #280]	@ (8001264 <main+0x244>)
 800114c:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001150:	461a      	mov	r2, r3
 8001152:	2301      	movs	r3, #1
 8001154:	f8c2 372c 	str.w	r3, [r2, #1836]	@ 0x72c
		  xulyUart.uart3_receivedData = 0;
 8001158:	4b42      	ldr	r3, [pc, #264]	@ (8001264 <main+0x244>)
 800115a:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800115e:	461a      	mov	r2, r3
 8001160:	2300      	movs	r3, #0
 8001162:	f8c2 3738 	str.w	r3, [r2, #1848]	@ 0x738
	  }
	  //nhan data tu uart 2 gui cho uart3
	  if(xulyUart.uart2_receivedData == 1 && xulyUart.uart3_processingData == 0)
 8001166:	4b3f      	ldr	r3, [pc, #252]	@ (8001264 <main+0x244>)
 8001168:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800116c:	f8d3 3734 	ldr.w	r3, [r3, #1844]	@ 0x734
 8001170:	2b01      	cmp	r3, #1
 8001172:	d11e      	bne.n	80011b2 <main+0x192>
 8001174:	4b3b      	ldr	r3, [pc, #236]	@ (8001264 <main+0x244>)
 8001176:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800117a:	f8d3 3730 	ldr.w	r3, [r3, #1840]	@ 0x730
 800117e:	2b00      	cmp	r3, #0
 8001180:	d117      	bne.n	80011b2 <main+0x192>
	  {
		  HAL_UART_Transmit_IT(&huart3, xulyUart.ui8_tx3Data, xulyUart.ui16_tx3Size);
 8001182:	4b38      	ldr	r3, [pc, #224]	@ (8001264 <main+0x244>)
 8001184:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001188:	f8b3 373e 	ldrh.w	r3, [r3, #1854]	@ 0x73e
 800118c:	461a      	mov	r2, r3
 800118e:	4942      	ldr	r1, [pc, #264]	@ (8001298 <main+0x278>)
 8001190:	4839      	ldr	r0, [pc, #228]	@ (8001278 <main+0x258>)
 8001192:	f002 f926 	bl	80033e2 <HAL_UART_Transmit_IT>
		  xulyUart.uart3_processingData = 1;
 8001196:	4b33      	ldr	r3, [pc, #204]	@ (8001264 <main+0x244>)
 8001198:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800119c:	461a      	mov	r2, r3
 800119e:	2301      	movs	r3, #1
 80011a0:	f8c2 3730 	str.w	r3, [r2, #1840]	@ 0x730
		  xulyUart.uart2_receivedData = 0;
 80011a4:	4b2f      	ldr	r3, [pc, #188]	@ (8001264 <main+0x244>)
 80011a6:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80011aa:	461a      	mov	r2, r3
 80011ac:	2300      	movs	r3, #0
 80011ae:	f8c2 3734 	str.w	r3, [r2, #1844]	@ 0x734
	  }

#if 1
	  if(xulyUart.CountTX < xulyUart.ui8_indexUart)
 80011b2:	4b2c      	ldr	r3, [pc, #176]	@ (8001264 <main+0x244>)
 80011b4:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80011b8:	f8d3 3718 	ldr.w	r3, [r3, #1816]	@ 0x718
 80011bc:	4a29      	ldr	r2, [pc, #164]	@ (8001264 <main+0x244>)
 80011be:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 80011c2:	f892 2715 	ldrb.w	r2, [r2, #1813]	@ 0x715
 80011c6:	4293      	cmp	r3, r2
 80011c8:	d238      	bcs.n	800123c <main+0x21c>
	  {
		  if(xulyUart.ui8_busy == 0)
 80011ca:	4b26      	ldr	r3, [pc, #152]	@ (8001264 <main+0x244>)
 80011cc:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80011d0:	f893 3712 	ldrb.w	r3, [r3, #1810]	@ 0x712
 80011d4:	2b00      	cmp	r3, #0
 80011d6:	d131      	bne.n	800123c <main+0x21c>
		  {
			  int vitridoctin = xulyUart.CountTX % 1000;
 80011d8:	4b22      	ldr	r3, [pc, #136]	@ (8001264 <main+0x244>)
 80011da:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80011de:	f8d3 2718 	ldr.w	r2, [r3, #1816]	@ 0x718
 80011e2:	4b2e      	ldr	r3, [pc, #184]	@ (800129c <main+0x27c>)
 80011e4:	fba3 1302 	umull	r1, r3, r3, r2
 80011e8:	099b      	lsrs	r3, r3, #6
 80011ea:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80011ee:	fb01 f303 	mul.w	r3, r1, r3
 80011f2:	1ad3      	subs	r3, r2, r3
 80011f4:	607b      	str	r3, [r7, #4]
			  uint8_t inchar = xulyUart.ui8_str[vitridoctin];
 80011f6:	4a1b      	ldr	r2, [pc, #108]	@ (8001264 <main+0x244>)
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	4413      	add	r3, r2
 80011fc:	3302      	adds	r3, #2
 80011fe:	781b      	ldrb	r3, [r3, #0]
 8001200:	70fb      	strb	r3, [r7, #3]
			  xulyUart.CountTX++;
 8001202:	4b18      	ldr	r3, [pc, #96]	@ (8001264 <main+0x244>)
 8001204:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001208:	f8d3 3718 	ldr.w	r3, [r3, #1816]	@ 0x718
 800120c:	3301      	adds	r3, #1
 800120e:	4a15      	ldr	r2, [pc, #84]	@ (8001264 <main+0x244>)
 8001210:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 8001214:	f8c2 3718 	str.w	r3, [r2, #1816]	@ 0x718
			  xulyUart.count++;
 8001218:	4b12      	ldr	r3, [pc, #72]	@ (8001264 <main+0x244>)
 800121a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800121e:	f893 371c 	ldrb.w	r3, [r3, #1820]	@ 0x71c
 8001222:	3301      	adds	r3, #1
 8001224:	b2da      	uxtb	r2, r3
 8001226:	4b0f      	ldr	r3, [pc, #60]	@ (8001264 <main+0x244>)
 8001228:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800122c:	f883 271c 	strb.w	r2, [r3, #1820]	@ 0x71c
			  xulyUart.ui8_busy = 1;
 8001230:	4b0c      	ldr	r3, [pc, #48]	@ (8001264 <main+0x244>)
 8001232:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001236:	2201      	movs	r2, #1
 8001238:	f883 2712 	strb.w	r2, [r3, #1810]	@ 0x712
//			  HAL_UART_Transmit_IT(&huart2, &inchar, 1);
		  }
	  }

	  if(xulyUart.ui8_newpagkage == 1)
 800123c:	4b09      	ldr	r3, [pc, #36]	@ (8001264 <main+0x244>)
 800123e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001242:	f893 3716 	ldrb.w	r3, [r3, #1814]	@ 0x716
 8001246:	2b01      	cmp	r3, #1
 8001248:	f47f af21 	bne.w	800108e <main+0x6e>
	  {
//		  HAL_UART_Transmit(&huart2, (uint8_t *) xulyUart.ui8_str,xulyUart.ui8_indexUart, 100);
		  xulyUart.ui8_newpagkage = 0;
 800124c:	4b05      	ldr	r3, [pc, #20]	@ (8001264 <main+0x244>)
 800124e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001252:	2200      	movs	r2, #0
 8001254:	f883 2716 	strb.w	r2, [r3, #1814]	@ 0x716
		  xuly_command_ESP();
 8001258:	f7ff fd1a 	bl	8000c90 <xuly_command_ESP>
      if (xulyUart.ui32_timer < HAL_GetTick()) {
 800125c:	e717      	b.n	800108e <main+0x6e>
 800125e:	bf00      	nop
 8001260:	40020800 	.word	0x40020800
 8001264:	2000c9a4 	.word	0x2000c9a4
 8001268:	20000098 	.word	0x20000098
 800126c:	2000f0c1 	.word	0x2000f0c1
 8001270:	200000e0 	.word	0x200000e0
 8001274:	200100c1 	.word	0x200100c1
 8001278:	20000128 	.word	0x20000128
 800127c:	40020c00 	.word	0x40020c00
 8001280:	2000c988 	.word	0x2000c988
 8001284:	2000c98c 	.word	0x2000c98c
 8001288:	2000c990 	.word	0x2000c990
 800128c:	2000c994 	.word	0x2000c994
 8001290:	2000c998 	.word	0x2000c998
 8001294:	200110c1 	.word	0x200110c1
 8001298:	200120c1 	.word	0x200120c1
 800129c:	10624dd3 	.word	0x10624dd3

080012a0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80012a0:	b580      	push	{r7, lr}
 80012a2:	b092      	sub	sp, #72	@ 0x48
 80012a4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012a6:	f107 0318 	add.w	r3, r7, #24
 80012aa:	2230      	movs	r2, #48	@ 0x30
 80012ac:	2100      	movs	r1, #0
 80012ae:	4618      	mov	r0, r3
 80012b0:	f003 f9e4 	bl	800467c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80012b4:	1d3b      	adds	r3, r7, #4
 80012b6:	2200      	movs	r2, #0
 80012b8:	601a      	str	r2, [r3, #0]
 80012ba:	605a      	str	r2, [r3, #4]
 80012bc:	609a      	str	r2, [r3, #8]
 80012be:	60da      	str	r2, [r3, #12]
 80012c0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80012c2:	2301      	movs	r3, #1
 80012c4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80012c6:	2301      	movs	r3, #1
 80012c8:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80012ca:	2302      	movs	r3, #2
 80012cc:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80012ce:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80012d2:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLM = 20;
 80012d4:	2314      	movs	r3, #20
 80012d6:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 192;
 80012d8:	23c0      	movs	r3, #192	@ 0xc0
 80012da:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80012dc:	2302      	movs	r3, #2
 80012de:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80012e0:	2304      	movs	r3, #4
 80012e2:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012e4:	f107 0318 	add.w	r3, r7, #24
 80012e8:	4618      	mov	r0, r3
 80012ea:	f001 fb53 	bl	8002994 <HAL_RCC_OscConfig>
 80012ee:	4603      	mov	r3, r0
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	d001      	beq.n	80012f8 <SystemClock_Config+0x58>
  {
    Error_Handler();
 80012f4:	f000 fa7c 	bl	80017f0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80012f8:	230f      	movs	r3, #15
 80012fa:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80012fc:	2302      	movs	r3, #2
 80012fe:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001300:	2300      	movs	r3, #0
 8001302:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001304:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001308:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800130a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800130e:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001310:	1d3b      	adds	r3, r7, #4
 8001312:	2103      	movs	r1, #3
 8001314:	4618      	mov	r0, r3
 8001316:	f001 fd91 	bl	8002e3c <HAL_RCC_ClockConfig>
 800131a:	4603      	mov	r3, r0
 800131c:	2b00      	cmp	r3, #0
 800131e:	d001      	beq.n	8001324 <SystemClock_Config+0x84>
  {
    Error_Handler();
 8001320:	f000 fa66 	bl	80017f0 <Error_Handler>
  }
}
 8001324:	bf00      	nop
 8001326:	3748      	adds	r7, #72	@ 0x48
 8001328:	46bd      	mov	sp, r7
 800132a:	bd80      	pop	{r7, pc}

0800132c <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 800132c:	b580      	push	{r7, lr}
 800132e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001330:	4b11      	ldr	r3, [pc, #68]	@ (8001378 <MX_USART1_UART_Init+0x4c>)
 8001332:	4a12      	ldr	r2, [pc, #72]	@ (800137c <MX_USART1_UART_Init+0x50>)
 8001334:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8001336:	4b10      	ldr	r3, [pc, #64]	@ (8001378 <MX_USART1_UART_Init+0x4c>)
 8001338:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800133c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800133e:	4b0e      	ldr	r3, [pc, #56]	@ (8001378 <MX_USART1_UART_Init+0x4c>)
 8001340:	2200      	movs	r2, #0
 8001342:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001344:	4b0c      	ldr	r3, [pc, #48]	@ (8001378 <MX_USART1_UART_Init+0x4c>)
 8001346:	2200      	movs	r2, #0
 8001348:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800134a:	4b0b      	ldr	r3, [pc, #44]	@ (8001378 <MX_USART1_UART_Init+0x4c>)
 800134c:	2200      	movs	r2, #0
 800134e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001350:	4b09      	ldr	r3, [pc, #36]	@ (8001378 <MX_USART1_UART_Init+0x4c>)
 8001352:	220c      	movs	r2, #12
 8001354:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001356:	4b08      	ldr	r3, [pc, #32]	@ (8001378 <MX_USART1_UART_Init+0x4c>)
 8001358:	2200      	movs	r2, #0
 800135a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800135c:	4b06      	ldr	r3, [pc, #24]	@ (8001378 <MX_USART1_UART_Init+0x4c>)
 800135e:	2200      	movs	r2, #0
 8001360:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001362:	4805      	ldr	r0, [pc, #20]	@ (8001378 <MX_USART1_UART_Init+0x4c>)
 8001364:	f001 ff6a 	bl	800323c <HAL_UART_Init>
 8001368:	4603      	mov	r3, r0
 800136a:	2b00      	cmp	r3, #0
 800136c:	d001      	beq.n	8001372 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800136e:	f000 fa3f 	bl	80017f0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001372:	bf00      	nop
 8001374:	bd80      	pop	{r7, pc}
 8001376:	bf00      	nop
 8001378:	20000098 	.word	0x20000098
 800137c:	40011000 	.word	0x40011000

08001380 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001380:	b580      	push	{r7, lr}
 8001382:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001384:	4b11      	ldr	r3, [pc, #68]	@ (80013cc <MX_USART2_UART_Init+0x4c>)
 8001386:	4a12      	ldr	r2, [pc, #72]	@ (80013d0 <MX_USART2_UART_Init+0x50>)
 8001388:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 38400;
 800138a:	4b10      	ldr	r3, [pc, #64]	@ (80013cc <MX_USART2_UART_Init+0x4c>)
 800138c:	f44f 4216 	mov.w	r2, #38400	@ 0x9600
 8001390:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001392:	4b0e      	ldr	r3, [pc, #56]	@ (80013cc <MX_USART2_UART_Init+0x4c>)
 8001394:	2200      	movs	r2, #0
 8001396:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001398:	4b0c      	ldr	r3, [pc, #48]	@ (80013cc <MX_USART2_UART_Init+0x4c>)
 800139a:	2200      	movs	r2, #0
 800139c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800139e:	4b0b      	ldr	r3, [pc, #44]	@ (80013cc <MX_USART2_UART_Init+0x4c>)
 80013a0:	2200      	movs	r2, #0
 80013a2:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80013a4:	4b09      	ldr	r3, [pc, #36]	@ (80013cc <MX_USART2_UART_Init+0x4c>)
 80013a6:	220c      	movs	r2, #12
 80013a8:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80013aa:	4b08      	ldr	r3, [pc, #32]	@ (80013cc <MX_USART2_UART_Init+0x4c>)
 80013ac:	2200      	movs	r2, #0
 80013ae:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80013b0:	4b06      	ldr	r3, [pc, #24]	@ (80013cc <MX_USART2_UART_Init+0x4c>)
 80013b2:	2200      	movs	r2, #0
 80013b4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80013b6:	4805      	ldr	r0, [pc, #20]	@ (80013cc <MX_USART2_UART_Init+0x4c>)
 80013b8:	f001 ff40 	bl	800323c <HAL_UART_Init>
 80013bc:	4603      	mov	r3, r0
 80013be:	2b00      	cmp	r3, #0
 80013c0:	d001      	beq.n	80013c6 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80013c2:	f000 fa15 	bl	80017f0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80013c6:	bf00      	nop
 80013c8:	bd80      	pop	{r7, pc}
 80013ca:	bf00      	nop
 80013cc:	200000e0 	.word	0x200000e0
 80013d0:	40004400 	.word	0x40004400

080013d4 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80013d4:	b580      	push	{r7, lr}
 80013d6:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80013d8:	4b11      	ldr	r3, [pc, #68]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013da:	4a12      	ldr	r2, [pc, #72]	@ (8001424 <MX_USART3_UART_Init+0x50>)
 80013dc:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 38400;
 80013de:	4b10      	ldr	r3, [pc, #64]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013e0:	f44f 4216 	mov.w	r2, #38400	@ 0x9600
 80013e4:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80013e6:	4b0e      	ldr	r3, [pc, #56]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013e8:	2200      	movs	r2, #0
 80013ea:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80013ec:	4b0c      	ldr	r3, [pc, #48]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013ee:	2200      	movs	r2, #0
 80013f0:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80013f2:	4b0b      	ldr	r3, [pc, #44]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013f4:	2200      	movs	r2, #0
 80013f6:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80013f8:	4b09      	ldr	r3, [pc, #36]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013fa:	220c      	movs	r2, #12
 80013fc:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80013fe:	4b08      	ldr	r3, [pc, #32]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 8001400:	2200      	movs	r2, #0
 8001402:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8001404:	4b06      	ldr	r3, [pc, #24]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 8001406:	2200      	movs	r2, #0
 8001408:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800140a:	4805      	ldr	r0, [pc, #20]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 800140c:	f001 ff16 	bl	800323c <HAL_UART_Init>
 8001410:	4603      	mov	r3, r0
 8001412:	2b00      	cmp	r3, #0
 8001414:	d001      	beq.n	800141a <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8001416:	f000 f9eb 	bl	80017f0 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800141a:	bf00      	nop
 800141c:	bd80      	pop	{r7, pc}
 800141e:	bf00      	nop
 8001420:	20000128 	.word	0x20000128
 8001424:	40004800 	.word	0x40004800

08001428 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001428:	b580      	push	{r7, lr}
 800142a:	b08a      	sub	sp, #40	@ 0x28
 800142c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800142e:	f107 0314 	add.w	r3, r7, #20
 8001432:	2200      	movs	r2, #0
 8001434:	601a      	str	r2, [r3, #0]
 8001436:	605a      	str	r2, [r3, #4]
 8001438:	609a      	str	r2, [r3, #8]
 800143a:	60da      	str	r2, [r3, #12]
 800143c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800143e:	2300      	movs	r3, #0
 8001440:	613b      	str	r3, [r7, #16]
 8001442:	4b38      	ldr	r3, [pc, #224]	@ (8001524 <MX_GPIO_Init+0xfc>)
 8001444:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001446:	4a37      	ldr	r2, [pc, #220]	@ (8001524 <MX_GPIO_Init+0xfc>)
 8001448:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800144c:	6313      	str	r3, [r2, #48]	@ 0x30
 800144e:	4b35      	ldr	r3, [pc, #212]	@ (8001524 <MX_GPIO_Init+0xfc>)
 8001450:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001452:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001456:	613b      	str	r3, [r7, #16]
 8001458:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800145a:	2300      	movs	r3, #0
 800145c:	60fb      	str	r3, [r7, #12]
 800145e:	4b31      	ldr	r3, [pc, #196]	@ (8001524 <MX_GPIO_Init+0xfc>)
 8001460:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001462:	4a30      	ldr	r2, [pc, #192]	@ (8001524 <MX_GPIO_Init+0xfc>)
 8001464:	f043 0301 	orr.w	r3, r3, #1
 8001468:	6313      	str	r3, [r2, #48]	@ 0x30
 800146a:	4b2e      	ldr	r3, [pc, #184]	@ (8001524 <MX_GPIO_Init+0xfc>)
 800146c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800146e:	f003 0301 	and.w	r3, r3, #1
 8001472:	60fb      	str	r3, [r7, #12]
 8001474:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001476:	2300      	movs	r3, #0
 8001478:	60bb      	str	r3, [r7, #8]
 800147a:	4b2a      	ldr	r3, [pc, #168]	@ (8001524 <MX_GPIO_Init+0xfc>)
 800147c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800147e:	4a29      	ldr	r2, [pc, #164]	@ (8001524 <MX_GPIO_Init+0xfc>)
 8001480:	f043 0304 	orr.w	r3, r3, #4
 8001484:	6313      	str	r3, [r2, #48]	@ 0x30
 8001486:	4b27      	ldr	r3, [pc, #156]	@ (8001524 <MX_GPIO_Init+0xfc>)
 8001488:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800148a:	f003 0304 	and.w	r3, r3, #4
 800148e:	60bb      	str	r3, [r7, #8]
 8001490:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001492:	2300      	movs	r3, #0
 8001494:	607b      	str	r3, [r7, #4]
 8001496:	4b23      	ldr	r3, [pc, #140]	@ (8001524 <MX_GPIO_Init+0xfc>)
 8001498:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800149a:	4a22      	ldr	r2, [pc, #136]	@ (8001524 <MX_GPIO_Init+0xfc>)
 800149c:	f043 0308 	orr.w	r3, r3, #8
 80014a0:	6313      	str	r3, [r2, #48]	@ 0x30
 80014a2:	4b20      	ldr	r3, [pc, #128]	@ (8001524 <MX_GPIO_Init+0xfc>)
 80014a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014a6:	f003 0308 	and.w	r3, r3, #8
 80014aa:	607b      	str	r3, [r7, #4]
 80014ac:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, EN1_Pin|EN2_Pin, GPIO_PIN_RESET);
 80014ae:	2200      	movs	r2, #0
 80014b0:	2130      	movs	r1, #48	@ 0x30
 80014b2:	481d      	ldr	r0, [pc, #116]	@ (8001528 <MX_GPIO_Init+0x100>)
 80014b4:	f001 fa3c 	bl	8002930 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 80014b8:	2200      	movs	r2, #0
 80014ba:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80014be:	481b      	ldr	r0, [pc, #108]	@ (800152c <MX_GPIO_Init+0x104>)
 80014c0:	f001 fa36 	bl	8002930 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : EN1_Pin */
  GPIO_InitStruct.Pin = EN1_Pin;
 80014c4:	2310      	movs	r3, #16
 80014c6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014c8:	2301      	movs	r3, #1
 80014ca:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80014cc:	2302      	movs	r3, #2
 80014ce:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014d0:	2300      	movs	r3, #0
 80014d2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(EN1_GPIO_Port, &GPIO_InitStruct);
 80014d4:	f107 0314 	add.w	r3, r7, #20
 80014d8:	4619      	mov	r1, r3
 80014da:	4813      	ldr	r0, [pc, #76]	@ (8001528 <MX_GPIO_Init+0x100>)
 80014dc:	f001 f88a 	bl	80025f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : EN2_Pin */
  GPIO_InitStruct.Pin = EN2_Pin;
 80014e0:	2320      	movs	r3, #32
 80014e2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014e4:	2301      	movs	r3, #1
 80014e6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80014e8:	2301      	movs	r3, #1
 80014ea:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014ec:	2300      	movs	r3, #0
 80014ee:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(EN2_GPIO_Port, &GPIO_InitStruct);
 80014f0:	f107 0314 	add.w	r3, r7, #20
 80014f4:	4619      	mov	r1, r3
 80014f6:	480c      	ldr	r0, [pc, #48]	@ (8001528 <MX_GPIO_Init+0x100>)
 80014f8:	f001 f87c 	bl	80025f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 80014fc:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8001500:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001502:	2301      	movs	r3, #1
 8001504:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001506:	2300      	movs	r3, #0
 8001508:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800150a:	2300      	movs	r3, #0
 800150c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 800150e:	f107 0314 	add.w	r3, r7, #20
 8001512:	4619      	mov	r1, r3
 8001514:	4805      	ldr	r0, [pc, #20]	@ (800152c <MX_GPIO_Init+0x104>)
 8001516:	f001 f86d 	bl	80025f4 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800151a:	bf00      	nop
 800151c:	3728      	adds	r7, #40	@ 0x28
 800151e:	46bd      	mov	sp, r7
 8001520:	bd80      	pop	{r7, pc}
 8001522:	bf00      	nop
 8001524:	40023800 	.word	0x40023800
 8001528:	40020800 	.word	0x40020800
 800152c:	40020c00 	.word	0x40020c00

08001530 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8001530:	b580      	push	{r7, lr}
 8001532:	b084      	sub	sp, #16
 8001534:	af00      	add	r7, sp, #0
 8001536:	6078      	str	r0, [r7, #4]
	if (huart->Instance == USART1)
 8001538:	687b      	ldr	r3, [r7, #4]
 800153a:	681b      	ldr	r3, [r3, #0]
 800153c:	4a1f      	ldr	r2, [pc, #124]	@ (80015bc <HAL_UART_RxCpltCallback+0x8c>)
 800153e:	4293      	cmp	r3, r2
 8001540:	d137      	bne.n	80015b2 <HAL_UART_RxCpltCallback+0x82>
	{
		// Xu ly uart theo packet
		uint8_t inchar = xulyUart.ui8_RX_buf[0];
 8001542:	4b1f      	ldr	r3, [pc, #124]	@ (80015c0 <HAL_UART_RxCpltCallback+0x90>)
 8001544:	781b      	ldrb	r3, [r3, #0]
 8001546:	73fb      	strb	r3, [r7, #15]
		int vitridoctin = xulyUart.ui8_indexUart % 1000;
 8001548:	4b1d      	ldr	r3, [pc, #116]	@ (80015c0 <HAL_UART_RxCpltCallback+0x90>)
 800154a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800154e:	f893 3715 	ldrb.w	r3, [r3, #1813]	@ 0x715
 8001552:	4a1c      	ldr	r2, [pc, #112]	@ (80015c4 <HAL_UART_RxCpltCallback+0x94>)
 8001554:	fb82 1203 	smull	r1, r2, r2, r3
 8001558:	1191      	asrs	r1, r2, #6
 800155a:	17da      	asrs	r2, r3, #31
 800155c:	1a8a      	subs	r2, r1, r2
 800155e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001562:	fb01 f202 	mul.w	r2, r1, r2
 8001566:	1a9b      	subs	r3, r3, r2
 8001568:	60bb      	str	r3, [r7, #8]
		xulyUart.ui8_str[vitridoctin] = inchar;
 800156a:	4a15      	ldr	r2, [pc, #84]	@ (80015c0 <HAL_UART_RxCpltCallback+0x90>)
 800156c:	68bb      	ldr	r3, [r7, #8]
 800156e:	4413      	add	r3, r2
 8001570:	3302      	adds	r3, #2
 8001572:	7bfa      	ldrb	r2, [r7, #15]
 8001574:	701a      	strb	r2, [r3, #0]
		xulyUart.ui8_newinchar = inchar;
 8001576:	4b12      	ldr	r3, [pc, #72]	@ (80015c0 <HAL_UART_RxCpltCallback+0x90>)
 8001578:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800157c:	461a      	mov	r2, r3
 800157e:	7bfb      	ldrb	r3, [r7, #15]
 8001580:	f882 3713 	strb.w	r3, [r2, #1811]	@ 0x713
		xulyUart.ui8_indexUart++;
 8001584:	4b0e      	ldr	r3, [pc, #56]	@ (80015c0 <HAL_UART_RxCpltCallback+0x90>)
 8001586:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800158a:	f893 3715 	ldrb.w	r3, [r3, #1813]	@ 0x715
 800158e:	3301      	adds	r3, #1
 8001590:	b2da      	uxtb	r2, r3
 8001592:	4b0b      	ldr	r3, [pc, #44]	@ (80015c0 <HAL_UART_RxCpltCallback+0x90>)
 8001594:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001598:	f883 2715 	strb.w	r2, [r3, #1813]	@ 0x715
		xulyUart.ui8_newpagkage = 1;
 800159c:	4b08      	ldr	r3, [pc, #32]	@ (80015c0 <HAL_UART_RxCpltCallback+0x90>)
 800159e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80015a2:	2201      	movs	r2, #1
 80015a4:	f883 2716 	strb.w	r2, [r3, #1814]	@ 0x716
		HAL_UART_Receive_IT(&huart1, xulyUart.ui8_RX_buf, 1);
 80015a8:	2201      	movs	r2, #1
 80015aa:	4905      	ldr	r1, [pc, #20]	@ (80015c0 <HAL_UART_RxCpltCallback+0x90>)
 80015ac:	4806      	ldr	r0, [pc, #24]	@ (80015c8 <HAL_UART_RxCpltCallback+0x98>)
 80015ae:	f001 ff4d 	bl	800344c <HAL_UART_Receive_IT>
	}
}
 80015b2:	bf00      	nop
 80015b4:	3710      	adds	r7, #16
 80015b6:	46bd      	mov	sp, r7
 80015b8:	bd80      	pop	{r7, pc}
 80015ba:	bf00      	nop
 80015bc:	40011000 	.word	0x40011000
 80015c0:	2000c9a4 	.word	0x2000c9a4
 80015c4:	10624dd3 	.word	0x10624dd3
 80015c8:	20000098 	.word	0x20000098

080015cc <HAL_UARTEx_RxEventCallback>:

void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 80015cc:	b580      	push	{r7, lr}
 80015ce:	b082      	sub	sp, #8
 80015d0:	af00      	add	r7, sp, #0
 80015d2:	6078      	str	r0, [r7, #4]
 80015d4:	460b      	mov	r3, r1
 80015d6:	807b      	strh	r3, [r7, #2]
	if (huart->Instance == USART2)
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	4a54      	ldr	r2, [pc, #336]	@ (8001730 <HAL_UARTEx_RxEventCallback+0x164>)
 80015de:	4293      	cmp	r3, r2
 80015e0:	d155      	bne.n	800168e <HAL_UARTEx_RxEventCallback+0xc2>
	{
		xulyUart.ui16_countIT2++;
 80015e2:	4b54      	ldr	r3, [pc, #336]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80015e4:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80015e8:	f8b3 3740 	ldrh.w	r3, [r3, #1856]	@ 0x740
 80015ec:	3301      	adds	r3, #1
 80015ee:	b29a      	uxth	r2, r3
 80015f0:	4b50      	ldr	r3, [pc, #320]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80015f2:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80015f6:	f8a3 2740 	strh.w	r2, [r3, #1856]	@ 0x740
		xulyUart.ui16_data2Size += Size;
 80015fa:	4b4e      	ldr	r3, [pc, #312]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80015fc:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001600:	f8b3 274c 	ldrh.w	r2, [r3, #1868]	@ 0x74c
 8001604:	887b      	ldrh	r3, [r7, #2]
 8001606:	4413      	add	r3, r2
 8001608:	b29a      	uxth	r2, r3
 800160a:	4b4a      	ldr	r3, [pc, #296]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 800160c:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001610:	f8a3 274c 	strh.w	r2, [r3, #1868]	@ 0x74c

		xulyUart.ui16_tx3Size = Size;
 8001614:	4b47      	ldr	r3, [pc, #284]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 8001616:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800161a:	461a      	mov	r2, r3
 800161c:	887b      	ldrh	r3, [r7, #2]
 800161e:	f8a2 373e 	strh.w	r3, [r2, #1854]	@ 0x73e

		if(xulyUart.ui16_tx3Size < 1024)
 8001622:	4b44      	ldr	r3, [pc, #272]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 8001624:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001628:	f8b3 373e 	ldrh.w	r3, [r3, #1854]	@ 0x73e
 800162c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001630:	d20b      	bcs.n	800164a <HAL_UARTEx_RxEventCallback+0x7e>
		{
			xulyUart.ui16_countIT2++;
 8001632:	4b40      	ldr	r3, [pc, #256]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 8001634:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001638:	f8b3 3740 	ldrh.w	r3, [r3, #1856]	@ 0x740
 800163c:	3301      	adds	r3, #1
 800163e:	b29a      	uxth	r2, r3
 8001640:	4b3c      	ldr	r3, [pc, #240]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 8001642:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001646:	f8a3 2740 	strh.w	r2, [r3, #1856]	@ 0x740
		}

		memcpy(xulyUart.ui8_tx3Data, xulyUart.ui8_rx2Data, xulyUart.ui16_tx3Size);
 800164a:	4b3a      	ldr	r3, [pc, #232]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 800164c:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001650:	f8b3 373e 	ldrh.w	r3, [r3, #1854]	@ 0x73e
 8001654:	461a      	mov	r2, r3
 8001656:	4938      	ldr	r1, [pc, #224]	@ (8001738 <HAL_UARTEx_RxEventCallback+0x16c>)
 8001658:	4838      	ldr	r0, [pc, #224]	@ (800173c <HAL_UARTEx_RxEventCallback+0x170>)
 800165a:	f003 f88a 	bl	8004772 <memcpy>

		uart2_data_ready = 1;
 800165e:	4b38      	ldr	r3, [pc, #224]	@ (8001740 <HAL_UARTEx_RxEventCallback+0x174>)
 8001660:	2201      	movs	r2, #1
 8001662:	701a      	strb	r2, [r3, #0]
		xulyUart.uart2_receivedData = 1;
 8001664:	4b33      	ldr	r3, [pc, #204]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 8001666:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800166a:	461a      	mov	r2, r3
 800166c:	2301      	movs	r3, #1
 800166e:	f8c2 3734 	str.w	r3, [r2, #1844]	@ 0x734

		xulyUart.ui32_timer = HAL_GetTick();
 8001672:	f000 fb33 	bl	8001cdc <HAL_GetTick>
 8001676:	4603      	mov	r3, r0
 8001678:	4a2e      	ldr	r2, [pc, #184]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 800167a:	f502 42c0 	add.w	r2, r2, #24576	@ 0x6000
 800167e:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
		HAL_UARTEx_ReceiveToIdle_IT(&huart2, xulyUart.ui8_rx2Data, BUFFER_SIZE);
 8001682:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001686:	492c      	ldr	r1, [pc, #176]	@ (8001738 <HAL_UARTEx_RxEventCallback+0x16c>)
 8001688:	482e      	ldr	r0, [pc, #184]	@ (8001744 <HAL_UARTEx_RxEventCallback+0x178>)
 800168a:	f001 ff04 	bl	8003496 <HAL_UARTEx_ReceiveToIdle_IT>
//		ProcessUart2Data(xulyUart.ui8_tx3Data, xulyUart.ui16_tx3Size);
	}
	if (huart->Instance == USART3)
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	4a2d      	ldr	r2, [pc, #180]	@ (8001748 <HAL_UARTEx_RxEventCallback+0x17c>)
 8001694:	4293      	cmp	r3, r2
 8001696:	d147      	bne.n	8001728 <HAL_UARTEx_RxEventCallback+0x15c>
	{
//		xulyUart.ui16_countIT3++;
		xulyUart.ui16_data3Size += Size;
 8001698:	4b26      	ldr	r3, [pc, #152]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 800169a:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800169e:	f8b3 274e 	ldrh.w	r2, [r3, #1870]	@ 0x74e
 80016a2:	887b      	ldrh	r3, [r7, #2]
 80016a4:	4413      	add	r3, r2
 80016a6:	b29a      	uxth	r2, r3
 80016a8:	4b22      	ldr	r3, [pc, #136]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80016aa:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80016ae:	f8a3 274e 	strh.w	r2, [r3, #1870]	@ 0x74e

		xulyUart.ui16_tx2Size = Size;
 80016b2:	4b20      	ldr	r3, [pc, #128]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80016b4:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80016b8:	461a      	mov	r2, r3
 80016ba:	887b      	ldrh	r3, [r7, #2]
 80016bc:	f8a2 373c 	strh.w	r3, [r2, #1852]	@ 0x73c

		if(xulyUart.ui16_tx2Size < 1024)
 80016c0:	4b1c      	ldr	r3, [pc, #112]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80016c2:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80016c6:	f8b3 373c 	ldrh.w	r3, [r3, #1852]	@ 0x73c
 80016ca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80016ce:	d20b      	bcs.n	80016e8 <HAL_UARTEx_RxEventCallback+0x11c>
		{
			xulyUart.ui16_countIT3++;
 80016d0:	4b18      	ldr	r3, [pc, #96]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80016d2:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80016d6:	f8b3 3742 	ldrh.w	r3, [r3, #1858]	@ 0x742
 80016da:	3301      	adds	r3, #1
 80016dc:	b29a      	uxth	r2, r3
 80016de:	4b15      	ldr	r3, [pc, #84]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80016e0:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80016e4:	f8a3 2742 	strh.w	r2, [r3, #1858]	@ 0x742
		}

		memcpy(xulyUart.ui8_tx2Data, xulyUart.ui8_rx3Data, xulyUart.ui16_tx2Size);
 80016e8:	4b12      	ldr	r3, [pc, #72]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80016ea:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80016ee:	f8b3 373c 	ldrh.w	r3, [r3, #1852]	@ 0x73c
 80016f2:	461a      	mov	r2, r3
 80016f4:	4915      	ldr	r1, [pc, #84]	@ (800174c <HAL_UARTEx_RxEventCallback+0x180>)
 80016f6:	4816      	ldr	r0, [pc, #88]	@ (8001750 <HAL_UARTEx_RxEventCallback+0x184>)
 80016f8:	f003 f83b 	bl	8004772 <memcpy>
		xulyUart.uart3_receivedData = 1;
 80016fc:	4b0d      	ldr	r3, [pc, #52]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 80016fe:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001702:	461a      	mov	r2, r3
 8001704:	2301      	movs	r3, #1
 8001706:	f8c2 3738 	str.w	r3, [r2, #1848]	@ 0x738
//		xulyUart.ui8_indexUart3 = 1;
		HAL_UARTEx_ReceiveToIdle_IT(&huart3, xulyUart.ui8_rx3Data, BUFFER_SIZE);
 800170a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800170e:	490f      	ldr	r1, [pc, #60]	@ (800174c <HAL_UARTEx_RxEventCallback+0x180>)
 8001710:	4810      	ldr	r0, [pc, #64]	@ (8001754 <HAL_UARTEx_RxEventCallback+0x188>)
 8001712:	f001 fec0 	bl	8003496 <HAL_UARTEx_ReceiveToIdle_IT>
		PrintUart3Data(xulyUart.ui8_rx3Data, xulyUart.ui16_tx2Size);
 8001716:	4b07      	ldr	r3, [pc, #28]	@ (8001734 <HAL_UARTEx_RxEventCallback+0x168>)
 8001718:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800171c:	f8b3 373c 	ldrh.w	r3, [r3, #1852]	@ 0x73c
 8001720:	4619      	mov	r1, r3
 8001722:	480a      	ldr	r0, [pc, #40]	@ (800174c <HAL_UARTEx_RxEventCallback+0x180>)
 8001724:	f7ff f87e 	bl	8000824 <PrintUart3Data>
	}
}
 8001728:	bf00      	nop
 800172a:	3708      	adds	r7, #8
 800172c:	46bd      	mov	sp, r7
 800172e:	bd80      	pop	{r7, pc}
 8001730:	40004400 	.word	0x40004400
 8001734:	2000c9a4 	.word	0x2000c9a4
 8001738:	2000f0c1 	.word	0x2000f0c1
 800173c:	200120c1 	.word	0x200120c1
 8001740:	2000c988 	.word	0x2000c988
 8001744:	200000e0 	.word	0x200000e0
 8001748:	40004800 	.word	0x40004800
 800174c:	200100c1 	.word	0x200100c1
 8001750:	200110c1 	.word	0x200110c1
 8001754:	20000128 	.word	0x20000128

08001758 <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8001758:	b480      	push	{r7}
 800175a:	b083      	sub	sp, #12
 800175c:	af00      	add	r7, sp, #0
 800175e:	6078      	str	r0, [r7, #4]
	if (huart->Instance == USART1)
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	681b      	ldr	r3, [r3, #0]
 8001764:	4a1e      	ldr	r2, [pc, #120]	@ (80017e0 <HAL_UART_TxCpltCallback+0x88>)
 8001766:	4293      	cmp	r3, r2
 8001768:	d105      	bne.n	8001776 <HAL_UART_TxCpltCallback+0x1e>
	{
		xulyUart.ui8_busy = 0;
 800176a:	4b1e      	ldr	r3, [pc, #120]	@ (80017e4 <HAL_UART_TxCpltCallback+0x8c>)
 800176c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8001770:	2200      	movs	r2, #0
 8001772:	f883 2712 	strb.w	r2, [r3, #1810]	@ 0x712
	}
	if (huart->Instance == USART2)
 8001776:	687b      	ldr	r3, [r7, #4]
 8001778:	681b      	ldr	r3, [r3, #0]
 800177a:	4a1b      	ldr	r2, [pc, #108]	@ (80017e8 <HAL_UART_TxCpltCallback+0x90>)
 800177c:	4293      	cmp	r3, r2
 800177e:	d112      	bne.n	80017a6 <HAL_UART_TxCpltCallback+0x4e>
	{
		xulyUart.ui16_countTX2++;
 8001780:	4b18      	ldr	r3, [pc, #96]	@ (80017e4 <HAL_UART_TxCpltCallback+0x8c>)
 8001782:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001786:	f8b3 3748 	ldrh.w	r3, [r3, #1864]	@ 0x748
 800178a:	3301      	adds	r3, #1
 800178c:	b29a      	uxth	r2, r3
 800178e:	4b15      	ldr	r3, [pc, #84]	@ (80017e4 <HAL_UART_TxCpltCallback+0x8c>)
 8001790:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 8001794:	f8a3 2748 	strh.w	r2, [r3, #1864]	@ 0x748
		xulyUart.uart2_processingData = 0;
 8001798:	4b12      	ldr	r3, [pc, #72]	@ (80017e4 <HAL_UART_TxCpltCallback+0x8c>)
 800179a:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 800179e:	461a      	mov	r2, r3
 80017a0:	2300      	movs	r3, #0
 80017a2:	f8c2 372c 	str.w	r3, [r2, #1836]	@ 0x72c
	}
	if (huart->Instance == USART3)
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	681b      	ldr	r3, [r3, #0]
 80017aa:	4a10      	ldr	r2, [pc, #64]	@ (80017ec <HAL_UART_TxCpltCallback+0x94>)
 80017ac:	4293      	cmp	r3, r2
 80017ae:	d112      	bne.n	80017d6 <HAL_UART_TxCpltCallback+0x7e>
	{
		xulyUart.ui16_countTX3++;
 80017b0:	4b0c      	ldr	r3, [pc, #48]	@ (80017e4 <HAL_UART_TxCpltCallback+0x8c>)
 80017b2:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80017b6:	f8b3 374a 	ldrh.w	r3, [r3, #1866]	@ 0x74a
 80017ba:	3301      	adds	r3, #1
 80017bc:	b29a      	uxth	r2, r3
 80017be:	4b09      	ldr	r3, [pc, #36]	@ (80017e4 <HAL_UART_TxCpltCallback+0x8c>)
 80017c0:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80017c4:	f8a3 274a 	strh.w	r2, [r3, #1866]	@ 0x74a
		xulyUart.uart3_processingData = 0;
 80017c8:	4b06      	ldr	r3, [pc, #24]	@ (80017e4 <HAL_UART_TxCpltCallback+0x8c>)
 80017ca:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
 80017ce:	461a      	mov	r2, r3
 80017d0:	2300      	movs	r3, #0
 80017d2:	f8c2 3730 	str.w	r3, [r2, #1840]	@ 0x730
	}
}
 80017d6:	bf00      	nop
 80017d8:	370c      	adds	r7, #12
 80017da:	46bd      	mov	sp, r7
 80017dc:	bc80      	pop	{r7}
 80017de:	4770      	bx	lr
 80017e0:	40011000 	.word	0x40011000
 80017e4:	2000c9a4 	.word	0x2000c9a4
 80017e8:	40004400 	.word	0x40004400
 80017ec:	40004800 	.word	0x40004800

080017f0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80017f0:	b480      	push	{r7}
 80017f2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80017f4:	b672      	cpsid	i
}
 80017f6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80017f8:	bf00      	nop
 80017fa:	e7fd      	b.n	80017f8 <Error_Handler+0x8>

080017fc <HAL_MspInit>:
 80017fc:	b480      	push	{r7}
 80017fe:	b083      	sub	sp, #12
 8001800:	af00      	add	r7, sp, #0
 8001802:	2300      	movs	r3, #0
 8001804:	607b      	str	r3, [r7, #4]
 8001806:	4b0f      	ldr	r3, [pc, #60]	@ (8001844 <HAL_MspInit+0x48>)
 8001808:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800180a:	4a0e      	ldr	r2, [pc, #56]	@ (8001844 <HAL_MspInit+0x48>)
 800180c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001810:	6453      	str	r3, [r2, #68]	@ 0x44
 8001812:	4b0c      	ldr	r3, [pc, #48]	@ (8001844 <HAL_MspInit+0x48>)
 8001814:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001816:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800181a:	607b      	str	r3, [r7, #4]
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	2300      	movs	r3, #0
 8001820:	603b      	str	r3, [r7, #0]
 8001822:	4b08      	ldr	r3, [pc, #32]	@ (8001844 <HAL_MspInit+0x48>)
 8001824:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001826:	4a07      	ldr	r2, [pc, #28]	@ (8001844 <HAL_MspInit+0x48>)
 8001828:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800182c:	6413      	str	r3, [r2, #64]	@ 0x40
 800182e:	4b05      	ldr	r3, [pc, #20]	@ (8001844 <HAL_MspInit+0x48>)
 8001830:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001832:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001836:	603b      	str	r3, [r7, #0]
 8001838:	683b      	ldr	r3, [r7, #0]
 800183a:	bf00      	nop
 800183c:	370c      	adds	r7, #12
 800183e:	46bd      	mov	sp, r7
 8001840:	bc80      	pop	{r7}
 8001842:	4770      	bx	lr
 8001844:	40023800 	.word	0x40023800

08001848 <HAL_UART_MspInit>:
 8001848:	b580      	push	{r7, lr}
 800184a:	b08e      	sub	sp, #56	@ 0x38
 800184c:	af00      	add	r7, sp, #0
 800184e:	6078      	str	r0, [r7, #4]
 8001850:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001854:	2200      	movs	r2, #0
 8001856:	601a      	str	r2, [r3, #0]
 8001858:	605a      	str	r2, [r3, #4]
 800185a:	609a      	str	r2, [r3, #8]
 800185c:	60da      	str	r2, [r3, #12]
 800185e:	611a      	str	r2, [r3, #16]
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	4a58      	ldr	r2, [pc, #352]	@ (80019c8 <HAL_UART_MspInit+0x180>)
 8001866:	4293      	cmp	r3, r2
 8001868:	d135      	bne.n	80018d6 <HAL_UART_MspInit+0x8e>
 800186a:	2300      	movs	r3, #0
 800186c:	623b      	str	r3, [r7, #32]
 800186e:	4b57      	ldr	r3, [pc, #348]	@ (80019cc <HAL_UART_MspInit+0x184>)
 8001870:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001872:	4a56      	ldr	r2, [pc, #344]	@ (80019cc <HAL_UART_MspInit+0x184>)
 8001874:	f043 0310 	orr.w	r3, r3, #16
 8001878:	6453      	str	r3, [r2, #68]	@ 0x44
 800187a:	4b54      	ldr	r3, [pc, #336]	@ (80019cc <HAL_UART_MspInit+0x184>)
 800187c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800187e:	f003 0310 	and.w	r3, r3, #16
 8001882:	623b      	str	r3, [r7, #32]
 8001884:	6a3b      	ldr	r3, [r7, #32]
 8001886:	2300      	movs	r3, #0
 8001888:	61fb      	str	r3, [r7, #28]
 800188a:	4b50      	ldr	r3, [pc, #320]	@ (80019cc <HAL_UART_MspInit+0x184>)
 800188c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800188e:	4a4f      	ldr	r2, [pc, #316]	@ (80019cc <HAL_UART_MspInit+0x184>)
 8001890:	f043 0301 	orr.w	r3, r3, #1
 8001894:	6313      	str	r3, [r2, #48]	@ 0x30
 8001896:	4b4d      	ldr	r3, [pc, #308]	@ (80019cc <HAL_UART_MspInit+0x184>)
 8001898:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800189a:	f003 0301 	and.w	r3, r3, #1
 800189e:	61fb      	str	r3, [r7, #28]
 80018a0:	69fb      	ldr	r3, [r7, #28]
 80018a2:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80018a6:	627b      	str	r3, [r7, #36]	@ 0x24
 80018a8:	2302      	movs	r3, #2
 80018aa:	62bb      	str	r3, [r7, #40]	@ 0x28
 80018ac:	2300      	movs	r3, #0
 80018ae:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80018b0:	2303      	movs	r3, #3
 80018b2:	633b      	str	r3, [r7, #48]	@ 0x30
 80018b4:	2307      	movs	r3, #7
 80018b6:	637b      	str	r3, [r7, #52]	@ 0x34
 80018b8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80018bc:	4619      	mov	r1, r3
 80018be:	4844      	ldr	r0, [pc, #272]	@ (80019d0 <HAL_UART_MspInit+0x188>)
 80018c0:	f000 fe98 	bl	80025f4 <HAL_GPIO_Init>
 80018c4:	2200      	movs	r2, #0
 80018c6:	2100      	movs	r1, #0
 80018c8:	2025      	movs	r0, #37	@ 0x25
 80018ca:	f000 fae8 	bl	8001e9e <HAL_NVIC_SetPriority>
 80018ce:	2025      	movs	r0, #37	@ 0x25
 80018d0:	f000 fb01 	bl	8001ed6 <HAL_NVIC_EnableIRQ>
 80018d4:	e073      	b.n	80019be <HAL_UART_MspInit+0x176>
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	681b      	ldr	r3, [r3, #0]
 80018da:	4a3e      	ldr	r2, [pc, #248]	@ (80019d4 <HAL_UART_MspInit+0x18c>)
 80018dc:	4293      	cmp	r3, r2
 80018de:	d134      	bne.n	800194a <HAL_UART_MspInit+0x102>
 80018e0:	2300      	movs	r3, #0
 80018e2:	61bb      	str	r3, [r7, #24]
 80018e4:	4b39      	ldr	r3, [pc, #228]	@ (80019cc <HAL_UART_MspInit+0x184>)
 80018e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018e8:	4a38      	ldr	r2, [pc, #224]	@ (80019cc <HAL_UART_MspInit+0x184>)
 80018ea:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80018ee:	6413      	str	r3, [r2, #64]	@ 0x40
 80018f0:	4b36      	ldr	r3, [pc, #216]	@ (80019cc <HAL_UART_MspInit+0x184>)
 80018f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018f4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80018f8:	61bb      	str	r3, [r7, #24]
 80018fa:	69bb      	ldr	r3, [r7, #24]
 80018fc:	2300      	movs	r3, #0
 80018fe:	617b      	str	r3, [r7, #20]
 8001900:	4b32      	ldr	r3, [pc, #200]	@ (80019cc <HAL_UART_MspInit+0x184>)
 8001902:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001904:	4a31      	ldr	r2, [pc, #196]	@ (80019cc <HAL_UART_MspInit+0x184>)
 8001906:	f043 0301 	orr.w	r3, r3, #1
 800190a:	6313      	str	r3, [r2, #48]	@ 0x30
 800190c:	4b2f      	ldr	r3, [pc, #188]	@ (80019cc <HAL_UART_MspInit+0x184>)
 800190e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001910:	f003 0301 	and.w	r3, r3, #1
 8001914:	617b      	str	r3, [r7, #20]
 8001916:	697b      	ldr	r3, [r7, #20]
 8001918:	230c      	movs	r3, #12
 800191a:	627b      	str	r3, [r7, #36]	@ 0x24
 800191c:	2302      	movs	r3, #2
 800191e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001920:	2300      	movs	r3, #0
 8001922:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001924:	2303      	movs	r3, #3
 8001926:	633b      	str	r3, [r7, #48]	@ 0x30
 8001928:	2307      	movs	r3, #7
 800192a:	637b      	str	r3, [r7, #52]	@ 0x34
 800192c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001930:	4619      	mov	r1, r3
 8001932:	4827      	ldr	r0, [pc, #156]	@ (80019d0 <HAL_UART_MspInit+0x188>)
 8001934:	f000 fe5e 	bl	80025f4 <HAL_GPIO_Init>
 8001938:	2200      	movs	r2, #0
 800193a:	2100      	movs	r1, #0
 800193c:	2026      	movs	r0, #38	@ 0x26
 800193e:	f000 faae 	bl	8001e9e <HAL_NVIC_SetPriority>
 8001942:	2026      	movs	r0, #38	@ 0x26
 8001944:	f000 fac7 	bl	8001ed6 <HAL_NVIC_EnableIRQ>
 8001948:	e039      	b.n	80019be <HAL_UART_MspInit+0x176>
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	681b      	ldr	r3, [r3, #0]
 800194e:	4a22      	ldr	r2, [pc, #136]	@ (80019d8 <HAL_UART_MspInit+0x190>)
 8001950:	4293      	cmp	r3, r2
 8001952:	d134      	bne.n	80019be <HAL_UART_MspInit+0x176>
 8001954:	2300      	movs	r3, #0
 8001956:	613b      	str	r3, [r7, #16]
 8001958:	4b1c      	ldr	r3, [pc, #112]	@ (80019cc <HAL_UART_MspInit+0x184>)
 800195a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800195c:	4a1b      	ldr	r2, [pc, #108]	@ (80019cc <HAL_UART_MspInit+0x184>)
 800195e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001962:	6413      	str	r3, [r2, #64]	@ 0x40
 8001964:	4b19      	ldr	r3, [pc, #100]	@ (80019cc <HAL_UART_MspInit+0x184>)
 8001966:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001968:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800196c:	613b      	str	r3, [r7, #16]
 800196e:	693b      	ldr	r3, [r7, #16]
 8001970:	2300      	movs	r3, #0
 8001972:	60fb      	str	r3, [r7, #12]
 8001974:	4b15      	ldr	r3, [pc, #84]	@ (80019cc <HAL_UART_MspInit+0x184>)
 8001976:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001978:	4a14      	ldr	r2, [pc, #80]	@ (80019cc <HAL_UART_MspInit+0x184>)
 800197a:	f043 0308 	orr.w	r3, r3, #8
 800197e:	6313      	str	r3, [r2, #48]	@ 0x30
 8001980:	4b12      	ldr	r3, [pc, #72]	@ (80019cc <HAL_UART_MspInit+0x184>)
 8001982:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001984:	f003 0308 	and.w	r3, r3, #8
 8001988:	60fb      	str	r3, [r7, #12]
 800198a:	68fb      	ldr	r3, [r7, #12]
 800198c:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001990:	627b      	str	r3, [r7, #36]	@ 0x24
 8001992:	2302      	movs	r3, #2
 8001994:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001996:	2300      	movs	r3, #0
 8001998:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800199a:	2303      	movs	r3, #3
 800199c:	633b      	str	r3, [r7, #48]	@ 0x30
 800199e:	2307      	movs	r3, #7
 80019a0:	637b      	str	r3, [r7, #52]	@ 0x34
 80019a2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80019a6:	4619      	mov	r1, r3
 80019a8:	480c      	ldr	r0, [pc, #48]	@ (80019dc <HAL_UART_MspInit+0x194>)
 80019aa:	f000 fe23 	bl	80025f4 <HAL_GPIO_Init>
 80019ae:	2200      	movs	r2, #0
 80019b0:	2100      	movs	r1, #0
 80019b2:	2027      	movs	r0, #39	@ 0x27
 80019b4:	f000 fa73 	bl	8001e9e <HAL_NVIC_SetPriority>
 80019b8:	2027      	movs	r0, #39	@ 0x27
 80019ba:	f000 fa8c 	bl	8001ed6 <HAL_NVIC_EnableIRQ>
 80019be:	bf00      	nop
 80019c0:	3738      	adds	r7, #56	@ 0x38
 80019c2:	46bd      	mov	sp, r7
 80019c4:	bd80      	pop	{r7, pc}
 80019c6:	bf00      	nop
 80019c8:	40011000 	.word	0x40011000
 80019cc:	40023800 	.word	0x40023800
 80019d0:	40020000 	.word	0x40020000
 80019d4:	40004400 	.word	0x40004400
 80019d8:	40004800 	.word	0x40004800
 80019dc:	40020c00 	.word	0x40020c00

080019e0 <NMI_Handler>:
 80019e0:	b480      	push	{r7}
 80019e2:	af00      	add	r7, sp, #0
 80019e4:	bf00      	nop
 80019e6:	e7fd      	b.n	80019e4 <NMI_Handler+0x4>

080019e8 <HardFault_Handler>:
 80019e8:	b480      	push	{r7}
 80019ea:	af00      	add	r7, sp, #0
 80019ec:	bf00      	nop
 80019ee:	e7fd      	b.n	80019ec <HardFault_Handler+0x4>

080019f0 <MemManage_Handler>:
 80019f0:	b480      	push	{r7}
 80019f2:	af00      	add	r7, sp, #0
 80019f4:	bf00      	nop
 80019f6:	e7fd      	b.n	80019f4 <MemManage_Handler+0x4>

080019f8 <BusFault_Handler>:
 80019f8:	b480      	push	{r7}
 80019fa:	af00      	add	r7, sp, #0
 80019fc:	bf00      	nop
 80019fe:	e7fd      	b.n	80019fc <BusFault_Handler+0x4>

08001a00 <UsageFault_Handler>:
 8001a00:	b480      	push	{r7}
 8001a02:	af00      	add	r7, sp, #0
 8001a04:	bf00      	nop
 8001a06:	e7fd      	b.n	8001a04 <UsageFault_Handler+0x4>

08001a08 <SVC_Handler>:
 8001a08:	b480      	push	{r7}
 8001a0a:	af00      	add	r7, sp, #0
 8001a0c:	bf00      	nop
 8001a0e:	46bd      	mov	sp, r7
 8001a10:	bc80      	pop	{r7}
 8001a12:	4770      	bx	lr

08001a14 <DebugMon_Handler>:
 8001a14:	b480      	push	{r7}
 8001a16:	af00      	add	r7, sp, #0
 8001a18:	bf00      	nop
 8001a1a:	46bd      	mov	sp, r7
 8001a1c:	bc80      	pop	{r7}
 8001a1e:	4770      	bx	lr

08001a20 <PendSV_Handler>:
 8001a20:	b480      	push	{r7}
 8001a22:	af00      	add	r7, sp, #0
 8001a24:	bf00      	nop
 8001a26:	46bd      	mov	sp, r7
 8001a28:	bc80      	pop	{r7}
 8001a2a:	4770      	bx	lr

08001a2c <SysTick_Handler>:
 8001a2c:	b580      	push	{r7, lr}
 8001a2e:	af00      	add	r7, sp, #0
 8001a30:	f000 f942 	bl	8001cb8 <HAL_IncTick>
 8001a34:	bf00      	nop
 8001a36:	bd80      	pop	{r7, pc}

08001a38 <USART1_IRQHandler>:
 8001a38:	b580      	push	{r7, lr}
 8001a3a:	af00      	add	r7, sp, #0
 8001a3c:	4802      	ldr	r0, [pc, #8]	@ (8001a48 <USART1_IRQHandler+0x10>)
 8001a3e:	f001 fd87 	bl	8003550 <HAL_UART_IRQHandler>
 8001a42:	bf00      	nop
 8001a44:	bd80      	pop	{r7, pc}
 8001a46:	bf00      	nop
 8001a48:	20000098 	.word	0x20000098

08001a4c <USART2_IRQHandler>:
 8001a4c:	b580      	push	{r7, lr}
 8001a4e:	af00      	add	r7, sp, #0
 8001a50:	4802      	ldr	r0, [pc, #8]	@ (8001a5c <USART2_IRQHandler+0x10>)
 8001a52:	f001 fd7d 	bl	8003550 <HAL_UART_IRQHandler>
 8001a56:	bf00      	nop
 8001a58:	bd80      	pop	{r7, pc}
 8001a5a:	bf00      	nop
 8001a5c:	200000e0 	.word	0x200000e0

08001a60 <USART3_IRQHandler>:
 8001a60:	b580      	push	{r7, lr}
 8001a62:	af00      	add	r7, sp, #0
 8001a64:	4802      	ldr	r0, [pc, #8]	@ (8001a70 <USART3_IRQHandler+0x10>)
 8001a66:	f001 fd73 	bl	8003550 <HAL_UART_IRQHandler>
 8001a6a:	bf00      	nop
 8001a6c:	bd80      	pop	{r7, pc}
 8001a6e:	bf00      	nop
 8001a70:	20000128 	.word	0x20000128

08001a74 <_read>:
 8001a74:	b580      	push	{r7, lr}
 8001a76:	b086      	sub	sp, #24
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	60f8      	str	r0, [r7, #12]
 8001a7c:	60b9      	str	r1, [r7, #8]
 8001a7e:	607a      	str	r2, [r7, #4]
 8001a80:	2300      	movs	r3, #0
 8001a82:	617b      	str	r3, [r7, #20]
 8001a84:	e00a      	b.n	8001a9c <_read+0x28>
 8001a86:	f3af 8000 	nop.w
 8001a8a:	4601      	mov	r1, r0
 8001a8c:	68bb      	ldr	r3, [r7, #8]
 8001a8e:	1c5a      	adds	r2, r3, #1
 8001a90:	60ba      	str	r2, [r7, #8]
 8001a92:	b2ca      	uxtb	r2, r1
 8001a94:	701a      	strb	r2, [r3, #0]
 8001a96:	697b      	ldr	r3, [r7, #20]
 8001a98:	3301      	adds	r3, #1
 8001a9a:	617b      	str	r3, [r7, #20]
 8001a9c:	697a      	ldr	r2, [r7, #20]
 8001a9e:	687b      	ldr	r3, [r7, #4]
 8001aa0:	429a      	cmp	r2, r3
 8001aa2:	dbf0      	blt.n	8001a86 <_read+0x12>
 8001aa4:	687b      	ldr	r3, [r7, #4]
 8001aa6:	4618      	mov	r0, r3
 8001aa8:	3718      	adds	r7, #24
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	bd80      	pop	{r7, pc}

08001aae <_write>:
 8001aae:	b580      	push	{r7, lr}
 8001ab0:	b086      	sub	sp, #24
 8001ab2:	af00      	add	r7, sp, #0
 8001ab4:	60f8      	str	r0, [r7, #12]
 8001ab6:	60b9      	str	r1, [r7, #8]
 8001ab8:	607a      	str	r2, [r7, #4]
 8001aba:	2300      	movs	r3, #0
 8001abc:	617b      	str	r3, [r7, #20]
 8001abe:	e009      	b.n	8001ad4 <_write+0x26>
 8001ac0:	68bb      	ldr	r3, [r7, #8]
 8001ac2:	1c5a      	adds	r2, r3, #1
 8001ac4:	60ba      	str	r2, [r7, #8]
 8001ac6:	781b      	ldrb	r3, [r3, #0]
 8001ac8:	4618      	mov	r0, r3
 8001aca:	f7fe fe3b 	bl	8000744 <__io_putchar>
 8001ace:	697b      	ldr	r3, [r7, #20]
 8001ad0:	3301      	adds	r3, #1
 8001ad2:	617b      	str	r3, [r7, #20]
 8001ad4:	697a      	ldr	r2, [r7, #20]
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	429a      	cmp	r2, r3
 8001ada:	dbf1      	blt.n	8001ac0 <_write+0x12>
 8001adc:	687b      	ldr	r3, [r7, #4]
 8001ade:	4618      	mov	r0, r3
 8001ae0:	3718      	adds	r7, #24
 8001ae2:	46bd      	mov	sp, r7
 8001ae4:	bd80      	pop	{r7, pc}

08001ae6 <_close>:
 8001ae6:	b480      	push	{r7}
 8001ae8:	b083      	sub	sp, #12
 8001aea:	af00      	add	r7, sp, #0
 8001aec:	6078      	str	r0, [r7, #4]
 8001aee:	f04f 33ff 	mov.w	r3, #4294967295
 8001af2:	4618      	mov	r0, r3
 8001af4:	370c      	adds	r7, #12
 8001af6:	46bd      	mov	sp, r7
 8001af8:	bc80      	pop	{r7}
 8001afa:	4770      	bx	lr

08001afc <_fstat>:
 8001afc:	b480      	push	{r7}
 8001afe:	b083      	sub	sp, #12
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	6078      	str	r0, [r7, #4]
 8001b04:	6039      	str	r1, [r7, #0]
 8001b06:	683b      	ldr	r3, [r7, #0]
 8001b08:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001b0c:	605a      	str	r2, [r3, #4]
 8001b0e:	2300      	movs	r3, #0
 8001b10:	4618      	mov	r0, r3
 8001b12:	370c      	adds	r7, #12
 8001b14:	46bd      	mov	sp, r7
 8001b16:	bc80      	pop	{r7}
 8001b18:	4770      	bx	lr

08001b1a <_isatty>:
 8001b1a:	b480      	push	{r7}
 8001b1c:	b083      	sub	sp, #12
 8001b1e:	af00      	add	r7, sp, #0
 8001b20:	6078      	str	r0, [r7, #4]
 8001b22:	2301      	movs	r3, #1
 8001b24:	4618      	mov	r0, r3
 8001b26:	370c      	adds	r7, #12
 8001b28:	46bd      	mov	sp, r7
 8001b2a:	bc80      	pop	{r7}
 8001b2c:	4770      	bx	lr

08001b2e <_lseek>:
 8001b2e:	b480      	push	{r7}
 8001b30:	b085      	sub	sp, #20
 8001b32:	af00      	add	r7, sp, #0
 8001b34:	60f8      	str	r0, [r7, #12]
 8001b36:	60b9      	str	r1, [r7, #8]
 8001b38:	607a      	str	r2, [r7, #4]
 8001b3a:	2300      	movs	r3, #0
 8001b3c:	4618      	mov	r0, r3
 8001b3e:	3714      	adds	r7, #20
 8001b40:	46bd      	mov	sp, r7
 8001b42:	bc80      	pop	{r7}
 8001b44:	4770      	bx	lr
	...

08001b48 <_sbrk>:
 8001b48:	b580      	push	{r7, lr}
 8001b4a:	b086      	sub	sp, #24
 8001b4c:	af00      	add	r7, sp, #0
 8001b4e:	6078      	str	r0, [r7, #4]
 8001b50:	4a14      	ldr	r2, [pc, #80]	@ (8001ba4 <_sbrk+0x5c>)
 8001b52:	4b15      	ldr	r3, [pc, #84]	@ (8001ba8 <_sbrk+0x60>)
 8001b54:	1ad3      	subs	r3, r2, r3
 8001b56:	617b      	str	r3, [r7, #20]
 8001b58:	697b      	ldr	r3, [r7, #20]
 8001b5a:	613b      	str	r3, [r7, #16]
 8001b5c:	4b13      	ldr	r3, [pc, #76]	@ (8001bac <_sbrk+0x64>)
 8001b5e:	681b      	ldr	r3, [r3, #0]
 8001b60:	2b00      	cmp	r3, #0
 8001b62:	d102      	bne.n	8001b6a <_sbrk+0x22>
 8001b64:	4b11      	ldr	r3, [pc, #68]	@ (8001bac <_sbrk+0x64>)
 8001b66:	4a12      	ldr	r2, [pc, #72]	@ (8001bb0 <_sbrk+0x68>)
 8001b68:	601a      	str	r2, [r3, #0]
 8001b6a:	4b10      	ldr	r3, [pc, #64]	@ (8001bac <_sbrk+0x64>)
 8001b6c:	681a      	ldr	r2, [r3, #0]
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	4413      	add	r3, r2
 8001b72:	693a      	ldr	r2, [r7, #16]
 8001b74:	429a      	cmp	r2, r3
 8001b76:	d207      	bcs.n	8001b88 <_sbrk+0x40>
 8001b78:	f002 fdce 	bl	8004718 <__errno>
 8001b7c:	4603      	mov	r3, r0
 8001b7e:	220c      	movs	r2, #12
 8001b80:	601a      	str	r2, [r3, #0]
 8001b82:	f04f 33ff 	mov.w	r3, #4294967295
 8001b86:	e009      	b.n	8001b9c <_sbrk+0x54>
 8001b88:	4b08      	ldr	r3, [pc, #32]	@ (8001bac <_sbrk+0x64>)
 8001b8a:	681b      	ldr	r3, [r3, #0]
 8001b8c:	60fb      	str	r3, [r7, #12]
 8001b8e:	4b07      	ldr	r3, [pc, #28]	@ (8001bac <_sbrk+0x64>)
 8001b90:	681a      	ldr	r2, [r3, #0]
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	4413      	add	r3, r2
 8001b96:	4a05      	ldr	r2, [pc, #20]	@ (8001bac <_sbrk+0x64>)
 8001b98:	6013      	str	r3, [r2, #0]
 8001b9a:	68fb      	ldr	r3, [r7, #12]
 8001b9c:	4618      	mov	r0, r3
 8001b9e:	3718      	adds	r7, #24
 8001ba0:	46bd      	mov	sp, r7
 8001ba2:	bd80      	pop	{r7, pc}
 8001ba4:	20020000 	.word	0x20020000
 8001ba8:	00000400 	.word	0x00000400
 8001bac:	200130f4 	.word	0x200130f4
 8001bb0:	20013268 	.word	0x20013268

08001bb4 <SystemInit>:
 8001bb4:	b480      	push	{r7}
 8001bb6:	af00      	add	r7, sp, #0
 8001bb8:	bf00      	nop
 8001bba:	46bd      	mov	sp, r7
 8001bbc:	bc80      	pop	{r7}
 8001bbe:	4770      	bx	lr

08001bc0 <Reset_Handler>:
 8001bc0:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001bf8 <LoopFillZerobss+0xe>
 8001bc4:	f7ff fff6 	bl	8001bb4 <SystemInit>
 8001bc8:	480c      	ldr	r0, [pc, #48]	@ (8001bfc <LoopFillZerobss+0x12>)
 8001bca:	490d      	ldr	r1, [pc, #52]	@ (8001c00 <LoopFillZerobss+0x16>)
 8001bcc:	4a0d      	ldr	r2, [pc, #52]	@ (8001c04 <LoopFillZerobss+0x1a>)
 8001bce:	2300      	movs	r3, #0
 8001bd0:	e002      	b.n	8001bd8 <LoopCopyDataInit>

08001bd2 <CopyDataInit>:
 8001bd2:	58d4      	ldr	r4, [r2, r3]
 8001bd4:	50c4      	str	r4, [r0, r3]
 8001bd6:	3304      	adds	r3, #4

08001bd8 <LoopCopyDataInit>:
 8001bd8:	18c4      	adds	r4, r0, r3
 8001bda:	428c      	cmp	r4, r1
 8001bdc:	d3f9      	bcc.n	8001bd2 <CopyDataInit>
 8001bde:	4a0a      	ldr	r2, [pc, #40]	@ (8001c08 <LoopFillZerobss+0x1e>)
 8001be0:	4c0a      	ldr	r4, [pc, #40]	@ (8001c0c <LoopFillZerobss+0x22>)
 8001be2:	2300      	movs	r3, #0
 8001be4:	e001      	b.n	8001bea <LoopFillZerobss>

08001be6 <FillZerobss>:
 8001be6:	6013      	str	r3, [r2, #0]
 8001be8:	3204      	adds	r2, #4

08001bea <LoopFillZerobss>:
 8001bea:	42a2      	cmp	r2, r4
 8001bec:	d3fb      	bcc.n	8001be6 <FillZerobss>
 8001bee:	f002 fd99 	bl	8004724 <__libc_init_array>
 8001bf2:	f7ff fa15 	bl	8001020 <main>
 8001bf6:	4770      	bx	lr
 8001bf8:	20020000 	.word	0x20020000
 8001bfc:	20000000 	.word	0x20000000
 8001c00:	20000068 	.word	0x20000068
 8001c04:	08005528 	.word	0x08005528
 8001c08:	20000068 	.word	0x20000068
 8001c0c:	20013268 	.word	0x20013268

08001c10 <ADC_IRQHandler>:
 8001c10:	e7fe      	b.n	8001c10 <ADC_IRQHandler>
	...

08001c14 <HAL_Init>:
 8001c14:	b580      	push	{r7, lr}
 8001c16:	af00      	add	r7, sp, #0
 8001c18:	4b0e      	ldr	r3, [pc, #56]	@ (8001c54 <HAL_Init+0x40>)
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	4a0d      	ldr	r2, [pc, #52]	@ (8001c54 <HAL_Init+0x40>)
 8001c1e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001c22:	6013      	str	r3, [r2, #0]
 8001c24:	4b0b      	ldr	r3, [pc, #44]	@ (8001c54 <HAL_Init+0x40>)
 8001c26:	681b      	ldr	r3, [r3, #0]
 8001c28:	4a0a      	ldr	r2, [pc, #40]	@ (8001c54 <HAL_Init+0x40>)
 8001c2a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001c2e:	6013      	str	r3, [r2, #0]
 8001c30:	4b08      	ldr	r3, [pc, #32]	@ (8001c54 <HAL_Init+0x40>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	4a07      	ldr	r2, [pc, #28]	@ (8001c54 <HAL_Init+0x40>)
 8001c36:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001c3a:	6013      	str	r3, [r2, #0]
 8001c3c:	2003      	movs	r0, #3
 8001c3e:	f000 f923 	bl	8001e88 <HAL_NVIC_SetPriorityGrouping>
 8001c42:	200f      	movs	r0, #15
 8001c44:	f000 f808 	bl	8001c58 <HAL_InitTick>
 8001c48:	f7ff fdd8 	bl	80017fc <HAL_MspInit>
 8001c4c:	2300      	movs	r3, #0
 8001c4e:	4618      	mov	r0, r3
 8001c50:	bd80      	pop	{r7, pc}
 8001c52:	bf00      	nop
 8001c54:	40023c00 	.word	0x40023c00

08001c58 <HAL_InitTick>:
 8001c58:	b580      	push	{r7, lr}
 8001c5a:	b082      	sub	sp, #8
 8001c5c:	af00      	add	r7, sp, #0
 8001c5e:	6078      	str	r0, [r7, #4]
 8001c60:	4b12      	ldr	r3, [pc, #72]	@ (8001cac <HAL_InitTick+0x54>)
 8001c62:	681a      	ldr	r2, [r3, #0]
 8001c64:	4b12      	ldr	r3, [pc, #72]	@ (8001cb0 <HAL_InitTick+0x58>)
 8001c66:	781b      	ldrb	r3, [r3, #0]
 8001c68:	4619      	mov	r1, r3
 8001c6a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001c6e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001c72:	fbb2 f3f3 	udiv	r3, r2, r3
 8001c76:	4618      	mov	r0, r3
 8001c78:	f000 f93b 	bl	8001ef2 <HAL_SYSTICK_Config>
 8001c7c:	4603      	mov	r3, r0
 8001c7e:	2b00      	cmp	r3, #0
 8001c80:	d001      	beq.n	8001c86 <HAL_InitTick+0x2e>
 8001c82:	2301      	movs	r3, #1
 8001c84:	e00e      	b.n	8001ca4 <HAL_InitTick+0x4c>
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	2b0f      	cmp	r3, #15
 8001c8a:	d80a      	bhi.n	8001ca2 <HAL_InitTick+0x4a>
 8001c8c:	2200      	movs	r2, #0
 8001c8e:	6879      	ldr	r1, [r7, #4]
 8001c90:	f04f 30ff 	mov.w	r0, #4294967295
 8001c94:	f000 f903 	bl	8001e9e <HAL_NVIC_SetPriority>
 8001c98:	4a06      	ldr	r2, [pc, #24]	@ (8001cb4 <HAL_InitTick+0x5c>)
 8001c9a:	687b      	ldr	r3, [r7, #4]
 8001c9c:	6013      	str	r3, [r2, #0]
 8001c9e:	2300      	movs	r3, #0
 8001ca0:	e000      	b.n	8001ca4 <HAL_InitTick+0x4c>
 8001ca2:	2301      	movs	r3, #1
 8001ca4:	4618      	mov	r0, r3
 8001ca6:	3708      	adds	r7, #8
 8001ca8:	46bd      	mov	sp, r7
 8001caa:	bd80      	pop	{r7, pc}
 8001cac:	20000000 	.word	0x20000000
 8001cb0:	20000008 	.word	0x20000008
 8001cb4:	20000004 	.word	0x20000004

08001cb8 <HAL_IncTick>:
 8001cb8:	b480      	push	{r7}
 8001cba:	af00      	add	r7, sp, #0
 8001cbc:	4b05      	ldr	r3, [pc, #20]	@ (8001cd4 <HAL_IncTick+0x1c>)
 8001cbe:	781b      	ldrb	r3, [r3, #0]
 8001cc0:	461a      	mov	r2, r3
 8001cc2:	4b05      	ldr	r3, [pc, #20]	@ (8001cd8 <HAL_IncTick+0x20>)
 8001cc4:	681b      	ldr	r3, [r3, #0]
 8001cc6:	4413      	add	r3, r2
 8001cc8:	4a03      	ldr	r2, [pc, #12]	@ (8001cd8 <HAL_IncTick+0x20>)
 8001cca:	6013      	str	r3, [r2, #0]
 8001ccc:	bf00      	nop
 8001cce:	46bd      	mov	sp, r7
 8001cd0:	bc80      	pop	{r7}
 8001cd2:	4770      	bx	lr
 8001cd4:	20000008 	.word	0x20000008
 8001cd8:	200130f8 	.word	0x200130f8

08001cdc <HAL_GetTick>:
 8001cdc:	b480      	push	{r7}
 8001cde:	af00      	add	r7, sp, #0
 8001ce0:	4b02      	ldr	r3, [pc, #8]	@ (8001cec <HAL_GetTick+0x10>)
 8001ce2:	681b      	ldr	r3, [r3, #0]
 8001ce4:	4618      	mov	r0, r3
 8001ce6:	46bd      	mov	sp, r7
 8001ce8:	bc80      	pop	{r7}
 8001cea:	4770      	bx	lr
 8001cec:	200130f8 	.word	0x200130f8

08001cf0 <__NVIC_SetPriorityGrouping>:
 8001cf0:	b480      	push	{r7}
 8001cf2:	b085      	sub	sp, #20
 8001cf4:	af00      	add	r7, sp, #0
 8001cf6:	6078      	str	r0, [r7, #4]
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	f003 0307 	and.w	r3, r3, #7
 8001cfe:	60fb      	str	r3, [r7, #12]
 8001d00:	4b0c      	ldr	r3, [pc, #48]	@ (8001d34 <__NVIC_SetPriorityGrouping+0x44>)
 8001d02:	68db      	ldr	r3, [r3, #12]
 8001d04:	60bb      	str	r3, [r7, #8]
 8001d06:	68ba      	ldr	r2, [r7, #8]
 8001d08:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001d0c:	4013      	ands	r3, r2
 8001d0e:	60bb      	str	r3, [r7, #8]
 8001d10:	68fb      	ldr	r3, [r7, #12]
 8001d12:	021a      	lsls	r2, r3, #8
 8001d14:	68bb      	ldr	r3, [r7, #8]
 8001d16:	4313      	orrs	r3, r2
 8001d18:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001d1c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001d20:	60bb      	str	r3, [r7, #8]
 8001d22:	4a04      	ldr	r2, [pc, #16]	@ (8001d34 <__NVIC_SetPriorityGrouping+0x44>)
 8001d24:	68bb      	ldr	r3, [r7, #8]
 8001d26:	60d3      	str	r3, [r2, #12]
 8001d28:	bf00      	nop
 8001d2a:	3714      	adds	r7, #20
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	bc80      	pop	{r7}
 8001d30:	4770      	bx	lr
 8001d32:	bf00      	nop
 8001d34:	e000ed00 	.word	0xe000ed00

08001d38 <__NVIC_GetPriorityGrouping>:
 8001d38:	b480      	push	{r7}
 8001d3a:	af00      	add	r7, sp, #0
 8001d3c:	4b04      	ldr	r3, [pc, #16]	@ (8001d50 <__NVIC_GetPriorityGrouping+0x18>)
 8001d3e:	68db      	ldr	r3, [r3, #12]
 8001d40:	0a1b      	lsrs	r3, r3, #8
 8001d42:	f003 0307 	and.w	r3, r3, #7
 8001d46:	4618      	mov	r0, r3
 8001d48:	46bd      	mov	sp, r7
 8001d4a:	bc80      	pop	{r7}
 8001d4c:	4770      	bx	lr
 8001d4e:	bf00      	nop
 8001d50:	e000ed00 	.word	0xe000ed00

08001d54 <__NVIC_EnableIRQ>:
 8001d54:	b480      	push	{r7}
 8001d56:	b083      	sub	sp, #12
 8001d58:	af00      	add	r7, sp, #0
 8001d5a:	4603      	mov	r3, r0
 8001d5c:	71fb      	strb	r3, [r7, #7]
 8001d5e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d62:	2b00      	cmp	r3, #0
 8001d64:	db0b      	blt.n	8001d7e <__NVIC_EnableIRQ+0x2a>
 8001d66:	79fb      	ldrb	r3, [r7, #7]
 8001d68:	f003 021f 	and.w	r2, r3, #31
 8001d6c:	4906      	ldr	r1, [pc, #24]	@ (8001d88 <__NVIC_EnableIRQ+0x34>)
 8001d6e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d72:	095b      	lsrs	r3, r3, #5
 8001d74:	2001      	movs	r0, #1
 8001d76:	fa00 f202 	lsl.w	r2, r0, r2
 8001d7a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001d7e:	bf00      	nop
 8001d80:	370c      	adds	r7, #12
 8001d82:	46bd      	mov	sp, r7
 8001d84:	bc80      	pop	{r7}
 8001d86:	4770      	bx	lr
 8001d88:	e000e100 	.word	0xe000e100

08001d8c <__NVIC_SetPriority>:
 8001d8c:	b480      	push	{r7}
 8001d8e:	b083      	sub	sp, #12
 8001d90:	af00      	add	r7, sp, #0
 8001d92:	4603      	mov	r3, r0
 8001d94:	6039      	str	r1, [r7, #0]
 8001d96:	71fb      	strb	r3, [r7, #7]
 8001d98:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	db0a      	blt.n	8001db6 <__NVIC_SetPriority+0x2a>
 8001da0:	683b      	ldr	r3, [r7, #0]
 8001da2:	b2da      	uxtb	r2, r3
 8001da4:	490c      	ldr	r1, [pc, #48]	@ (8001dd8 <__NVIC_SetPriority+0x4c>)
 8001da6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001daa:	0112      	lsls	r2, r2, #4
 8001dac:	b2d2      	uxtb	r2, r2
 8001dae:	440b      	add	r3, r1
 8001db0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001db4:	e00a      	b.n	8001dcc <__NVIC_SetPriority+0x40>
 8001db6:	683b      	ldr	r3, [r7, #0]
 8001db8:	b2da      	uxtb	r2, r3
 8001dba:	4908      	ldr	r1, [pc, #32]	@ (8001ddc <__NVIC_SetPriority+0x50>)
 8001dbc:	79fb      	ldrb	r3, [r7, #7]
 8001dbe:	f003 030f 	and.w	r3, r3, #15
 8001dc2:	3b04      	subs	r3, #4
 8001dc4:	0112      	lsls	r2, r2, #4
 8001dc6:	b2d2      	uxtb	r2, r2
 8001dc8:	440b      	add	r3, r1
 8001dca:	761a      	strb	r2, [r3, #24]
 8001dcc:	bf00      	nop
 8001dce:	370c      	adds	r7, #12
 8001dd0:	46bd      	mov	sp, r7
 8001dd2:	bc80      	pop	{r7}
 8001dd4:	4770      	bx	lr
 8001dd6:	bf00      	nop
 8001dd8:	e000e100 	.word	0xe000e100
 8001ddc:	e000ed00 	.word	0xe000ed00

08001de0 <NVIC_EncodePriority>:
 8001de0:	b480      	push	{r7}
 8001de2:	b089      	sub	sp, #36	@ 0x24
 8001de4:	af00      	add	r7, sp, #0
 8001de6:	60f8      	str	r0, [r7, #12]
 8001de8:	60b9      	str	r1, [r7, #8]
 8001dea:	607a      	str	r2, [r7, #4]
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	f003 0307 	and.w	r3, r3, #7
 8001df2:	61fb      	str	r3, [r7, #28]
 8001df4:	69fb      	ldr	r3, [r7, #28]
 8001df6:	f1c3 0307 	rsb	r3, r3, #7
 8001dfa:	2b04      	cmp	r3, #4
 8001dfc:	bf28      	it	cs
 8001dfe:	2304      	movcs	r3, #4
 8001e00:	61bb      	str	r3, [r7, #24]
 8001e02:	69fb      	ldr	r3, [r7, #28]
 8001e04:	3304      	adds	r3, #4
 8001e06:	2b06      	cmp	r3, #6
 8001e08:	d902      	bls.n	8001e10 <NVIC_EncodePriority+0x30>
 8001e0a:	69fb      	ldr	r3, [r7, #28]
 8001e0c:	3b03      	subs	r3, #3
 8001e0e:	e000      	b.n	8001e12 <NVIC_EncodePriority+0x32>
 8001e10:	2300      	movs	r3, #0
 8001e12:	617b      	str	r3, [r7, #20]
 8001e14:	f04f 32ff 	mov.w	r2, #4294967295
 8001e18:	69bb      	ldr	r3, [r7, #24]
 8001e1a:	fa02 f303 	lsl.w	r3, r2, r3
 8001e1e:	43da      	mvns	r2, r3
 8001e20:	68bb      	ldr	r3, [r7, #8]
 8001e22:	401a      	ands	r2, r3
 8001e24:	697b      	ldr	r3, [r7, #20]
 8001e26:	409a      	lsls	r2, r3
 8001e28:	f04f 31ff 	mov.w	r1, #4294967295
 8001e2c:	697b      	ldr	r3, [r7, #20]
 8001e2e:	fa01 f303 	lsl.w	r3, r1, r3
 8001e32:	43d9      	mvns	r1, r3
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	400b      	ands	r3, r1
 8001e38:	4313      	orrs	r3, r2
 8001e3a:	4618      	mov	r0, r3
 8001e3c:	3724      	adds	r7, #36	@ 0x24
 8001e3e:	46bd      	mov	sp, r7
 8001e40:	bc80      	pop	{r7}
 8001e42:	4770      	bx	lr

08001e44 <SysTick_Config>:
 8001e44:	b580      	push	{r7, lr}
 8001e46:	b082      	sub	sp, #8
 8001e48:	af00      	add	r7, sp, #0
 8001e4a:	6078      	str	r0, [r7, #4]
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	3b01      	subs	r3, #1
 8001e50:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001e54:	d301      	bcc.n	8001e5a <SysTick_Config+0x16>
 8001e56:	2301      	movs	r3, #1
 8001e58:	e00f      	b.n	8001e7a <SysTick_Config+0x36>
 8001e5a:	4a0a      	ldr	r2, [pc, #40]	@ (8001e84 <SysTick_Config+0x40>)
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	3b01      	subs	r3, #1
 8001e60:	6053      	str	r3, [r2, #4]
 8001e62:	210f      	movs	r1, #15
 8001e64:	f04f 30ff 	mov.w	r0, #4294967295
 8001e68:	f7ff ff90 	bl	8001d8c <__NVIC_SetPriority>
 8001e6c:	4b05      	ldr	r3, [pc, #20]	@ (8001e84 <SysTick_Config+0x40>)
 8001e6e:	2200      	movs	r2, #0
 8001e70:	609a      	str	r2, [r3, #8]
 8001e72:	4b04      	ldr	r3, [pc, #16]	@ (8001e84 <SysTick_Config+0x40>)
 8001e74:	2207      	movs	r2, #7
 8001e76:	601a      	str	r2, [r3, #0]
 8001e78:	2300      	movs	r3, #0
 8001e7a:	4618      	mov	r0, r3
 8001e7c:	3708      	adds	r7, #8
 8001e7e:	46bd      	mov	sp, r7
 8001e80:	bd80      	pop	{r7, pc}
 8001e82:	bf00      	nop
 8001e84:	e000e010 	.word	0xe000e010

08001e88 <HAL_NVIC_SetPriorityGrouping>:
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	b082      	sub	sp, #8
 8001e8c:	af00      	add	r7, sp, #0
 8001e8e:	6078      	str	r0, [r7, #4]
 8001e90:	6878      	ldr	r0, [r7, #4]
 8001e92:	f7ff ff2d 	bl	8001cf0 <__NVIC_SetPriorityGrouping>
 8001e96:	bf00      	nop
 8001e98:	3708      	adds	r7, #8
 8001e9a:	46bd      	mov	sp, r7
 8001e9c:	bd80      	pop	{r7, pc}

08001e9e <HAL_NVIC_SetPriority>:
 8001e9e:	b580      	push	{r7, lr}
 8001ea0:	b086      	sub	sp, #24
 8001ea2:	af00      	add	r7, sp, #0
 8001ea4:	4603      	mov	r3, r0
 8001ea6:	60b9      	str	r1, [r7, #8]
 8001ea8:	607a      	str	r2, [r7, #4]
 8001eaa:	73fb      	strb	r3, [r7, #15]
 8001eac:	2300      	movs	r3, #0
 8001eae:	617b      	str	r3, [r7, #20]
 8001eb0:	f7ff ff42 	bl	8001d38 <__NVIC_GetPriorityGrouping>
 8001eb4:	6178      	str	r0, [r7, #20]
 8001eb6:	687a      	ldr	r2, [r7, #4]
 8001eb8:	68b9      	ldr	r1, [r7, #8]
 8001eba:	6978      	ldr	r0, [r7, #20]
 8001ebc:	f7ff ff90 	bl	8001de0 <NVIC_EncodePriority>
 8001ec0:	4602      	mov	r2, r0
 8001ec2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ec6:	4611      	mov	r1, r2
 8001ec8:	4618      	mov	r0, r3
 8001eca:	f7ff ff5f 	bl	8001d8c <__NVIC_SetPriority>
 8001ece:	bf00      	nop
 8001ed0:	3718      	adds	r7, #24
 8001ed2:	46bd      	mov	sp, r7
 8001ed4:	bd80      	pop	{r7, pc}

08001ed6 <HAL_NVIC_EnableIRQ>:
 8001ed6:	b580      	push	{r7, lr}
 8001ed8:	b082      	sub	sp, #8
 8001eda:	af00      	add	r7, sp, #0
 8001edc:	4603      	mov	r3, r0
 8001ede:	71fb      	strb	r3, [r7, #7]
 8001ee0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	f7ff ff35 	bl	8001d54 <__NVIC_EnableIRQ>
 8001eea:	bf00      	nop
 8001eec:	3708      	adds	r7, #8
 8001eee:	46bd      	mov	sp, r7
 8001ef0:	bd80      	pop	{r7, pc}

08001ef2 <HAL_SYSTICK_Config>:
 8001ef2:	b580      	push	{r7, lr}
 8001ef4:	b082      	sub	sp, #8
 8001ef6:	af00      	add	r7, sp, #0
 8001ef8:	6078      	str	r0, [r7, #4]
 8001efa:	6878      	ldr	r0, [r7, #4]
 8001efc:	f7ff ffa2 	bl	8001e44 <SysTick_Config>
 8001f00:	4603      	mov	r3, r0
 8001f02:	4618      	mov	r0, r3
 8001f04:	3708      	adds	r7, #8
 8001f06:	46bd      	mov	sp, r7
 8001f08:	bd80      	pop	{r7, pc}

08001f0a <HAL_DMA_Abort>:
 8001f0a:	b580      	push	{r7, lr}
 8001f0c:	b084      	sub	sp, #16
 8001f0e:	af00      	add	r7, sp, #0
 8001f10:	6078      	str	r0, [r7, #4]
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001f16:	60fb      	str	r3, [r7, #12]
 8001f18:	f7ff fee0 	bl	8001cdc <HAL_GetTick>
 8001f1c:	60b8      	str	r0, [r7, #8]
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001f24:	b2db      	uxtb	r3, r3
 8001f26:	2b02      	cmp	r3, #2
 8001f28:	d008      	beq.n	8001f3c <HAL_DMA_Abort+0x32>
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	2280      	movs	r2, #128	@ 0x80
 8001f2e:	655a      	str	r2, [r3, #84]	@ 0x54
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	2200      	movs	r2, #0
 8001f34:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001f38:	2301      	movs	r3, #1
 8001f3a:	e052      	b.n	8001fe2 <HAL_DMA_Abort+0xd8>
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	681a      	ldr	r2, [r3, #0]
 8001f42:	687b      	ldr	r3, [r7, #4]
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	f022 0216 	bic.w	r2, r2, #22
 8001f4a:	601a      	str	r2, [r3, #0]
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	695a      	ldr	r2, [r3, #20]
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8001f5a:	615a      	str	r2, [r3, #20]
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f60:	2b00      	cmp	r3, #0
 8001f62:	d103      	bne.n	8001f6c <HAL_DMA_Abort+0x62>
 8001f64:	687b      	ldr	r3, [r7, #4]
 8001f66:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001f68:	2b00      	cmp	r3, #0
 8001f6a:	d007      	beq.n	8001f7c <HAL_DMA_Abort+0x72>
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	681a      	ldr	r2, [r3, #0]
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	f022 0208 	bic.w	r2, r2, #8
 8001f7a:	601a      	str	r2, [r3, #0]
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	681b      	ldr	r3, [r3, #0]
 8001f80:	681a      	ldr	r2, [r3, #0]
 8001f82:	687b      	ldr	r3, [r7, #4]
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	f022 0201 	bic.w	r2, r2, #1
 8001f8a:	601a      	str	r2, [r3, #0]
 8001f8c:	e013      	b.n	8001fb6 <HAL_DMA_Abort+0xac>
 8001f8e:	f7ff fea5 	bl	8001cdc <HAL_GetTick>
 8001f92:	4602      	mov	r2, r0
 8001f94:	68bb      	ldr	r3, [r7, #8]
 8001f96:	1ad3      	subs	r3, r2, r3
 8001f98:	2b05      	cmp	r3, #5
 8001f9a:	d90c      	bls.n	8001fb6 <HAL_DMA_Abort+0xac>
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	2220      	movs	r2, #32
 8001fa0:	655a      	str	r2, [r3, #84]	@ 0x54
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	2203      	movs	r2, #3
 8001fa6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	2200      	movs	r2, #0
 8001fae:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001fb2:	2303      	movs	r3, #3
 8001fb4:	e015      	b.n	8001fe2 <HAL_DMA_Abort+0xd8>
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	f003 0301 	and.w	r3, r3, #1
 8001fc0:	2b00      	cmp	r3, #0
 8001fc2:	d1e4      	bne.n	8001f8e <HAL_DMA_Abort+0x84>
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001fc8:	223f      	movs	r2, #63	@ 0x3f
 8001fca:	409a      	lsls	r2, r3
 8001fcc:	68fb      	ldr	r3, [r7, #12]
 8001fce:	609a      	str	r2, [r3, #8]
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	2201      	movs	r2, #1
 8001fd4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	2200      	movs	r2, #0
 8001fdc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001fe0:	2300      	movs	r3, #0
 8001fe2:	4618      	mov	r0, r3
 8001fe4:	3710      	adds	r7, #16
 8001fe6:	46bd      	mov	sp, r7
 8001fe8:	bd80      	pop	{r7, pc}

08001fea <HAL_DMA_Abort_IT>:
 8001fea:	b480      	push	{r7}
 8001fec:	b083      	sub	sp, #12
 8001fee:	af00      	add	r7, sp, #0
 8001ff0:	6078      	str	r0, [r7, #4]
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001ff8:	b2db      	uxtb	r3, r3
 8001ffa:	2b02      	cmp	r3, #2
 8001ffc:	d004      	beq.n	8002008 <HAL_DMA_Abort_IT+0x1e>
 8001ffe:	687b      	ldr	r3, [r7, #4]
 8002000:	2280      	movs	r2, #128	@ 0x80
 8002002:	655a      	str	r2, [r3, #84]	@ 0x54
 8002004:	2301      	movs	r3, #1
 8002006:	e00c      	b.n	8002022 <HAL_DMA_Abort_IT+0x38>
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	2205      	movs	r2, #5
 800200c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	681a      	ldr	r2, [r3, #0]
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	681b      	ldr	r3, [r3, #0]
 800201a:	f022 0201 	bic.w	r2, r2, #1
 800201e:	601a      	str	r2, [r3, #0]
 8002020:	2300      	movs	r3, #0
 8002022:	4618      	mov	r0, r3
 8002024:	370c      	adds	r7, #12
 8002026:	46bd      	mov	sp, r7
 8002028:	bc80      	pop	{r7}
 800202a:	4770      	bx	lr

0800202c <HAL_FLASH_Program>:
 800202c:	b580      	push	{r7, lr}
 800202e:	b086      	sub	sp, #24
 8002030:	af00      	add	r7, sp, #0
 8002032:	60f8      	str	r0, [r7, #12]
 8002034:	60b9      	str	r1, [r7, #8]
 8002036:	e9c7 2300 	strd	r2, r3, [r7]
 800203a:	2301      	movs	r3, #1
 800203c:	75fb      	strb	r3, [r7, #23]
 800203e:	4b23      	ldr	r3, [pc, #140]	@ (80020cc <HAL_FLASH_Program+0xa0>)
 8002040:	7e1b      	ldrb	r3, [r3, #24]
 8002042:	2b01      	cmp	r3, #1
 8002044:	d101      	bne.n	800204a <HAL_FLASH_Program+0x1e>
 8002046:	2302      	movs	r3, #2
 8002048:	e03b      	b.n	80020c2 <HAL_FLASH_Program+0x96>
 800204a:	4b20      	ldr	r3, [pc, #128]	@ (80020cc <HAL_FLASH_Program+0xa0>)
 800204c:	2201      	movs	r2, #1
 800204e:	761a      	strb	r2, [r3, #24]
 8002050:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002054:	f000 f87a 	bl	800214c <FLASH_WaitForLastOperation>
 8002058:	4603      	mov	r3, r0
 800205a:	75fb      	strb	r3, [r7, #23]
 800205c:	7dfb      	ldrb	r3, [r7, #23]
 800205e:	2b00      	cmp	r3, #0
 8002060:	d12b      	bne.n	80020ba <HAL_FLASH_Program+0x8e>
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	2b00      	cmp	r3, #0
 8002066:	d105      	bne.n	8002074 <HAL_FLASH_Program+0x48>
 8002068:	783b      	ldrb	r3, [r7, #0]
 800206a:	4619      	mov	r1, r3
 800206c:	68b8      	ldr	r0, [r7, #8]
 800206e:	f000 f923 	bl	80022b8 <FLASH_Program_Byte>
 8002072:	e016      	b.n	80020a2 <HAL_FLASH_Program+0x76>
 8002074:	68fb      	ldr	r3, [r7, #12]
 8002076:	2b01      	cmp	r3, #1
 8002078:	d105      	bne.n	8002086 <HAL_FLASH_Program+0x5a>
 800207a:	883b      	ldrh	r3, [r7, #0]
 800207c:	4619      	mov	r1, r3
 800207e:	68b8      	ldr	r0, [r7, #8]
 8002080:	f000 f8f8 	bl	8002274 <FLASH_Program_HalfWord>
 8002084:	e00d      	b.n	80020a2 <HAL_FLASH_Program+0x76>
 8002086:	68fb      	ldr	r3, [r7, #12]
 8002088:	2b02      	cmp	r3, #2
 800208a:	d105      	bne.n	8002098 <HAL_FLASH_Program+0x6c>
 800208c:	683b      	ldr	r3, [r7, #0]
 800208e:	4619      	mov	r1, r3
 8002090:	68b8      	ldr	r0, [r7, #8]
 8002092:	f000 f8cd 	bl	8002230 <FLASH_Program_Word>
 8002096:	e004      	b.n	80020a2 <HAL_FLASH_Program+0x76>
 8002098:	e9d7 2300 	ldrd	r2, r3, [r7]
 800209c:	68b8      	ldr	r0, [r7, #8]
 800209e:	f000 f895 	bl	80021cc <FLASH_Program_DoubleWord>
 80020a2:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80020a6:	f000 f851 	bl	800214c <FLASH_WaitForLastOperation>
 80020aa:	4603      	mov	r3, r0
 80020ac:	75fb      	strb	r3, [r7, #23]
 80020ae:	4b08      	ldr	r3, [pc, #32]	@ (80020d0 <HAL_FLASH_Program+0xa4>)
 80020b0:	691b      	ldr	r3, [r3, #16]
 80020b2:	4a07      	ldr	r2, [pc, #28]	@ (80020d0 <HAL_FLASH_Program+0xa4>)
 80020b4:	f023 0301 	bic.w	r3, r3, #1
 80020b8:	6113      	str	r3, [r2, #16]
 80020ba:	4b04      	ldr	r3, [pc, #16]	@ (80020cc <HAL_FLASH_Program+0xa0>)
 80020bc:	2200      	movs	r2, #0
 80020be:	761a      	strb	r2, [r3, #24]
 80020c0:	7dfb      	ldrb	r3, [r7, #23]
 80020c2:	4618      	mov	r0, r3
 80020c4:	3718      	adds	r7, #24
 80020c6:	46bd      	mov	sp, r7
 80020c8:	bd80      	pop	{r7, pc}
 80020ca:	bf00      	nop
 80020cc:	200130fc 	.word	0x200130fc
 80020d0:	40023c00 	.word	0x40023c00

080020d4 <HAL_FLASH_Unlock>:
 80020d4:	b480      	push	{r7}
 80020d6:	b083      	sub	sp, #12
 80020d8:	af00      	add	r7, sp, #0
 80020da:	2300      	movs	r3, #0
 80020dc:	71fb      	strb	r3, [r7, #7]
 80020de:	4b0b      	ldr	r3, [pc, #44]	@ (800210c <HAL_FLASH_Unlock+0x38>)
 80020e0:	691b      	ldr	r3, [r3, #16]
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	da0b      	bge.n	80020fe <HAL_FLASH_Unlock+0x2a>
 80020e6:	4b09      	ldr	r3, [pc, #36]	@ (800210c <HAL_FLASH_Unlock+0x38>)
 80020e8:	4a09      	ldr	r2, [pc, #36]	@ (8002110 <HAL_FLASH_Unlock+0x3c>)
 80020ea:	605a      	str	r2, [r3, #4]
 80020ec:	4b07      	ldr	r3, [pc, #28]	@ (800210c <HAL_FLASH_Unlock+0x38>)
 80020ee:	4a09      	ldr	r2, [pc, #36]	@ (8002114 <HAL_FLASH_Unlock+0x40>)
 80020f0:	605a      	str	r2, [r3, #4]
 80020f2:	4b06      	ldr	r3, [pc, #24]	@ (800210c <HAL_FLASH_Unlock+0x38>)
 80020f4:	691b      	ldr	r3, [r3, #16]
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	da01      	bge.n	80020fe <HAL_FLASH_Unlock+0x2a>
 80020fa:	2301      	movs	r3, #1
 80020fc:	71fb      	strb	r3, [r7, #7]
 80020fe:	79fb      	ldrb	r3, [r7, #7]
 8002100:	4618      	mov	r0, r3
 8002102:	370c      	adds	r7, #12
 8002104:	46bd      	mov	sp, r7
 8002106:	bc80      	pop	{r7}
 8002108:	4770      	bx	lr
 800210a:	bf00      	nop
 800210c:	40023c00 	.word	0x40023c00
 8002110:	45670123 	.word	0x45670123
 8002114:	cdef89ab 	.word	0xcdef89ab

08002118 <HAL_FLASH_Lock>:
 8002118:	b480      	push	{r7}
 800211a:	af00      	add	r7, sp, #0
 800211c:	4b05      	ldr	r3, [pc, #20]	@ (8002134 <HAL_FLASH_Lock+0x1c>)
 800211e:	691b      	ldr	r3, [r3, #16]
 8002120:	4a04      	ldr	r2, [pc, #16]	@ (8002134 <HAL_FLASH_Lock+0x1c>)
 8002122:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8002126:	6113      	str	r3, [r2, #16]
 8002128:	2300      	movs	r3, #0
 800212a:	4618      	mov	r0, r3
 800212c:	46bd      	mov	sp, r7
 800212e:	bc80      	pop	{r7}
 8002130:	4770      	bx	lr
 8002132:	bf00      	nop
 8002134:	40023c00 	.word	0x40023c00

08002138 <HAL_FLASH_GetError>:
 8002138:	b480      	push	{r7}
 800213a:	af00      	add	r7, sp, #0
 800213c:	4b02      	ldr	r3, [pc, #8]	@ (8002148 <HAL_FLASH_GetError+0x10>)
 800213e:	69db      	ldr	r3, [r3, #28]
 8002140:	4618      	mov	r0, r3
 8002142:	46bd      	mov	sp, r7
 8002144:	bc80      	pop	{r7}
 8002146:	4770      	bx	lr
 8002148:	200130fc 	.word	0x200130fc

0800214c <FLASH_WaitForLastOperation>:
 800214c:	b580      	push	{r7, lr}
 800214e:	b084      	sub	sp, #16
 8002150:	af00      	add	r7, sp, #0
 8002152:	6078      	str	r0, [r7, #4]
 8002154:	2300      	movs	r3, #0
 8002156:	60fb      	str	r3, [r7, #12]
 8002158:	4b1a      	ldr	r3, [pc, #104]	@ (80021c4 <FLASH_WaitForLastOperation+0x78>)
 800215a:	2200      	movs	r2, #0
 800215c:	61da      	str	r2, [r3, #28]
 800215e:	f7ff fdbd 	bl	8001cdc <HAL_GetTick>
 8002162:	60f8      	str	r0, [r7, #12]
 8002164:	e010      	b.n	8002188 <FLASH_WaitForLastOperation+0x3c>
 8002166:	687b      	ldr	r3, [r7, #4]
 8002168:	f1b3 3fff 	cmp.w	r3, #4294967295
 800216c:	d00c      	beq.n	8002188 <FLASH_WaitForLastOperation+0x3c>
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	2b00      	cmp	r3, #0
 8002172:	d007      	beq.n	8002184 <FLASH_WaitForLastOperation+0x38>
 8002174:	f7ff fdb2 	bl	8001cdc <HAL_GetTick>
 8002178:	4602      	mov	r2, r0
 800217a:	68fb      	ldr	r3, [r7, #12]
 800217c:	1ad3      	subs	r3, r2, r3
 800217e:	687a      	ldr	r2, [r7, #4]
 8002180:	429a      	cmp	r2, r3
 8002182:	d201      	bcs.n	8002188 <FLASH_WaitForLastOperation+0x3c>
 8002184:	2303      	movs	r3, #3
 8002186:	e019      	b.n	80021bc <FLASH_WaitForLastOperation+0x70>
 8002188:	4b0f      	ldr	r3, [pc, #60]	@ (80021c8 <FLASH_WaitForLastOperation+0x7c>)
 800218a:	68db      	ldr	r3, [r3, #12]
 800218c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002190:	2b00      	cmp	r3, #0
 8002192:	d1e8      	bne.n	8002166 <FLASH_WaitForLastOperation+0x1a>
 8002194:	4b0c      	ldr	r3, [pc, #48]	@ (80021c8 <FLASH_WaitForLastOperation+0x7c>)
 8002196:	68db      	ldr	r3, [r3, #12]
 8002198:	f003 0301 	and.w	r3, r3, #1
 800219c:	2b00      	cmp	r3, #0
 800219e:	d002      	beq.n	80021a6 <FLASH_WaitForLastOperation+0x5a>
 80021a0:	4b09      	ldr	r3, [pc, #36]	@ (80021c8 <FLASH_WaitForLastOperation+0x7c>)
 80021a2:	2201      	movs	r2, #1
 80021a4:	60da      	str	r2, [r3, #12]
 80021a6:	4b08      	ldr	r3, [pc, #32]	@ (80021c8 <FLASH_WaitForLastOperation+0x7c>)
 80021a8:	68db      	ldr	r3, [r3, #12]
 80021aa:	f003 03f2 	and.w	r3, r3, #242	@ 0xf2
 80021ae:	2b00      	cmp	r3, #0
 80021b0:	d003      	beq.n	80021ba <FLASH_WaitForLastOperation+0x6e>
 80021b2:	f000 f8a1 	bl	80022f8 <FLASH_SetErrorCode>
 80021b6:	2301      	movs	r3, #1
 80021b8:	e000      	b.n	80021bc <FLASH_WaitForLastOperation+0x70>
 80021ba:	2300      	movs	r3, #0
 80021bc:	4618      	mov	r0, r3
 80021be:	3710      	adds	r7, #16
 80021c0:	46bd      	mov	sp, r7
 80021c2:	bd80      	pop	{r7, pc}
 80021c4:	200130fc 	.word	0x200130fc
 80021c8:	40023c00 	.word	0x40023c00

080021cc <FLASH_Program_DoubleWord>:
 80021cc:	b480      	push	{r7}
 80021ce:	b085      	sub	sp, #20
 80021d0:	af00      	add	r7, sp, #0
 80021d2:	60f8      	str	r0, [r7, #12]
 80021d4:	e9c7 2300 	strd	r2, r3, [r7]
 80021d8:	4b14      	ldr	r3, [pc, #80]	@ (800222c <FLASH_Program_DoubleWord+0x60>)
 80021da:	691b      	ldr	r3, [r3, #16]
 80021dc:	4a13      	ldr	r2, [pc, #76]	@ (800222c <FLASH_Program_DoubleWord+0x60>)
 80021de:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80021e2:	6113      	str	r3, [r2, #16]
 80021e4:	4b11      	ldr	r3, [pc, #68]	@ (800222c <FLASH_Program_DoubleWord+0x60>)
 80021e6:	691b      	ldr	r3, [r3, #16]
 80021e8:	4a10      	ldr	r2, [pc, #64]	@ (800222c <FLASH_Program_DoubleWord+0x60>)
 80021ea:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 80021ee:	6113      	str	r3, [r2, #16]
 80021f0:	4b0e      	ldr	r3, [pc, #56]	@ (800222c <FLASH_Program_DoubleWord+0x60>)
 80021f2:	691b      	ldr	r3, [r3, #16]
 80021f4:	4a0d      	ldr	r2, [pc, #52]	@ (800222c <FLASH_Program_DoubleWord+0x60>)
 80021f6:	f043 0301 	orr.w	r3, r3, #1
 80021fa:	6113      	str	r3, [r2, #16]
 80021fc:	68fb      	ldr	r3, [r7, #12]
 80021fe:	683a      	ldr	r2, [r7, #0]
 8002200:	601a      	str	r2, [r3, #0]
 8002202:	f3bf 8f6f 	isb	sy
 8002206:	bf00      	nop
 8002208:	e9d7 0100 	ldrd	r0, r1, [r7]
 800220c:	f04f 0200 	mov.w	r2, #0
 8002210:	f04f 0300 	mov.w	r3, #0
 8002214:	000a      	movs	r2, r1
 8002216:	2300      	movs	r3, #0
 8002218:	68f9      	ldr	r1, [r7, #12]
 800221a:	3104      	adds	r1, #4
 800221c:	4613      	mov	r3, r2
 800221e:	600b      	str	r3, [r1, #0]
 8002220:	bf00      	nop
 8002222:	3714      	adds	r7, #20
 8002224:	46bd      	mov	sp, r7
 8002226:	bc80      	pop	{r7}
 8002228:	4770      	bx	lr
 800222a:	bf00      	nop
 800222c:	40023c00 	.word	0x40023c00

08002230 <FLASH_Program_Word>:
 8002230:	b480      	push	{r7}
 8002232:	b083      	sub	sp, #12
 8002234:	af00      	add	r7, sp, #0
 8002236:	6078      	str	r0, [r7, #4]
 8002238:	6039      	str	r1, [r7, #0]
 800223a:	4b0d      	ldr	r3, [pc, #52]	@ (8002270 <FLASH_Program_Word+0x40>)
 800223c:	691b      	ldr	r3, [r3, #16]
 800223e:	4a0c      	ldr	r2, [pc, #48]	@ (8002270 <FLASH_Program_Word+0x40>)
 8002240:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002244:	6113      	str	r3, [r2, #16]
 8002246:	4b0a      	ldr	r3, [pc, #40]	@ (8002270 <FLASH_Program_Word+0x40>)
 8002248:	691b      	ldr	r3, [r3, #16]
 800224a:	4a09      	ldr	r2, [pc, #36]	@ (8002270 <FLASH_Program_Word+0x40>)
 800224c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002250:	6113      	str	r3, [r2, #16]
 8002252:	4b07      	ldr	r3, [pc, #28]	@ (8002270 <FLASH_Program_Word+0x40>)
 8002254:	691b      	ldr	r3, [r3, #16]
 8002256:	4a06      	ldr	r2, [pc, #24]	@ (8002270 <FLASH_Program_Word+0x40>)
 8002258:	f043 0301 	orr.w	r3, r3, #1
 800225c:	6113      	str	r3, [r2, #16]
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	683a      	ldr	r2, [r7, #0]
 8002262:	601a      	str	r2, [r3, #0]
 8002264:	bf00      	nop
 8002266:	370c      	adds	r7, #12
 8002268:	46bd      	mov	sp, r7
 800226a:	bc80      	pop	{r7}
 800226c:	4770      	bx	lr
 800226e:	bf00      	nop
 8002270:	40023c00 	.word	0x40023c00

08002274 <FLASH_Program_HalfWord>:
 8002274:	b480      	push	{r7}
 8002276:	b083      	sub	sp, #12
 8002278:	af00      	add	r7, sp, #0
 800227a:	6078      	str	r0, [r7, #4]
 800227c:	460b      	mov	r3, r1
 800227e:	807b      	strh	r3, [r7, #2]
 8002280:	4b0c      	ldr	r3, [pc, #48]	@ (80022b4 <FLASH_Program_HalfWord+0x40>)
 8002282:	691b      	ldr	r3, [r3, #16]
 8002284:	4a0b      	ldr	r2, [pc, #44]	@ (80022b4 <FLASH_Program_HalfWord+0x40>)
 8002286:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800228a:	6113      	str	r3, [r2, #16]
 800228c:	4b09      	ldr	r3, [pc, #36]	@ (80022b4 <FLASH_Program_HalfWord+0x40>)
 800228e:	691b      	ldr	r3, [r3, #16]
 8002290:	4a08      	ldr	r2, [pc, #32]	@ (80022b4 <FLASH_Program_HalfWord+0x40>)
 8002292:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002296:	6113      	str	r3, [r2, #16]
 8002298:	4b06      	ldr	r3, [pc, #24]	@ (80022b4 <FLASH_Program_HalfWord+0x40>)
 800229a:	691b      	ldr	r3, [r3, #16]
 800229c:	4a05      	ldr	r2, [pc, #20]	@ (80022b4 <FLASH_Program_HalfWord+0x40>)
 800229e:	f043 0301 	orr.w	r3, r3, #1
 80022a2:	6113      	str	r3, [r2, #16]
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	887a      	ldrh	r2, [r7, #2]
 80022a8:	801a      	strh	r2, [r3, #0]
 80022aa:	bf00      	nop
 80022ac:	370c      	adds	r7, #12
 80022ae:	46bd      	mov	sp, r7
 80022b0:	bc80      	pop	{r7}
 80022b2:	4770      	bx	lr
 80022b4:	40023c00 	.word	0x40023c00

080022b8 <FLASH_Program_Byte>:
 80022b8:	b480      	push	{r7}
 80022ba:	b083      	sub	sp, #12
 80022bc:	af00      	add	r7, sp, #0
 80022be:	6078      	str	r0, [r7, #4]
 80022c0:	460b      	mov	r3, r1
 80022c2:	70fb      	strb	r3, [r7, #3]
 80022c4:	4b0b      	ldr	r3, [pc, #44]	@ (80022f4 <FLASH_Program_Byte+0x3c>)
 80022c6:	691b      	ldr	r3, [r3, #16]
 80022c8:	4a0a      	ldr	r2, [pc, #40]	@ (80022f4 <FLASH_Program_Byte+0x3c>)
 80022ca:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80022ce:	6113      	str	r3, [r2, #16]
 80022d0:	4b08      	ldr	r3, [pc, #32]	@ (80022f4 <FLASH_Program_Byte+0x3c>)
 80022d2:	4a08      	ldr	r2, [pc, #32]	@ (80022f4 <FLASH_Program_Byte+0x3c>)
 80022d4:	691b      	ldr	r3, [r3, #16]
 80022d6:	6113      	str	r3, [r2, #16]
 80022d8:	4b06      	ldr	r3, [pc, #24]	@ (80022f4 <FLASH_Program_Byte+0x3c>)
 80022da:	691b      	ldr	r3, [r3, #16]
 80022dc:	4a05      	ldr	r2, [pc, #20]	@ (80022f4 <FLASH_Program_Byte+0x3c>)
 80022de:	f043 0301 	orr.w	r3, r3, #1
 80022e2:	6113      	str	r3, [r2, #16]
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	78fa      	ldrb	r2, [r7, #3]
 80022e8:	701a      	strb	r2, [r3, #0]
 80022ea:	bf00      	nop
 80022ec:	370c      	adds	r7, #12
 80022ee:	46bd      	mov	sp, r7
 80022f0:	bc80      	pop	{r7}
 80022f2:	4770      	bx	lr
 80022f4:	40023c00 	.word	0x40023c00

080022f8 <FLASH_SetErrorCode>:
 80022f8:	b480      	push	{r7}
 80022fa:	af00      	add	r7, sp, #0
 80022fc:	4b27      	ldr	r3, [pc, #156]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 80022fe:	68db      	ldr	r3, [r3, #12]
 8002300:	f003 0310 	and.w	r3, r3, #16
 8002304:	2b00      	cmp	r3, #0
 8002306:	d008      	beq.n	800231a <FLASH_SetErrorCode+0x22>
 8002308:	4b25      	ldr	r3, [pc, #148]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 800230a:	69db      	ldr	r3, [r3, #28]
 800230c:	f043 0308 	orr.w	r3, r3, #8
 8002310:	4a23      	ldr	r2, [pc, #140]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 8002312:	61d3      	str	r3, [r2, #28]
 8002314:	4b21      	ldr	r3, [pc, #132]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 8002316:	2210      	movs	r2, #16
 8002318:	60da      	str	r2, [r3, #12]
 800231a:	4b20      	ldr	r3, [pc, #128]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 800231c:	68db      	ldr	r3, [r3, #12]
 800231e:	f003 0320 	and.w	r3, r3, #32
 8002322:	2b00      	cmp	r3, #0
 8002324:	d008      	beq.n	8002338 <FLASH_SetErrorCode+0x40>
 8002326:	4b1e      	ldr	r3, [pc, #120]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 8002328:	69db      	ldr	r3, [r3, #28]
 800232a:	f043 0304 	orr.w	r3, r3, #4
 800232e:	4a1c      	ldr	r2, [pc, #112]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 8002330:	61d3      	str	r3, [r2, #28]
 8002332:	4b1a      	ldr	r3, [pc, #104]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 8002334:	2220      	movs	r2, #32
 8002336:	60da      	str	r2, [r3, #12]
 8002338:	4b18      	ldr	r3, [pc, #96]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 800233a:	68db      	ldr	r3, [r3, #12]
 800233c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002340:	2b00      	cmp	r3, #0
 8002342:	d008      	beq.n	8002356 <FLASH_SetErrorCode+0x5e>
 8002344:	4b16      	ldr	r3, [pc, #88]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 8002346:	69db      	ldr	r3, [r3, #28]
 8002348:	f043 0302 	orr.w	r3, r3, #2
 800234c:	4a14      	ldr	r2, [pc, #80]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 800234e:	61d3      	str	r3, [r2, #28]
 8002350:	4b12      	ldr	r3, [pc, #72]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 8002352:	2240      	movs	r2, #64	@ 0x40
 8002354:	60da      	str	r2, [r3, #12]
 8002356:	4b11      	ldr	r3, [pc, #68]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 8002358:	68db      	ldr	r3, [r3, #12]
 800235a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800235e:	2b00      	cmp	r3, #0
 8002360:	d008      	beq.n	8002374 <FLASH_SetErrorCode+0x7c>
 8002362:	4b0f      	ldr	r3, [pc, #60]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 8002364:	69db      	ldr	r3, [r3, #28]
 8002366:	f043 0301 	orr.w	r3, r3, #1
 800236a:	4a0d      	ldr	r2, [pc, #52]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 800236c:	61d3      	str	r3, [r2, #28]
 800236e:	4b0b      	ldr	r3, [pc, #44]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 8002370:	2280      	movs	r2, #128	@ 0x80
 8002372:	60da      	str	r2, [r3, #12]
 8002374:	4b09      	ldr	r3, [pc, #36]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 8002376:	68db      	ldr	r3, [r3, #12]
 8002378:	f003 0302 	and.w	r3, r3, #2
 800237c:	2b00      	cmp	r3, #0
 800237e:	d008      	beq.n	8002392 <FLASH_SetErrorCode+0x9a>
 8002380:	4b07      	ldr	r3, [pc, #28]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 8002382:	69db      	ldr	r3, [r3, #28]
 8002384:	f043 0310 	orr.w	r3, r3, #16
 8002388:	4a05      	ldr	r2, [pc, #20]	@ (80023a0 <FLASH_SetErrorCode+0xa8>)
 800238a:	61d3      	str	r3, [r2, #28]
 800238c:	4b03      	ldr	r3, [pc, #12]	@ (800239c <FLASH_SetErrorCode+0xa4>)
 800238e:	2202      	movs	r2, #2
 8002390:	60da      	str	r2, [r3, #12]
 8002392:	bf00      	nop
 8002394:	46bd      	mov	sp, r7
 8002396:	bc80      	pop	{r7}
 8002398:	4770      	bx	lr
 800239a:	bf00      	nop
 800239c:	40023c00 	.word	0x40023c00
 80023a0:	200130fc 	.word	0x200130fc

080023a4 <HAL_FLASHEx_Erase>:
 80023a4:	b580      	push	{r7, lr}
 80023a6:	b084      	sub	sp, #16
 80023a8:	af00      	add	r7, sp, #0
 80023aa:	6078      	str	r0, [r7, #4]
 80023ac:	6039      	str	r1, [r7, #0]
 80023ae:	2301      	movs	r3, #1
 80023b0:	73fb      	strb	r3, [r7, #15]
 80023b2:	2300      	movs	r3, #0
 80023b4:	60bb      	str	r3, [r7, #8]
 80023b6:	4b31      	ldr	r3, [pc, #196]	@ (800247c <HAL_FLASHEx_Erase+0xd8>)
 80023b8:	7e1b      	ldrb	r3, [r3, #24]
 80023ba:	2b01      	cmp	r3, #1
 80023bc:	d101      	bne.n	80023c2 <HAL_FLASHEx_Erase+0x1e>
 80023be:	2302      	movs	r3, #2
 80023c0:	e058      	b.n	8002474 <HAL_FLASHEx_Erase+0xd0>
 80023c2:	4b2e      	ldr	r3, [pc, #184]	@ (800247c <HAL_FLASHEx_Erase+0xd8>)
 80023c4:	2201      	movs	r2, #1
 80023c6:	761a      	strb	r2, [r3, #24]
 80023c8:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80023cc:	f7ff febe 	bl	800214c <FLASH_WaitForLastOperation>
 80023d0:	4603      	mov	r3, r0
 80023d2:	73fb      	strb	r3, [r7, #15]
 80023d4:	7bfb      	ldrb	r3, [r7, #15]
 80023d6:	2b00      	cmp	r3, #0
 80023d8:	d148      	bne.n	800246c <HAL_FLASHEx_Erase+0xc8>
 80023da:	683b      	ldr	r3, [r7, #0]
 80023dc:	f04f 32ff 	mov.w	r2, #4294967295
 80023e0:	601a      	str	r2, [r3, #0]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	2b01      	cmp	r3, #1
 80023e8:	d115      	bne.n	8002416 <HAL_FLASHEx_Erase+0x72>
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	691b      	ldr	r3, [r3, #16]
 80023ee:	b2da      	uxtb	r2, r3
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	685b      	ldr	r3, [r3, #4]
 80023f4:	4619      	mov	r1, r3
 80023f6:	4610      	mov	r0, r2
 80023f8:	f000 f8da 	bl	80025b0 <FLASH_MassErase>
 80023fc:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002400:	f7ff fea4 	bl	800214c <FLASH_WaitForLastOperation>
 8002404:	4603      	mov	r3, r0
 8002406:	73fb      	strb	r3, [r7, #15]
 8002408:	4b1d      	ldr	r3, [pc, #116]	@ (8002480 <HAL_FLASHEx_Erase+0xdc>)
 800240a:	691b      	ldr	r3, [r3, #16]
 800240c:	4a1c      	ldr	r2, [pc, #112]	@ (8002480 <HAL_FLASHEx_Erase+0xdc>)
 800240e:	f023 0304 	bic.w	r3, r3, #4
 8002412:	6113      	str	r3, [r2, #16]
 8002414:	e028      	b.n	8002468 <HAL_FLASHEx_Erase+0xc4>
 8002416:	687b      	ldr	r3, [r7, #4]
 8002418:	689b      	ldr	r3, [r3, #8]
 800241a:	60bb      	str	r3, [r7, #8]
 800241c:	e01c      	b.n	8002458 <HAL_FLASHEx_Erase+0xb4>
 800241e:	687b      	ldr	r3, [r7, #4]
 8002420:	691b      	ldr	r3, [r3, #16]
 8002422:	b2db      	uxtb	r3, r3
 8002424:	4619      	mov	r1, r3
 8002426:	68b8      	ldr	r0, [r7, #8]
 8002428:	f000 f82c 	bl	8002484 <FLASH_Erase_Sector>
 800242c:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002430:	f7ff fe8c 	bl	800214c <FLASH_WaitForLastOperation>
 8002434:	4603      	mov	r3, r0
 8002436:	73fb      	strb	r3, [r7, #15]
 8002438:	4b11      	ldr	r3, [pc, #68]	@ (8002480 <HAL_FLASHEx_Erase+0xdc>)
 800243a:	691b      	ldr	r3, [r3, #16]
 800243c:	4a10      	ldr	r2, [pc, #64]	@ (8002480 <HAL_FLASHEx_Erase+0xdc>)
 800243e:	f023 03fa 	bic.w	r3, r3, #250	@ 0xfa
 8002442:	6113      	str	r3, [r2, #16]
 8002444:	7bfb      	ldrb	r3, [r7, #15]
 8002446:	2b00      	cmp	r3, #0
 8002448:	d003      	beq.n	8002452 <HAL_FLASHEx_Erase+0xae>
 800244a:	683b      	ldr	r3, [r7, #0]
 800244c:	68ba      	ldr	r2, [r7, #8]
 800244e:	601a      	str	r2, [r3, #0]
 8002450:	e00a      	b.n	8002468 <HAL_FLASHEx_Erase+0xc4>
 8002452:	68bb      	ldr	r3, [r7, #8]
 8002454:	3301      	adds	r3, #1
 8002456:	60bb      	str	r3, [r7, #8]
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	68da      	ldr	r2, [r3, #12]
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	689b      	ldr	r3, [r3, #8]
 8002460:	4413      	add	r3, r2
 8002462:	68ba      	ldr	r2, [r7, #8]
 8002464:	429a      	cmp	r2, r3
 8002466:	d3da      	bcc.n	800241e <HAL_FLASHEx_Erase+0x7a>
 8002468:	f000 f85e 	bl	8002528 <FLASH_FlushCaches>
 800246c:	4b03      	ldr	r3, [pc, #12]	@ (800247c <HAL_FLASHEx_Erase+0xd8>)
 800246e:	2200      	movs	r2, #0
 8002470:	761a      	strb	r2, [r3, #24]
 8002472:	7bfb      	ldrb	r3, [r7, #15]
 8002474:	4618      	mov	r0, r3
 8002476:	3710      	adds	r7, #16
 8002478:	46bd      	mov	sp, r7
 800247a:	bd80      	pop	{r7, pc}
 800247c:	200130fc 	.word	0x200130fc
 8002480:	40023c00 	.word	0x40023c00

08002484 <FLASH_Erase_Sector>:
 8002484:	b480      	push	{r7}
 8002486:	b087      	sub	sp, #28
 8002488:	af00      	add	r7, sp, #0
 800248a:	6078      	str	r0, [r7, #4]
 800248c:	460b      	mov	r3, r1
 800248e:	70fb      	strb	r3, [r7, #3]
 8002490:	2300      	movs	r3, #0
 8002492:	617b      	str	r3, [r7, #20]
 8002494:	78fb      	ldrb	r3, [r7, #3]
 8002496:	2b00      	cmp	r3, #0
 8002498:	d102      	bne.n	80024a0 <FLASH_Erase_Sector+0x1c>
 800249a:	2300      	movs	r3, #0
 800249c:	617b      	str	r3, [r7, #20]
 800249e:	e010      	b.n	80024c2 <FLASH_Erase_Sector+0x3e>
 80024a0:	78fb      	ldrb	r3, [r7, #3]
 80024a2:	2b01      	cmp	r3, #1
 80024a4:	d103      	bne.n	80024ae <FLASH_Erase_Sector+0x2a>
 80024a6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80024aa:	617b      	str	r3, [r7, #20]
 80024ac:	e009      	b.n	80024c2 <FLASH_Erase_Sector+0x3e>
 80024ae:	78fb      	ldrb	r3, [r7, #3]
 80024b0:	2b02      	cmp	r3, #2
 80024b2:	d103      	bne.n	80024bc <FLASH_Erase_Sector+0x38>
 80024b4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80024b8:	617b      	str	r3, [r7, #20]
 80024ba:	e002      	b.n	80024c2 <FLASH_Erase_Sector+0x3e>
 80024bc:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80024c0:	617b      	str	r3, [r7, #20]
 80024c2:	4b18      	ldr	r3, [pc, #96]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 80024c4:	691b      	ldr	r3, [r3, #16]
 80024c6:	4a17      	ldr	r2, [pc, #92]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 80024c8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80024cc:	6113      	str	r3, [r2, #16]
 80024ce:	4b15      	ldr	r3, [pc, #84]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 80024d0:	691a      	ldr	r2, [r3, #16]
 80024d2:	4914      	ldr	r1, [pc, #80]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 80024d4:	697b      	ldr	r3, [r7, #20]
 80024d6:	4313      	orrs	r3, r2
 80024d8:	610b      	str	r3, [r1, #16]
 80024da:	4b12      	ldr	r3, [pc, #72]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 80024dc:	691b      	ldr	r3, [r3, #16]
 80024de:	4a11      	ldr	r2, [pc, #68]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 80024e0:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80024e4:	6113      	str	r3, [r2, #16]
 80024e6:	23f8      	movs	r3, #248	@ 0xf8
 80024e8:	613b      	str	r3, [r7, #16]
 80024ea:	693b      	ldr	r3, [r7, #16]
 80024ec:	fa93 f3a3 	rbit	r3, r3
 80024f0:	60fb      	str	r3, [r7, #12]
 80024f2:	68fb      	ldr	r3, [r7, #12]
 80024f4:	fab3 f383 	clz	r3, r3
 80024f8:	b2db      	uxtb	r3, r3
 80024fa:	461a      	mov	r2, r3
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	4093      	lsls	r3, r2
 8002500:	f043 0202 	orr.w	r2, r3, #2
 8002504:	4b07      	ldr	r3, [pc, #28]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 8002506:	691b      	ldr	r3, [r3, #16]
 8002508:	4906      	ldr	r1, [pc, #24]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 800250a:	4313      	orrs	r3, r2
 800250c:	610b      	str	r3, [r1, #16]
 800250e:	4b05      	ldr	r3, [pc, #20]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 8002510:	691b      	ldr	r3, [r3, #16]
 8002512:	4a04      	ldr	r2, [pc, #16]	@ (8002524 <FLASH_Erase_Sector+0xa0>)
 8002514:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002518:	6113      	str	r3, [r2, #16]
 800251a:	bf00      	nop
 800251c:	371c      	adds	r7, #28
 800251e:	46bd      	mov	sp, r7
 8002520:	bc80      	pop	{r7}
 8002522:	4770      	bx	lr
 8002524:	40023c00 	.word	0x40023c00

08002528 <FLASH_FlushCaches>:
 8002528:	b480      	push	{r7}
 800252a:	af00      	add	r7, sp, #0
 800252c:	4b1f      	ldr	r3, [pc, #124]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002534:	2b00      	cmp	r3, #0
 8002536:	d017      	beq.n	8002568 <FLASH_FlushCaches+0x40>
 8002538:	4b1c      	ldr	r3, [pc, #112]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	4a1b      	ldr	r2, [pc, #108]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800253e:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8002542:	6013      	str	r3, [r2, #0]
 8002544:	4b19      	ldr	r3, [pc, #100]	@ (80025ac <FLASH_FlushCaches+0x84>)
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	4a18      	ldr	r2, [pc, #96]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800254a:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800254e:	6013      	str	r3, [r2, #0]
 8002550:	4b16      	ldr	r3, [pc, #88]	@ (80025ac <FLASH_FlushCaches+0x84>)
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	4a15      	ldr	r2, [pc, #84]	@ (80025ac <FLASH_FlushCaches+0x84>)
 8002556:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800255a:	6013      	str	r3, [r2, #0]
 800255c:	4b13      	ldr	r3, [pc, #76]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	4a12      	ldr	r2, [pc, #72]	@ (80025ac <FLASH_FlushCaches+0x84>)
 8002562:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002566:	6013      	str	r3, [r2, #0]
 8002568:	4b10      	ldr	r3, [pc, #64]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002570:	2b00      	cmp	r3, #0
 8002572:	d017      	beq.n	80025a4 <FLASH_FlushCaches+0x7c>
 8002574:	4b0d      	ldr	r3, [pc, #52]	@ (80025ac <FLASH_FlushCaches+0x84>)
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	4a0c      	ldr	r2, [pc, #48]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800257a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800257e:	6013      	str	r3, [r2, #0]
 8002580:	4b0a      	ldr	r3, [pc, #40]	@ (80025ac <FLASH_FlushCaches+0x84>)
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	4a09      	ldr	r2, [pc, #36]	@ (80025ac <FLASH_FlushCaches+0x84>)
 8002586:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800258a:	6013      	str	r3, [r2, #0]
 800258c:	4b07      	ldr	r3, [pc, #28]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	4a06      	ldr	r2, [pc, #24]	@ (80025ac <FLASH_FlushCaches+0x84>)
 8002592:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002596:	6013      	str	r3, [r2, #0]
 8002598:	4b04      	ldr	r3, [pc, #16]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	4a03      	ldr	r2, [pc, #12]	@ (80025ac <FLASH_FlushCaches+0x84>)
 800259e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80025a2:	6013      	str	r3, [r2, #0]
 80025a4:	bf00      	nop
 80025a6:	46bd      	mov	sp, r7
 80025a8:	bc80      	pop	{r7}
 80025aa:	4770      	bx	lr
 80025ac:	40023c00 	.word	0x40023c00

080025b0 <FLASH_MassErase>:
 80025b0:	b480      	push	{r7}
 80025b2:	b083      	sub	sp, #12
 80025b4:	af00      	add	r7, sp, #0
 80025b6:	4603      	mov	r3, r0
 80025b8:	6039      	str	r1, [r7, #0]
 80025ba:	71fb      	strb	r3, [r7, #7]
 80025bc:	4b0c      	ldr	r3, [pc, #48]	@ (80025f0 <FLASH_MassErase+0x40>)
 80025be:	691b      	ldr	r3, [r3, #16]
 80025c0:	4a0b      	ldr	r2, [pc, #44]	@ (80025f0 <FLASH_MassErase+0x40>)
 80025c2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80025c6:	6113      	str	r3, [r2, #16]
 80025c8:	4b09      	ldr	r3, [pc, #36]	@ (80025f0 <FLASH_MassErase+0x40>)
 80025ca:	691b      	ldr	r3, [r3, #16]
 80025cc:	4a08      	ldr	r2, [pc, #32]	@ (80025f0 <FLASH_MassErase+0x40>)
 80025ce:	f043 0304 	orr.w	r3, r3, #4
 80025d2:	6113      	str	r3, [r2, #16]
 80025d4:	4b06      	ldr	r3, [pc, #24]	@ (80025f0 <FLASH_MassErase+0x40>)
 80025d6:	691a      	ldr	r2, [r3, #16]
 80025d8:	79fb      	ldrb	r3, [r7, #7]
 80025da:	021b      	lsls	r3, r3, #8
 80025dc:	4313      	orrs	r3, r2
 80025de:	4a04      	ldr	r2, [pc, #16]	@ (80025f0 <FLASH_MassErase+0x40>)
 80025e0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80025e4:	6113      	str	r3, [r2, #16]
 80025e6:	bf00      	nop
 80025e8:	370c      	adds	r7, #12
 80025ea:	46bd      	mov	sp, r7
 80025ec:	bc80      	pop	{r7}
 80025ee:	4770      	bx	lr
 80025f0:	40023c00 	.word	0x40023c00

080025f4 <HAL_GPIO_Init>:
 80025f4:	b480      	push	{r7}
 80025f6:	b087      	sub	sp, #28
 80025f8:	af00      	add	r7, sp, #0
 80025fa:	6078      	str	r0, [r7, #4]
 80025fc:	6039      	str	r1, [r7, #0]
 80025fe:	2300      	movs	r3, #0
 8002600:	617b      	str	r3, [r7, #20]
 8002602:	e16f      	b.n	80028e4 <HAL_GPIO_Init+0x2f0>
 8002604:	683b      	ldr	r3, [r7, #0]
 8002606:	681a      	ldr	r2, [r3, #0]
 8002608:	2101      	movs	r1, #1
 800260a:	697b      	ldr	r3, [r7, #20]
 800260c:	fa01 f303 	lsl.w	r3, r1, r3
 8002610:	4013      	ands	r3, r2
 8002612:	60fb      	str	r3, [r7, #12]
 8002614:	68fb      	ldr	r3, [r7, #12]
 8002616:	2b00      	cmp	r3, #0
 8002618:	f000 8161 	beq.w	80028de <HAL_GPIO_Init+0x2ea>
 800261c:	683b      	ldr	r3, [r7, #0]
 800261e:	685b      	ldr	r3, [r3, #4]
 8002620:	f003 0303 	and.w	r3, r3, #3
 8002624:	2b01      	cmp	r3, #1
 8002626:	d005      	beq.n	8002634 <HAL_GPIO_Init+0x40>
 8002628:	683b      	ldr	r3, [r7, #0]
 800262a:	685b      	ldr	r3, [r3, #4]
 800262c:	f003 0303 	and.w	r3, r3, #3
 8002630:	2b02      	cmp	r3, #2
 8002632:	d130      	bne.n	8002696 <HAL_GPIO_Init+0xa2>
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	689b      	ldr	r3, [r3, #8]
 8002638:	613b      	str	r3, [r7, #16]
 800263a:	697b      	ldr	r3, [r7, #20]
 800263c:	005b      	lsls	r3, r3, #1
 800263e:	2203      	movs	r2, #3
 8002640:	fa02 f303 	lsl.w	r3, r2, r3
 8002644:	43db      	mvns	r3, r3
 8002646:	693a      	ldr	r2, [r7, #16]
 8002648:	4013      	ands	r3, r2
 800264a:	613b      	str	r3, [r7, #16]
 800264c:	683b      	ldr	r3, [r7, #0]
 800264e:	68da      	ldr	r2, [r3, #12]
 8002650:	697b      	ldr	r3, [r7, #20]
 8002652:	005b      	lsls	r3, r3, #1
 8002654:	fa02 f303 	lsl.w	r3, r2, r3
 8002658:	693a      	ldr	r2, [r7, #16]
 800265a:	4313      	orrs	r3, r2
 800265c:	613b      	str	r3, [r7, #16]
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	693a      	ldr	r2, [r7, #16]
 8002662:	609a      	str	r2, [r3, #8]
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	685b      	ldr	r3, [r3, #4]
 8002668:	613b      	str	r3, [r7, #16]
 800266a:	2201      	movs	r2, #1
 800266c:	697b      	ldr	r3, [r7, #20]
 800266e:	fa02 f303 	lsl.w	r3, r2, r3
 8002672:	43db      	mvns	r3, r3
 8002674:	693a      	ldr	r2, [r7, #16]
 8002676:	4013      	ands	r3, r2
 8002678:	613b      	str	r3, [r7, #16]
 800267a:	683b      	ldr	r3, [r7, #0]
 800267c:	685b      	ldr	r3, [r3, #4]
 800267e:	091b      	lsrs	r3, r3, #4
 8002680:	f003 0201 	and.w	r2, r3, #1
 8002684:	697b      	ldr	r3, [r7, #20]
 8002686:	fa02 f303 	lsl.w	r3, r2, r3
 800268a:	693a      	ldr	r2, [r7, #16]
 800268c:	4313      	orrs	r3, r2
 800268e:	613b      	str	r3, [r7, #16]
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	693a      	ldr	r2, [r7, #16]
 8002694:	605a      	str	r2, [r3, #4]
 8002696:	683b      	ldr	r3, [r7, #0]
 8002698:	685b      	ldr	r3, [r3, #4]
 800269a:	f003 0303 	and.w	r3, r3, #3
 800269e:	2b03      	cmp	r3, #3
 80026a0:	d017      	beq.n	80026d2 <HAL_GPIO_Init+0xde>
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	68db      	ldr	r3, [r3, #12]
 80026a6:	613b      	str	r3, [r7, #16]
 80026a8:	697b      	ldr	r3, [r7, #20]
 80026aa:	005b      	lsls	r3, r3, #1
 80026ac:	2203      	movs	r2, #3
 80026ae:	fa02 f303 	lsl.w	r3, r2, r3
 80026b2:	43db      	mvns	r3, r3
 80026b4:	693a      	ldr	r2, [r7, #16]
 80026b6:	4013      	ands	r3, r2
 80026b8:	613b      	str	r3, [r7, #16]
 80026ba:	683b      	ldr	r3, [r7, #0]
 80026bc:	689a      	ldr	r2, [r3, #8]
 80026be:	697b      	ldr	r3, [r7, #20]
 80026c0:	005b      	lsls	r3, r3, #1
 80026c2:	fa02 f303 	lsl.w	r3, r2, r3
 80026c6:	693a      	ldr	r2, [r7, #16]
 80026c8:	4313      	orrs	r3, r2
 80026ca:	613b      	str	r3, [r7, #16]
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	693a      	ldr	r2, [r7, #16]
 80026d0:	60da      	str	r2, [r3, #12]
 80026d2:	683b      	ldr	r3, [r7, #0]
 80026d4:	685b      	ldr	r3, [r3, #4]
 80026d6:	f003 0303 	and.w	r3, r3, #3
 80026da:	2b02      	cmp	r3, #2
 80026dc:	d123      	bne.n	8002726 <HAL_GPIO_Init+0x132>
 80026de:	697b      	ldr	r3, [r7, #20]
 80026e0:	08da      	lsrs	r2, r3, #3
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	3208      	adds	r2, #8
 80026e6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80026ea:	613b      	str	r3, [r7, #16]
 80026ec:	697b      	ldr	r3, [r7, #20]
 80026ee:	f003 0307 	and.w	r3, r3, #7
 80026f2:	009b      	lsls	r3, r3, #2
 80026f4:	220f      	movs	r2, #15
 80026f6:	fa02 f303 	lsl.w	r3, r2, r3
 80026fa:	43db      	mvns	r3, r3
 80026fc:	693a      	ldr	r2, [r7, #16]
 80026fe:	4013      	ands	r3, r2
 8002700:	613b      	str	r3, [r7, #16]
 8002702:	683b      	ldr	r3, [r7, #0]
 8002704:	691a      	ldr	r2, [r3, #16]
 8002706:	697b      	ldr	r3, [r7, #20]
 8002708:	f003 0307 	and.w	r3, r3, #7
 800270c:	009b      	lsls	r3, r3, #2
 800270e:	fa02 f303 	lsl.w	r3, r2, r3
 8002712:	693a      	ldr	r2, [r7, #16]
 8002714:	4313      	orrs	r3, r2
 8002716:	613b      	str	r3, [r7, #16]
 8002718:	697b      	ldr	r3, [r7, #20]
 800271a:	08da      	lsrs	r2, r3, #3
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	3208      	adds	r2, #8
 8002720:	6939      	ldr	r1, [r7, #16]
 8002722:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	681b      	ldr	r3, [r3, #0]
 800272a:	613b      	str	r3, [r7, #16]
 800272c:	697b      	ldr	r3, [r7, #20]
 800272e:	005b      	lsls	r3, r3, #1
 8002730:	2203      	movs	r2, #3
 8002732:	fa02 f303 	lsl.w	r3, r2, r3
 8002736:	43db      	mvns	r3, r3
 8002738:	693a      	ldr	r2, [r7, #16]
 800273a:	4013      	ands	r3, r2
 800273c:	613b      	str	r3, [r7, #16]
 800273e:	683b      	ldr	r3, [r7, #0]
 8002740:	685b      	ldr	r3, [r3, #4]
 8002742:	f003 0203 	and.w	r2, r3, #3
 8002746:	697b      	ldr	r3, [r7, #20]
 8002748:	005b      	lsls	r3, r3, #1
 800274a:	fa02 f303 	lsl.w	r3, r2, r3
 800274e:	693a      	ldr	r2, [r7, #16]
 8002750:	4313      	orrs	r3, r2
 8002752:	613b      	str	r3, [r7, #16]
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	693a      	ldr	r2, [r7, #16]
 8002758:	601a      	str	r2, [r3, #0]
 800275a:	683b      	ldr	r3, [r7, #0]
 800275c:	685b      	ldr	r3, [r3, #4]
 800275e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002762:	2b00      	cmp	r3, #0
 8002764:	f000 80bb 	beq.w	80028de <HAL_GPIO_Init+0x2ea>
 8002768:	2300      	movs	r3, #0
 800276a:	60bb      	str	r3, [r7, #8]
 800276c:	4b64      	ldr	r3, [pc, #400]	@ (8002900 <HAL_GPIO_Init+0x30c>)
 800276e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002770:	4a63      	ldr	r2, [pc, #396]	@ (8002900 <HAL_GPIO_Init+0x30c>)
 8002772:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002776:	6453      	str	r3, [r2, #68]	@ 0x44
 8002778:	4b61      	ldr	r3, [pc, #388]	@ (8002900 <HAL_GPIO_Init+0x30c>)
 800277a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800277c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002780:	60bb      	str	r3, [r7, #8]
 8002782:	68bb      	ldr	r3, [r7, #8]
 8002784:	4a5f      	ldr	r2, [pc, #380]	@ (8002904 <HAL_GPIO_Init+0x310>)
 8002786:	697b      	ldr	r3, [r7, #20]
 8002788:	089b      	lsrs	r3, r3, #2
 800278a:	3302      	adds	r3, #2
 800278c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002790:	613b      	str	r3, [r7, #16]
 8002792:	697b      	ldr	r3, [r7, #20]
 8002794:	f003 0303 	and.w	r3, r3, #3
 8002798:	009b      	lsls	r3, r3, #2
 800279a:	220f      	movs	r2, #15
 800279c:	fa02 f303 	lsl.w	r3, r2, r3
 80027a0:	43db      	mvns	r3, r3
 80027a2:	693a      	ldr	r2, [r7, #16]
 80027a4:	4013      	ands	r3, r2
 80027a6:	613b      	str	r3, [r7, #16]
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	4a57      	ldr	r2, [pc, #348]	@ (8002908 <HAL_GPIO_Init+0x314>)
 80027ac:	4293      	cmp	r3, r2
 80027ae:	d031      	beq.n	8002814 <HAL_GPIO_Init+0x220>
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	4a56      	ldr	r2, [pc, #344]	@ (800290c <HAL_GPIO_Init+0x318>)
 80027b4:	4293      	cmp	r3, r2
 80027b6:	d02b      	beq.n	8002810 <HAL_GPIO_Init+0x21c>
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	4a55      	ldr	r2, [pc, #340]	@ (8002910 <HAL_GPIO_Init+0x31c>)
 80027bc:	4293      	cmp	r3, r2
 80027be:	d025      	beq.n	800280c <HAL_GPIO_Init+0x218>
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	4a54      	ldr	r2, [pc, #336]	@ (8002914 <HAL_GPIO_Init+0x320>)
 80027c4:	4293      	cmp	r3, r2
 80027c6:	d01f      	beq.n	8002808 <HAL_GPIO_Init+0x214>
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	4a53      	ldr	r2, [pc, #332]	@ (8002918 <HAL_GPIO_Init+0x324>)
 80027cc:	4293      	cmp	r3, r2
 80027ce:	d019      	beq.n	8002804 <HAL_GPIO_Init+0x210>
 80027d0:	687b      	ldr	r3, [r7, #4]
 80027d2:	4a52      	ldr	r2, [pc, #328]	@ (800291c <HAL_GPIO_Init+0x328>)
 80027d4:	4293      	cmp	r3, r2
 80027d6:	d013      	beq.n	8002800 <HAL_GPIO_Init+0x20c>
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	4a51      	ldr	r2, [pc, #324]	@ (8002920 <HAL_GPIO_Init+0x32c>)
 80027dc:	4293      	cmp	r3, r2
 80027de:	d00d      	beq.n	80027fc <HAL_GPIO_Init+0x208>
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	4a50      	ldr	r2, [pc, #320]	@ (8002924 <HAL_GPIO_Init+0x330>)
 80027e4:	4293      	cmp	r3, r2
 80027e6:	d007      	beq.n	80027f8 <HAL_GPIO_Init+0x204>
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	4a4f      	ldr	r2, [pc, #316]	@ (8002928 <HAL_GPIO_Init+0x334>)
 80027ec:	4293      	cmp	r3, r2
 80027ee:	d101      	bne.n	80027f4 <HAL_GPIO_Init+0x200>
 80027f0:	2308      	movs	r3, #8
 80027f2:	e010      	b.n	8002816 <HAL_GPIO_Init+0x222>
 80027f4:	2309      	movs	r3, #9
 80027f6:	e00e      	b.n	8002816 <HAL_GPIO_Init+0x222>
 80027f8:	2307      	movs	r3, #7
 80027fa:	e00c      	b.n	8002816 <HAL_GPIO_Init+0x222>
 80027fc:	2306      	movs	r3, #6
 80027fe:	e00a      	b.n	8002816 <HAL_GPIO_Init+0x222>
 8002800:	2305      	movs	r3, #5
 8002802:	e008      	b.n	8002816 <HAL_GPIO_Init+0x222>
 8002804:	2304      	movs	r3, #4
 8002806:	e006      	b.n	8002816 <HAL_GPIO_Init+0x222>
 8002808:	2303      	movs	r3, #3
 800280a:	e004      	b.n	8002816 <HAL_GPIO_Init+0x222>
 800280c:	2302      	movs	r3, #2
 800280e:	e002      	b.n	8002816 <HAL_GPIO_Init+0x222>
 8002810:	2301      	movs	r3, #1
 8002812:	e000      	b.n	8002816 <HAL_GPIO_Init+0x222>
 8002814:	2300      	movs	r3, #0
 8002816:	697a      	ldr	r2, [r7, #20]
 8002818:	f002 0203 	and.w	r2, r2, #3
 800281c:	0092      	lsls	r2, r2, #2
 800281e:	4093      	lsls	r3, r2
 8002820:	461a      	mov	r2, r3
 8002822:	693b      	ldr	r3, [r7, #16]
 8002824:	4313      	orrs	r3, r2
 8002826:	613b      	str	r3, [r7, #16]
 8002828:	4936      	ldr	r1, [pc, #216]	@ (8002904 <HAL_GPIO_Init+0x310>)
 800282a:	697b      	ldr	r3, [r7, #20]
 800282c:	089b      	lsrs	r3, r3, #2
 800282e:	3302      	adds	r3, #2
 8002830:	693a      	ldr	r2, [r7, #16]
 8002832:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002836:	4b3d      	ldr	r3, [pc, #244]	@ (800292c <HAL_GPIO_Init+0x338>)
 8002838:	689b      	ldr	r3, [r3, #8]
 800283a:	613b      	str	r3, [r7, #16]
 800283c:	68fb      	ldr	r3, [r7, #12]
 800283e:	43db      	mvns	r3, r3
 8002840:	693a      	ldr	r2, [r7, #16]
 8002842:	4013      	ands	r3, r2
 8002844:	613b      	str	r3, [r7, #16]
 8002846:	683b      	ldr	r3, [r7, #0]
 8002848:	685b      	ldr	r3, [r3, #4]
 800284a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800284e:	2b00      	cmp	r3, #0
 8002850:	d003      	beq.n	800285a <HAL_GPIO_Init+0x266>
 8002852:	693a      	ldr	r2, [r7, #16]
 8002854:	68fb      	ldr	r3, [r7, #12]
 8002856:	4313      	orrs	r3, r2
 8002858:	613b      	str	r3, [r7, #16]
 800285a:	4a34      	ldr	r2, [pc, #208]	@ (800292c <HAL_GPIO_Init+0x338>)
 800285c:	693b      	ldr	r3, [r7, #16]
 800285e:	6093      	str	r3, [r2, #8]
 8002860:	4b32      	ldr	r3, [pc, #200]	@ (800292c <HAL_GPIO_Init+0x338>)
 8002862:	68db      	ldr	r3, [r3, #12]
 8002864:	613b      	str	r3, [r7, #16]
 8002866:	68fb      	ldr	r3, [r7, #12]
 8002868:	43db      	mvns	r3, r3
 800286a:	693a      	ldr	r2, [r7, #16]
 800286c:	4013      	ands	r3, r2
 800286e:	613b      	str	r3, [r7, #16]
 8002870:	683b      	ldr	r3, [r7, #0]
 8002872:	685b      	ldr	r3, [r3, #4]
 8002874:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002878:	2b00      	cmp	r3, #0
 800287a:	d003      	beq.n	8002884 <HAL_GPIO_Init+0x290>
 800287c:	693a      	ldr	r2, [r7, #16]
 800287e:	68fb      	ldr	r3, [r7, #12]
 8002880:	4313      	orrs	r3, r2
 8002882:	613b      	str	r3, [r7, #16]
 8002884:	4a29      	ldr	r2, [pc, #164]	@ (800292c <HAL_GPIO_Init+0x338>)
 8002886:	693b      	ldr	r3, [r7, #16]
 8002888:	60d3      	str	r3, [r2, #12]
 800288a:	4b28      	ldr	r3, [pc, #160]	@ (800292c <HAL_GPIO_Init+0x338>)
 800288c:	685b      	ldr	r3, [r3, #4]
 800288e:	613b      	str	r3, [r7, #16]
 8002890:	68fb      	ldr	r3, [r7, #12]
 8002892:	43db      	mvns	r3, r3
 8002894:	693a      	ldr	r2, [r7, #16]
 8002896:	4013      	ands	r3, r2
 8002898:	613b      	str	r3, [r7, #16]
 800289a:	683b      	ldr	r3, [r7, #0]
 800289c:	685b      	ldr	r3, [r3, #4]
 800289e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80028a2:	2b00      	cmp	r3, #0
 80028a4:	d003      	beq.n	80028ae <HAL_GPIO_Init+0x2ba>
 80028a6:	693a      	ldr	r2, [r7, #16]
 80028a8:	68fb      	ldr	r3, [r7, #12]
 80028aa:	4313      	orrs	r3, r2
 80028ac:	613b      	str	r3, [r7, #16]
 80028ae:	4a1f      	ldr	r2, [pc, #124]	@ (800292c <HAL_GPIO_Init+0x338>)
 80028b0:	693b      	ldr	r3, [r7, #16]
 80028b2:	6053      	str	r3, [r2, #4]
 80028b4:	4b1d      	ldr	r3, [pc, #116]	@ (800292c <HAL_GPIO_Init+0x338>)
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	613b      	str	r3, [r7, #16]
 80028ba:	68fb      	ldr	r3, [r7, #12]
 80028bc:	43db      	mvns	r3, r3
 80028be:	693a      	ldr	r2, [r7, #16]
 80028c0:	4013      	ands	r3, r2
 80028c2:	613b      	str	r3, [r7, #16]
 80028c4:	683b      	ldr	r3, [r7, #0]
 80028c6:	685b      	ldr	r3, [r3, #4]
 80028c8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80028cc:	2b00      	cmp	r3, #0
 80028ce:	d003      	beq.n	80028d8 <HAL_GPIO_Init+0x2e4>
 80028d0:	693a      	ldr	r2, [r7, #16]
 80028d2:	68fb      	ldr	r3, [r7, #12]
 80028d4:	4313      	orrs	r3, r2
 80028d6:	613b      	str	r3, [r7, #16]
 80028d8:	4a14      	ldr	r2, [pc, #80]	@ (800292c <HAL_GPIO_Init+0x338>)
 80028da:	693b      	ldr	r3, [r7, #16]
 80028dc:	6013      	str	r3, [r2, #0]
 80028de:	697b      	ldr	r3, [r7, #20]
 80028e0:	3301      	adds	r3, #1
 80028e2:	617b      	str	r3, [r7, #20]
 80028e4:	683b      	ldr	r3, [r7, #0]
 80028e6:	681a      	ldr	r2, [r3, #0]
 80028e8:	697b      	ldr	r3, [r7, #20]
 80028ea:	fa22 f303 	lsr.w	r3, r2, r3
 80028ee:	2b00      	cmp	r3, #0
 80028f0:	f47f ae88 	bne.w	8002604 <HAL_GPIO_Init+0x10>
 80028f4:	bf00      	nop
 80028f6:	bf00      	nop
 80028f8:	371c      	adds	r7, #28
 80028fa:	46bd      	mov	sp, r7
 80028fc:	bc80      	pop	{r7}
 80028fe:	4770      	bx	lr
 8002900:	40023800 	.word	0x40023800
 8002904:	40013800 	.word	0x40013800
 8002908:	40020000 	.word	0x40020000
 800290c:	40020400 	.word	0x40020400
 8002910:	40020800 	.word	0x40020800
 8002914:	40020c00 	.word	0x40020c00
 8002918:	40021000 	.word	0x40021000
 800291c:	40021400 	.word	0x40021400
 8002920:	40021800 	.word	0x40021800
 8002924:	40021c00 	.word	0x40021c00
 8002928:	40022000 	.word	0x40022000
 800292c:	40013c00 	.word	0x40013c00

08002930 <HAL_GPIO_WritePin>:
 8002930:	b480      	push	{r7}
 8002932:	b083      	sub	sp, #12
 8002934:	af00      	add	r7, sp, #0
 8002936:	6078      	str	r0, [r7, #4]
 8002938:	460b      	mov	r3, r1
 800293a:	807b      	strh	r3, [r7, #2]
 800293c:	4613      	mov	r3, r2
 800293e:	707b      	strb	r3, [r7, #1]
 8002940:	787b      	ldrb	r3, [r7, #1]
 8002942:	2b00      	cmp	r3, #0
 8002944:	d003      	beq.n	800294e <HAL_GPIO_WritePin+0x1e>
 8002946:	887a      	ldrh	r2, [r7, #2]
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	619a      	str	r2, [r3, #24]
 800294c:	e003      	b.n	8002956 <HAL_GPIO_WritePin+0x26>
 800294e:	887b      	ldrh	r3, [r7, #2]
 8002950:	041a      	lsls	r2, r3, #16
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	619a      	str	r2, [r3, #24]
 8002956:	bf00      	nop
 8002958:	370c      	adds	r7, #12
 800295a:	46bd      	mov	sp, r7
 800295c:	bc80      	pop	{r7}
 800295e:	4770      	bx	lr

08002960 <HAL_GPIO_TogglePin>:
 8002960:	b480      	push	{r7}
 8002962:	b085      	sub	sp, #20
 8002964:	af00      	add	r7, sp, #0
 8002966:	6078      	str	r0, [r7, #4]
 8002968:	460b      	mov	r3, r1
 800296a:	807b      	strh	r3, [r7, #2]
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	695b      	ldr	r3, [r3, #20]
 8002970:	60fb      	str	r3, [r7, #12]
 8002972:	887a      	ldrh	r2, [r7, #2]
 8002974:	68fb      	ldr	r3, [r7, #12]
 8002976:	4013      	ands	r3, r2
 8002978:	041a      	lsls	r2, r3, #16
 800297a:	68fb      	ldr	r3, [r7, #12]
 800297c:	43d9      	mvns	r1, r3
 800297e:	887b      	ldrh	r3, [r7, #2]
 8002980:	400b      	ands	r3, r1
 8002982:	431a      	orrs	r2, r3
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	619a      	str	r2, [r3, #24]
 8002988:	bf00      	nop
 800298a:	3714      	adds	r7, #20
 800298c:	46bd      	mov	sp, r7
 800298e:	bc80      	pop	{r7}
 8002990:	4770      	bx	lr
	...

08002994 <HAL_RCC_OscConfig>:
 8002994:	b580      	push	{r7, lr}
 8002996:	b08a      	sub	sp, #40	@ 0x28
 8002998:	af00      	add	r7, sp, #0
 800299a:	6078      	str	r0, [r7, #4]
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	2b00      	cmp	r3, #0
 80029a0:	d101      	bne.n	80029a6 <HAL_RCC_OscConfig+0x12>
 80029a2:	2301      	movs	r3, #1
 80029a4:	e23b      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	f003 0301 	and.w	r3, r3, #1
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d050      	beq.n	8002a54 <HAL_RCC_OscConfig+0xc0>
 80029b2:	4b9e      	ldr	r3, [pc, #632]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 80029b4:	689b      	ldr	r3, [r3, #8]
 80029b6:	f003 030c 	and.w	r3, r3, #12
 80029ba:	2b04      	cmp	r3, #4
 80029bc:	d00c      	beq.n	80029d8 <HAL_RCC_OscConfig+0x44>
 80029be:	4b9b      	ldr	r3, [pc, #620]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 80029c0:	689b      	ldr	r3, [r3, #8]
 80029c2:	f003 030c 	and.w	r3, r3, #12
 80029c6:	2b08      	cmp	r3, #8
 80029c8:	d112      	bne.n	80029f0 <HAL_RCC_OscConfig+0x5c>
 80029ca:	4b98      	ldr	r3, [pc, #608]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 80029cc:	685b      	ldr	r3, [r3, #4]
 80029ce:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80029d2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80029d6:	d10b      	bne.n	80029f0 <HAL_RCC_OscConfig+0x5c>
 80029d8:	4b94      	ldr	r3, [pc, #592]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 80029da:	681b      	ldr	r3, [r3, #0]
 80029dc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80029e0:	2b00      	cmp	r3, #0
 80029e2:	d036      	beq.n	8002a52 <HAL_RCC_OscConfig+0xbe>
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	685b      	ldr	r3, [r3, #4]
 80029e8:	2b00      	cmp	r3, #0
 80029ea:	d132      	bne.n	8002a52 <HAL_RCC_OscConfig+0xbe>
 80029ec:	2301      	movs	r3, #1
 80029ee:	e216      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	685a      	ldr	r2, [r3, #4]
 80029f4:	4b8e      	ldr	r3, [pc, #568]	@ (8002c30 <HAL_RCC_OscConfig+0x29c>)
 80029f6:	b2d2      	uxtb	r2, r2
 80029f8:	701a      	strb	r2, [r3, #0]
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	685b      	ldr	r3, [r3, #4]
 80029fe:	2b00      	cmp	r3, #0
 8002a00:	d013      	beq.n	8002a2a <HAL_RCC_OscConfig+0x96>
 8002a02:	f7ff f96b 	bl	8001cdc <HAL_GetTick>
 8002a06:	6238      	str	r0, [r7, #32]
 8002a08:	e008      	b.n	8002a1c <HAL_RCC_OscConfig+0x88>
 8002a0a:	f7ff f967 	bl	8001cdc <HAL_GetTick>
 8002a0e:	4602      	mov	r2, r0
 8002a10:	6a3b      	ldr	r3, [r7, #32]
 8002a12:	1ad3      	subs	r3, r2, r3
 8002a14:	2b64      	cmp	r3, #100	@ 0x64
 8002a16:	d901      	bls.n	8002a1c <HAL_RCC_OscConfig+0x88>
 8002a18:	2303      	movs	r3, #3
 8002a1a:	e200      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002a1c:	4b83      	ldr	r3, [pc, #524]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a24:	2b00      	cmp	r3, #0
 8002a26:	d0f0      	beq.n	8002a0a <HAL_RCC_OscConfig+0x76>
 8002a28:	e014      	b.n	8002a54 <HAL_RCC_OscConfig+0xc0>
 8002a2a:	f7ff f957 	bl	8001cdc <HAL_GetTick>
 8002a2e:	6238      	str	r0, [r7, #32]
 8002a30:	e008      	b.n	8002a44 <HAL_RCC_OscConfig+0xb0>
 8002a32:	f7ff f953 	bl	8001cdc <HAL_GetTick>
 8002a36:	4602      	mov	r2, r0
 8002a38:	6a3b      	ldr	r3, [r7, #32]
 8002a3a:	1ad3      	subs	r3, r2, r3
 8002a3c:	2b64      	cmp	r3, #100	@ 0x64
 8002a3e:	d901      	bls.n	8002a44 <HAL_RCC_OscConfig+0xb0>
 8002a40:	2303      	movs	r3, #3
 8002a42:	e1ec      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002a44:	4b79      	ldr	r3, [pc, #484]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	d1f0      	bne.n	8002a32 <HAL_RCC_OscConfig+0x9e>
 8002a50:	e000      	b.n	8002a54 <HAL_RCC_OscConfig+0xc0>
 8002a52:	bf00      	nop
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	f003 0302 	and.w	r3, r3, #2
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d077      	beq.n	8002b50 <HAL_RCC_OscConfig+0x1bc>
 8002a60:	4b72      	ldr	r3, [pc, #456]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002a62:	689b      	ldr	r3, [r3, #8]
 8002a64:	f003 030c 	and.w	r3, r3, #12
 8002a68:	2b00      	cmp	r3, #0
 8002a6a:	d00b      	beq.n	8002a84 <HAL_RCC_OscConfig+0xf0>
 8002a6c:	4b6f      	ldr	r3, [pc, #444]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002a6e:	689b      	ldr	r3, [r3, #8]
 8002a70:	f003 030c 	and.w	r3, r3, #12
 8002a74:	2b08      	cmp	r3, #8
 8002a76:	d126      	bne.n	8002ac6 <HAL_RCC_OscConfig+0x132>
 8002a78:	4b6c      	ldr	r3, [pc, #432]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002a7a:	685b      	ldr	r3, [r3, #4]
 8002a7c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002a80:	2b00      	cmp	r3, #0
 8002a82:	d120      	bne.n	8002ac6 <HAL_RCC_OscConfig+0x132>
 8002a84:	4b69      	ldr	r3, [pc, #420]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	f003 0302 	and.w	r3, r3, #2
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	d005      	beq.n	8002a9c <HAL_RCC_OscConfig+0x108>
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	68db      	ldr	r3, [r3, #12]
 8002a94:	2b01      	cmp	r3, #1
 8002a96:	d001      	beq.n	8002a9c <HAL_RCC_OscConfig+0x108>
 8002a98:	2301      	movs	r3, #1
 8002a9a:	e1c0      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002a9c:	4b63      	ldr	r3, [pc, #396]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002a9e:	681b      	ldr	r3, [r3, #0]
 8002aa0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002aa4:	687b      	ldr	r3, [r7, #4]
 8002aa6:	691b      	ldr	r3, [r3, #16]
 8002aa8:	21f8      	movs	r1, #248	@ 0xf8
 8002aaa:	61b9      	str	r1, [r7, #24]
 8002aac:	69b9      	ldr	r1, [r7, #24]
 8002aae:	fa91 f1a1 	rbit	r1, r1
 8002ab2:	6179      	str	r1, [r7, #20]
 8002ab4:	6979      	ldr	r1, [r7, #20]
 8002ab6:	fab1 f181 	clz	r1, r1
 8002aba:	b2c9      	uxtb	r1, r1
 8002abc:	408b      	lsls	r3, r1
 8002abe:	495b      	ldr	r1, [pc, #364]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002ac0:	4313      	orrs	r3, r2
 8002ac2:	600b      	str	r3, [r1, #0]
 8002ac4:	e044      	b.n	8002b50 <HAL_RCC_OscConfig+0x1bc>
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	68db      	ldr	r3, [r3, #12]
 8002aca:	2b00      	cmp	r3, #0
 8002acc:	d02a      	beq.n	8002b24 <HAL_RCC_OscConfig+0x190>
 8002ace:	4b59      	ldr	r3, [pc, #356]	@ (8002c34 <HAL_RCC_OscConfig+0x2a0>)
 8002ad0:	2201      	movs	r2, #1
 8002ad2:	601a      	str	r2, [r3, #0]
 8002ad4:	f7ff f902 	bl	8001cdc <HAL_GetTick>
 8002ad8:	6238      	str	r0, [r7, #32]
 8002ada:	e008      	b.n	8002aee <HAL_RCC_OscConfig+0x15a>
 8002adc:	f7ff f8fe 	bl	8001cdc <HAL_GetTick>
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	6a3b      	ldr	r3, [r7, #32]
 8002ae4:	1ad3      	subs	r3, r2, r3
 8002ae6:	2b02      	cmp	r3, #2
 8002ae8:	d901      	bls.n	8002aee <HAL_RCC_OscConfig+0x15a>
 8002aea:	2303      	movs	r3, #3
 8002aec:	e197      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002aee:	4b4f      	ldr	r3, [pc, #316]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	f003 0302 	and.w	r3, r3, #2
 8002af6:	2b00      	cmp	r3, #0
 8002af8:	d0f0      	beq.n	8002adc <HAL_RCC_OscConfig+0x148>
 8002afa:	4b4c      	ldr	r3, [pc, #304]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	691b      	ldr	r3, [r3, #16]
 8002b06:	21f8      	movs	r1, #248	@ 0xf8
 8002b08:	6139      	str	r1, [r7, #16]
 8002b0a:	6939      	ldr	r1, [r7, #16]
 8002b0c:	fa91 f1a1 	rbit	r1, r1
 8002b10:	60f9      	str	r1, [r7, #12]
 8002b12:	68f9      	ldr	r1, [r7, #12]
 8002b14:	fab1 f181 	clz	r1, r1
 8002b18:	b2c9      	uxtb	r1, r1
 8002b1a:	408b      	lsls	r3, r1
 8002b1c:	4943      	ldr	r1, [pc, #268]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002b1e:	4313      	orrs	r3, r2
 8002b20:	600b      	str	r3, [r1, #0]
 8002b22:	e015      	b.n	8002b50 <HAL_RCC_OscConfig+0x1bc>
 8002b24:	4b43      	ldr	r3, [pc, #268]	@ (8002c34 <HAL_RCC_OscConfig+0x2a0>)
 8002b26:	2200      	movs	r2, #0
 8002b28:	601a      	str	r2, [r3, #0]
 8002b2a:	f7ff f8d7 	bl	8001cdc <HAL_GetTick>
 8002b2e:	6238      	str	r0, [r7, #32]
 8002b30:	e008      	b.n	8002b44 <HAL_RCC_OscConfig+0x1b0>
 8002b32:	f7ff f8d3 	bl	8001cdc <HAL_GetTick>
 8002b36:	4602      	mov	r2, r0
 8002b38:	6a3b      	ldr	r3, [r7, #32]
 8002b3a:	1ad3      	subs	r3, r2, r3
 8002b3c:	2b02      	cmp	r3, #2
 8002b3e:	d901      	bls.n	8002b44 <HAL_RCC_OscConfig+0x1b0>
 8002b40:	2303      	movs	r3, #3
 8002b42:	e16c      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002b44:	4b39      	ldr	r3, [pc, #228]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002b46:	681b      	ldr	r3, [r3, #0]
 8002b48:	f003 0302 	and.w	r3, r3, #2
 8002b4c:	2b00      	cmp	r3, #0
 8002b4e:	d1f0      	bne.n	8002b32 <HAL_RCC_OscConfig+0x19e>
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	681b      	ldr	r3, [r3, #0]
 8002b54:	f003 0308 	and.w	r3, r3, #8
 8002b58:	2b00      	cmp	r3, #0
 8002b5a:	d030      	beq.n	8002bbe <HAL_RCC_OscConfig+0x22a>
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	695b      	ldr	r3, [r3, #20]
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	d016      	beq.n	8002b92 <HAL_RCC_OscConfig+0x1fe>
 8002b64:	4b34      	ldr	r3, [pc, #208]	@ (8002c38 <HAL_RCC_OscConfig+0x2a4>)
 8002b66:	2201      	movs	r2, #1
 8002b68:	601a      	str	r2, [r3, #0]
 8002b6a:	f7ff f8b7 	bl	8001cdc <HAL_GetTick>
 8002b6e:	6238      	str	r0, [r7, #32]
 8002b70:	e008      	b.n	8002b84 <HAL_RCC_OscConfig+0x1f0>
 8002b72:	f7ff f8b3 	bl	8001cdc <HAL_GetTick>
 8002b76:	4602      	mov	r2, r0
 8002b78:	6a3b      	ldr	r3, [r7, #32]
 8002b7a:	1ad3      	subs	r3, r2, r3
 8002b7c:	2b02      	cmp	r3, #2
 8002b7e:	d901      	bls.n	8002b84 <HAL_RCC_OscConfig+0x1f0>
 8002b80:	2303      	movs	r3, #3
 8002b82:	e14c      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002b84:	4b29      	ldr	r3, [pc, #164]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002b86:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002b88:	f003 0302 	and.w	r3, r3, #2
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	d0f0      	beq.n	8002b72 <HAL_RCC_OscConfig+0x1de>
 8002b90:	e015      	b.n	8002bbe <HAL_RCC_OscConfig+0x22a>
 8002b92:	4b29      	ldr	r3, [pc, #164]	@ (8002c38 <HAL_RCC_OscConfig+0x2a4>)
 8002b94:	2200      	movs	r2, #0
 8002b96:	601a      	str	r2, [r3, #0]
 8002b98:	f7ff f8a0 	bl	8001cdc <HAL_GetTick>
 8002b9c:	6238      	str	r0, [r7, #32]
 8002b9e:	e008      	b.n	8002bb2 <HAL_RCC_OscConfig+0x21e>
 8002ba0:	f7ff f89c 	bl	8001cdc <HAL_GetTick>
 8002ba4:	4602      	mov	r2, r0
 8002ba6:	6a3b      	ldr	r3, [r7, #32]
 8002ba8:	1ad3      	subs	r3, r2, r3
 8002baa:	2b02      	cmp	r3, #2
 8002bac:	d901      	bls.n	8002bb2 <HAL_RCC_OscConfig+0x21e>
 8002bae:	2303      	movs	r3, #3
 8002bb0:	e135      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002bb2:	4b1e      	ldr	r3, [pc, #120]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002bb4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002bb6:	f003 0302 	and.w	r3, r3, #2
 8002bba:	2b00      	cmp	r3, #0
 8002bbc:	d1f0      	bne.n	8002ba0 <HAL_RCC_OscConfig+0x20c>
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	681b      	ldr	r3, [r3, #0]
 8002bc2:	f003 0304 	and.w	r3, r3, #4
 8002bc6:	2b00      	cmp	r3, #0
 8002bc8:	f000 8087 	beq.w	8002cda <HAL_RCC_OscConfig+0x346>
 8002bcc:	2300      	movs	r3, #0
 8002bce:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002bd2:	4b16      	ldr	r3, [pc, #88]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002bd4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bd6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002bda:	2b00      	cmp	r3, #0
 8002bdc:	d110      	bne.n	8002c00 <HAL_RCC_OscConfig+0x26c>
 8002bde:	2300      	movs	r3, #0
 8002be0:	60bb      	str	r3, [r7, #8]
 8002be2:	4b12      	ldr	r3, [pc, #72]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002be4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002be6:	4a11      	ldr	r2, [pc, #68]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002be8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002bec:	6413      	str	r3, [r2, #64]	@ 0x40
 8002bee:	4b0f      	ldr	r3, [pc, #60]	@ (8002c2c <HAL_RCC_OscConfig+0x298>)
 8002bf0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bf2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002bf6:	60bb      	str	r3, [r7, #8]
 8002bf8:	68bb      	ldr	r3, [r7, #8]
 8002bfa:	2301      	movs	r3, #1
 8002bfc:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002c00:	4b0e      	ldr	r3, [pc, #56]	@ (8002c3c <HAL_RCC_OscConfig+0x2a8>)
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	4a0d      	ldr	r2, [pc, #52]	@ (8002c3c <HAL_RCC_OscConfig+0x2a8>)
 8002c06:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002c0a:	6013      	str	r3, [r2, #0]
 8002c0c:	4b0b      	ldr	r3, [pc, #44]	@ (8002c3c <HAL_RCC_OscConfig+0x2a8>)
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002c14:	2b00      	cmp	r3, #0
 8002c16:	d122      	bne.n	8002c5e <HAL_RCC_OscConfig+0x2ca>
 8002c18:	4b08      	ldr	r3, [pc, #32]	@ (8002c3c <HAL_RCC_OscConfig+0x2a8>)
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	4a07      	ldr	r2, [pc, #28]	@ (8002c3c <HAL_RCC_OscConfig+0x2a8>)
 8002c1e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002c22:	6013      	str	r3, [r2, #0]
 8002c24:	f7ff f85a 	bl	8001cdc <HAL_GetTick>
 8002c28:	6238      	str	r0, [r7, #32]
 8002c2a:	e012      	b.n	8002c52 <HAL_RCC_OscConfig+0x2be>
 8002c2c:	40023800 	.word	0x40023800
 8002c30:	40023802 	.word	0x40023802
 8002c34:	42470000 	.word	0x42470000
 8002c38:	42470e80 	.word	0x42470e80
 8002c3c:	40007000 	.word	0x40007000
 8002c40:	f7ff f84c 	bl	8001cdc <HAL_GetTick>
 8002c44:	4602      	mov	r2, r0
 8002c46:	6a3b      	ldr	r3, [r7, #32]
 8002c48:	1ad3      	subs	r3, r2, r3
 8002c4a:	2b02      	cmp	r3, #2
 8002c4c:	d901      	bls.n	8002c52 <HAL_RCC_OscConfig+0x2be>
 8002c4e:	2303      	movs	r3, #3
 8002c50:	e0e5      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002c52:	4b75      	ldr	r3, [pc, #468]	@ (8002e28 <HAL_RCC_OscConfig+0x494>)
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002c5a:	2b00      	cmp	r3, #0
 8002c5c:	d0f0      	beq.n	8002c40 <HAL_RCC_OscConfig+0x2ac>
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	689a      	ldr	r2, [r3, #8]
 8002c62:	4b72      	ldr	r3, [pc, #456]	@ (8002e2c <HAL_RCC_OscConfig+0x498>)
 8002c64:	b2d2      	uxtb	r2, r2
 8002c66:	701a      	strb	r2, [r3, #0]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	689b      	ldr	r3, [r3, #8]
 8002c6c:	2b00      	cmp	r3, #0
 8002c6e:	d015      	beq.n	8002c9c <HAL_RCC_OscConfig+0x308>
 8002c70:	f7ff f834 	bl	8001cdc <HAL_GetTick>
 8002c74:	6238      	str	r0, [r7, #32]
 8002c76:	e00a      	b.n	8002c8e <HAL_RCC_OscConfig+0x2fa>
 8002c78:	f7ff f830 	bl	8001cdc <HAL_GetTick>
 8002c7c:	4602      	mov	r2, r0
 8002c7e:	6a3b      	ldr	r3, [r7, #32]
 8002c80:	1ad3      	subs	r3, r2, r3
 8002c82:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002c86:	4293      	cmp	r3, r2
 8002c88:	d901      	bls.n	8002c8e <HAL_RCC_OscConfig+0x2fa>
 8002c8a:	2303      	movs	r3, #3
 8002c8c:	e0c7      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002c8e:	4b68      	ldr	r3, [pc, #416]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002c90:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002c92:	f003 0302 	and.w	r3, r3, #2
 8002c96:	2b00      	cmp	r3, #0
 8002c98:	d0ee      	beq.n	8002c78 <HAL_RCC_OscConfig+0x2e4>
 8002c9a:	e014      	b.n	8002cc6 <HAL_RCC_OscConfig+0x332>
 8002c9c:	f7ff f81e 	bl	8001cdc <HAL_GetTick>
 8002ca0:	6238      	str	r0, [r7, #32]
 8002ca2:	e00a      	b.n	8002cba <HAL_RCC_OscConfig+0x326>
 8002ca4:	f7ff f81a 	bl	8001cdc <HAL_GetTick>
 8002ca8:	4602      	mov	r2, r0
 8002caa:	6a3b      	ldr	r3, [r7, #32]
 8002cac:	1ad3      	subs	r3, r2, r3
 8002cae:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002cb2:	4293      	cmp	r3, r2
 8002cb4:	d901      	bls.n	8002cba <HAL_RCC_OscConfig+0x326>
 8002cb6:	2303      	movs	r3, #3
 8002cb8:	e0b1      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002cba:	4b5d      	ldr	r3, [pc, #372]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002cbc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002cbe:	f003 0302 	and.w	r3, r3, #2
 8002cc2:	2b00      	cmp	r3, #0
 8002cc4:	d1ee      	bne.n	8002ca4 <HAL_RCC_OscConfig+0x310>
 8002cc6:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002cca:	2b01      	cmp	r3, #1
 8002ccc:	d105      	bne.n	8002cda <HAL_RCC_OscConfig+0x346>
 8002cce:	4b58      	ldr	r3, [pc, #352]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002cd0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cd2:	4a57      	ldr	r2, [pc, #348]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002cd4:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002cd8:	6413      	str	r3, [r2, #64]	@ 0x40
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	699b      	ldr	r3, [r3, #24]
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	f000 809c 	beq.w	8002e1c <HAL_RCC_OscConfig+0x488>
 8002ce4:	4b52      	ldr	r3, [pc, #328]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002ce6:	689b      	ldr	r3, [r3, #8]
 8002ce8:	f003 030c 	and.w	r3, r3, #12
 8002cec:	2b08      	cmp	r3, #8
 8002cee:	d061      	beq.n	8002db4 <HAL_RCC_OscConfig+0x420>
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	699b      	ldr	r3, [r3, #24]
 8002cf4:	2b02      	cmp	r3, #2
 8002cf6:	d146      	bne.n	8002d86 <HAL_RCC_OscConfig+0x3f2>
 8002cf8:	4b4e      	ldr	r3, [pc, #312]	@ (8002e34 <HAL_RCC_OscConfig+0x4a0>)
 8002cfa:	2200      	movs	r2, #0
 8002cfc:	601a      	str	r2, [r3, #0]
 8002cfe:	f7fe ffed 	bl	8001cdc <HAL_GetTick>
 8002d02:	6238      	str	r0, [r7, #32]
 8002d04:	e008      	b.n	8002d18 <HAL_RCC_OscConfig+0x384>
 8002d06:	f7fe ffe9 	bl	8001cdc <HAL_GetTick>
 8002d0a:	4602      	mov	r2, r0
 8002d0c:	6a3b      	ldr	r3, [r7, #32]
 8002d0e:	1ad3      	subs	r3, r2, r3
 8002d10:	2b64      	cmp	r3, #100	@ 0x64
 8002d12:	d901      	bls.n	8002d18 <HAL_RCC_OscConfig+0x384>
 8002d14:	2303      	movs	r3, #3
 8002d16:	e082      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002d18:	4b45      	ldr	r3, [pc, #276]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002d1a:	681b      	ldr	r3, [r3, #0]
 8002d1c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d20:	2b00      	cmp	r3, #0
 8002d22:	d1f0      	bne.n	8002d06 <HAL_RCC_OscConfig+0x372>
 8002d24:	4b42      	ldr	r3, [pc, #264]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002d26:	685a      	ldr	r2, [r3, #4]
 8002d28:	4b43      	ldr	r3, [pc, #268]	@ (8002e38 <HAL_RCC_OscConfig+0x4a4>)
 8002d2a:	4013      	ands	r3, r2
 8002d2c:	687a      	ldr	r2, [r7, #4]
 8002d2e:	69d1      	ldr	r1, [r2, #28]
 8002d30:	687a      	ldr	r2, [r7, #4]
 8002d32:	6a12      	ldr	r2, [r2, #32]
 8002d34:	4311      	orrs	r1, r2
 8002d36:	687a      	ldr	r2, [r7, #4]
 8002d38:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8002d3a:	0192      	lsls	r2, r2, #6
 8002d3c:	4311      	orrs	r1, r2
 8002d3e:	687a      	ldr	r2, [r7, #4]
 8002d40:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8002d42:	0612      	lsls	r2, r2, #24
 8002d44:	4311      	orrs	r1, r2
 8002d46:	687a      	ldr	r2, [r7, #4]
 8002d48:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8002d4a:	0852      	lsrs	r2, r2, #1
 8002d4c:	3a01      	subs	r2, #1
 8002d4e:	0412      	lsls	r2, r2, #16
 8002d50:	430a      	orrs	r2, r1
 8002d52:	4937      	ldr	r1, [pc, #220]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002d54:	4313      	orrs	r3, r2
 8002d56:	604b      	str	r3, [r1, #4]
 8002d58:	4b36      	ldr	r3, [pc, #216]	@ (8002e34 <HAL_RCC_OscConfig+0x4a0>)
 8002d5a:	2201      	movs	r2, #1
 8002d5c:	601a      	str	r2, [r3, #0]
 8002d5e:	f7fe ffbd 	bl	8001cdc <HAL_GetTick>
 8002d62:	6238      	str	r0, [r7, #32]
 8002d64:	e008      	b.n	8002d78 <HAL_RCC_OscConfig+0x3e4>
 8002d66:	f7fe ffb9 	bl	8001cdc <HAL_GetTick>
 8002d6a:	4602      	mov	r2, r0
 8002d6c:	6a3b      	ldr	r3, [r7, #32]
 8002d6e:	1ad3      	subs	r3, r2, r3
 8002d70:	2b64      	cmp	r3, #100	@ 0x64
 8002d72:	d901      	bls.n	8002d78 <HAL_RCC_OscConfig+0x3e4>
 8002d74:	2303      	movs	r3, #3
 8002d76:	e052      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002d78:	4b2d      	ldr	r3, [pc, #180]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d80:	2b00      	cmp	r3, #0
 8002d82:	d0f0      	beq.n	8002d66 <HAL_RCC_OscConfig+0x3d2>
 8002d84:	e04a      	b.n	8002e1c <HAL_RCC_OscConfig+0x488>
 8002d86:	4b2b      	ldr	r3, [pc, #172]	@ (8002e34 <HAL_RCC_OscConfig+0x4a0>)
 8002d88:	2200      	movs	r2, #0
 8002d8a:	601a      	str	r2, [r3, #0]
 8002d8c:	f7fe ffa6 	bl	8001cdc <HAL_GetTick>
 8002d90:	6238      	str	r0, [r7, #32]
 8002d92:	e008      	b.n	8002da6 <HAL_RCC_OscConfig+0x412>
 8002d94:	f7fe ffa2 	bl	8001cdc <HAL_GetTick>
 8002d98:	4602      	mov	r2, r0
 8002d9a:	6a3b      	ldr	r3, [r7, #32]
 8002d9c:	1ad3      	subs	r3, r2, r3
 8002d9e:	2b64      	cmp	r3, #100	@ 0x64
 8002da0:	d901      	bls.n	8002da6 <HAL_RCC_OscConfig+0x412>
 8002da2:	2303      	movs	r3, #3
 8002da4:	e03b      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002da6:	4b22      	ldr	r3, [pc, #136]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d1f0      	bne.n	8002d94 <HAL_RCC_OscConfig+0x400>
 8002db2:	e033      	b.n	8002e1c <HAL_RCC_OscConfig+0x488>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	699b      	ldr	r3, [r3, #24]
 8002db8:	2b01      	cmp	r3, #1
 8002dba:	d101      	bne.n	8002dc0 <HAL_RCC_OscConfig+0x42c>
 8002dbc:	2301      	movs	r3, #1
 8002dbe:	e02e      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002dc0:	4b1b      	ldr	r3, [pc, #108]	@ (8002e30 <HAL_RCC_OscConfig+0x49c>)
 8002dc2:	685b      	ldr	r3, [r3, #4]
 8002dc4:	61fb      	str	r3, [r7, #28]
 8002dc6:	69fb      	ldr	r3, [r7, #28]
 8002dc8:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	69db      	ldr	r3, [r3, #28]
 8002dd0:	429a      	cmp	r2, r3
 8002dd2:	d121      	bne.n	8002e18 <HAL_RCC_OscConfig+0x484>
 8002dd4:	69fb      	ldr	r3, [r7, #28]
 8002dd6:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	6a1b      	ldr	r3, [r3, #32]
 8002dde:	429a      	cmp	r2, r3
 8002de0:	d11a      	bne.n	8002e18 <HAL_RCC_OscConfig+0x484>
 8002de2:	69fa      	ldr	r2, [r7, #28]
 8002de4:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8002de8:	4013      	ands	r3, r2
 8002dea:	687a      	ldr	r2, [r7, #4]
 8002dec:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8002dee:	0192      	lsls	r2, r2, #6
 8002df0:	4293      	cmp	r3, r2
 8002df2:	d111      	bne.n	8002e18 <HAL_RCC_OscConfig+0x484>
 8002df4:	69fb      	ldr	r3, [r7, #28]
 8002df6:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002dfe:	085b      	lsrs	r3, r3, #1
 8002e00:	3b01      	subs	r3, #1
 8002e02:	041b      	lsls	r3, r3, #16
 8002e04:	429a      	cmp	r2, r3
 8002e06:	d107      	bne.n	8002e18 <HAL_RCC_OscConfig+0x484>
 8002e08:	69fb      	ldr	r3, [r7, #28]
 8002e0a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e12:	061b      	lsls	r3, r3, #24
 8002e14:	429a      	cmp	r2, r3
 8002e16:	d001      	beq.n	8002e1c <HAL_RCC_OscConfig+0x488>
 8002e18:	2301      	movs	r3, #1
 8002e1a:	e000      	b.n	8002e1e <HAL_RCC_OscConfig+0x48a>
 8002e1c:	2300      	movs	r3, #0
 8002e1e:	4618      	mov	r0, r3
 8002e20:	3728      	adds	r7, #40	@ 0x28
 8002e22:	46bd      	mov	sp, r7
 8002e24:	bd80      	pop	{r7, pc}
 8002e26:	bf00      	nop
 8002e28:	40007000 	.word	0x40007000
 8002e2c:	40023870 	.word	0x40023870
 8002e30:	40023800 	.word	0x40023800
 8002e34:	42470060 	.word	0x42470060
 8002e38:	f0bc8000 	.word	0xf0bc8000

08002e3c <HAL_RCC_ClockConfig>:
 8002e3c:	b580      	push	{r7, lr}
 8002e3e:	b086      	sub	sp, #24
 8002e40:	af00      	add	r7, sp, #0
 8002e42:	6078      	str	r0, [r7, #4]
 8002e44:	6039      	str	r1, [r7, #0]
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	2b00      	cmp	r3, #0
 8002e4a:	d101      	bne.n	8002e50 <HAL_RCC_ClockConfig+0x14>
 8002e4c:	2301      	movs	r3, #1
 8002e4e:	e0d2      	b.n	8002ff6 <HAL_RCC_ClockConfig+0x1ba>
 8002e50:	4b6b      	ldr	r3, [pc, #428]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002e52:	681b      	ldr	r3, [r3, #0]
 8002e54:	f003 030f 	and.w	r3, r3, #15
 8002e58:	683a      	ldr	r2, [r7, #0]
 8002e5a:	429a      	cmp	r2, r3
 8002e5c:	d90c      	bls.n	8002e78 <HAL_RCC_ClockConfig+0x3c>
 8002e5e:	4b68      	ldr	r3, [pc, #416]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002e60:	683a      	ldr	r2, [r7, #0]
 8002e62:	b2d2      	uxtb	r2, r2
 8002e64:	701a      	strb	r2, [r3, #0]
 8002e66:	4b66      	ldr	r3, [pc, #408]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002e68:	681b      	ldr	r3, [r3, #0]
 8002e6a:	f003 030f 	and.w	r3, r3, #15
 8002e6e:	683a      	ldr	r2, [r7, #0]
 8002e70:	429a      	cmp	r2, r3
 8002e72:	d001      	beq.n	8002e78 <HAL_RCC_ClockConfig+0x3c>
 8002e74:	2301      	movs	r3, #1
 8002e76:	e0be      	b.n	8002ff6 <HAL_RCC_ClockConfig+0x1ba>
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	f003 0302 	and.w	r3, r3, #2
 8002e80:	2b00      	cmp	r3, #0
 8002e82:	d020      	beq.n	8002ec6 <HAL_RCC_ClockConfig+0x8a>
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	f003 0304 	and.w	r3, r3, #4
 8002e8c:	2b00      	cmp	r3, #0
 8002e8e:	d005      	beq.n	8002e9c <HAL_RCC_ClockConfig+0x60>
 8002e90:	4b5c      	ldr	r3, [pc, #368]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002e92:	689b      	ldr	r3, [r3, #8]
 8002e94:	4a5b      	ldr	r2, [pc, #364]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002e96:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002e9a:	6093      	str	r3, [r2, #8]
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	f003 0308 	and.w	r3, r3, #8
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	d005      	beq.n	8002eb4 <HAL_RCC_ClockConfig+0x78>
 8002ea8:	4b56      	ldr	r3, [pc, #344]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002eaa:	689b      	ldr	r3, [r3, #8]
 8002eac:	4a55      	ldr	r2, [pc, #340]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002eae:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8002eb2:	6093      	str	r3, [r2, #8]
 8002eb4:	4b53      	ldr	r3, [pc, #332]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002eb6:	689b      	ldr	r3, [r3, #8]
 8002eb8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	689b      	ldr	r3, [r3, #8]
 8002ec0:	4950      	ldr	r1, [pc, #320]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002ec2:	4313      	orrs	r3, r2
 8002ec4:	608b      	str	r3, [r1, #8]
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f003 0301 	and.w	r3, r3, #1
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d040      	beq.n	8002f54 <HAL_RCC_ClockConfig+0x118>
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	685b      	ldr	r3, [r3, #4]
 8002ed6:	2b01      	cmp	r3, #1
 8002ed8:	d107      	bne.n	8002eea <HAL_RCC_ClockConfig+0xae>
 8002eda:	4b4a      	ldr	r3, [pc, #296]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d115      	bne.n	8002f12 <HAL_RCC_ClockConfig+0xd6>
 8002ee6:	2301      	movs	r3, #1
 8002ee8:	e085      	b.n	8002ff6 <HAL_RCC_ClockConfig+0x1ba>
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	685b      	ldr	r3, [r3, #4]
 8002eee:	2b02      	cmp	r3, #2
 8002ef0:	d107      	bne.n	8002f02 <HAL_RCC_ClockConfig+0xc6>
 8002ef2:	4b44      	ldr	r3, [pc, #272]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002efa:	2b00      	cmp	r3, #0
 8002efc:	d109      	bne.n	8002f12 <HAL_RCC_ClockConfig+0xd6>
 8002efe:	2301      	movs	r3, #1
 8002f00:	e079      	b.n	8002ff6 <HAL_RCC_ClockConfig+0x1ba>
 8002f02:	4b40      	ldr	r3, [pc, #256]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	f003 0302 	and.w	r3, r3, #2
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d101      	bne.n	8002f12 <HAL_RCC_ClockConfig+0xd6>
 8002f0e:	2301      	movs	r3, #1
 8002f10:	e071      	b.n	8002ff6 <HAL_RCC_ClockConfig+0x1ba>
 8002f12:	4b3c      	ldr	r3, [pc, #240]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002f14:	689b      	ldr	r3, [r3, #8]
 8002f16:	f023 0203 	bic.w	r2, r3, #3
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	685b      	ldr	r3, [r3, #4]
 8002f1e:	4939      	ldr	r1, [pc, #228]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002f20:	4313      	orrs	r3, r2
 8002f22:	608b      	str	r3, [r1, #8]
 8002f24:	f7fe feda 	bl	8001cdc <HAL_GetTick>
 8002f28:	6178      	str	r0, [r7, #20]
 8002f2a:	e00a      	b.n	8002f42 <HAL_RCC_ClockConfig+0x106>
 8002f2c:	f7fe fed6 	bl	8001cdc <HAL_GetTick>
 8002f30:	4602      	mov	r2, r0
 8002f32:	697b      	ldr	r3, [r7, #20]
 8002f34:	1ad3      	subs	r3, r2, r3
 8002f36:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f3a:	4293      	cmp	r3, r2
 8002f3c:	d901      	bls.n	8002f42 <HAL_RCC_ClockConfig+0x106>
 8002f3e:	2303      	movs	r3, #3
 8002f40:	e059      	b.n	8002ff6 <HAL_RCC_ClockConfig+0x1ba>
 8002f42:	4b30      	ldr	r3, [pc, #192]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002f44:	689b      	ldr	r3, [r3, #8]
 8002f46:	f003 020c 	and.w	r2, r3, #12
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	685b      	ldr	r3, [r3, #4]
 8002f4e:	009b      	lsls	r3, r3, #2
 8002f50:	429a      	cmp	r2, r3
 8002f52:	d1eb      	bne.n	8002f2c <HAL_RCC_ClockConfig+0xf0>
 8002f54:	4b2a      	ldr	r3, [pc, #168]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	f003 030f 	and.w	r3, r3, #15
 8002f5c:	683a      	ldr	r2, [r7, #0]
 8002f5e:	429a      	cmp	r2, r3
 8002f60:	d20c      	bcs.n	8002f7c <HAL_RCC_ClockConfig+0x140>
 8002f62:	4b27      	ldr	r3, [pc, #156]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002f64:	683a      	ldr	r2, [r7, #0]
 8002f66:	b2d2      	uxtb	r2, r2
 8002f68:	701a      	strb	r2, [r3, #0]
 8002f6a:	4b25      	ldr	r3, [pc, #148]	@ (8003000 <HAL_RCC_ClockConfig+0x1c4>)
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	f003 030f 	and.w	r3, r3, #15
 8002f72:	683a      	ldr	r2, [r7, #0]
 8002f74:	429a      	cmp	r2, r3
 8002f76:	d001      	beq.n	8002f7c <HAL_RCC_ClockConfig+0x140>
 8002f78:	2301      	movs	r3, #1
 8002f7a:	e03c      	b.n	8002ff6 <HAL_RCC_ClockConfig+0x1ba>
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	681b      	ldr	r3, [r3, #0]
 8002f80:	f003 0304 	and.w	r3, r3, #4
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	d008      	beq.n	8002f9a <HAL_RCC_ClockConfig+0x15e>
 8002f88:	4b1e      	ldr	r3, [pc, #120]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002f8a:	689b      	ldr	r3, [r3, #8]
 8002f8c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	68db      	ldr	r3, [r3, #12]
 8002f94:	491b      	ldr	r1, [pc, #108]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002f96:	4313      	orrs	r3, r2
 8002f98:	608b      	str	r3, [r1, #8]
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	f003 0308 	and.w	r3, r3, #8
 8002fa2:	2b00      	cmp	r3, #0
 8002fa4:	d009      	beq.n	8002fba <HAL_RCC_ClockConfig+0x17e>
 8002fa6:	4b17      	ldr	r3, [pc, #92]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002fa8:	689b      	ldr	r3, [r3, #8]
 8002faa:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	691b      	ldr	r3, [r3, #16]
 8002fb2:	00db      	lsls	r3, r3, #3
 8002fb4:	4913      	ldr	r1, [pc, #76]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002fb6:	4313      	orrs	r3, r2
 8002fb8:	608b      	str	r3, [r1, #8]
 8002fba:	f000 f82b 	bl	8003014 <HAL_RCC_GetSysClockFreq>
 8002fbe:	4601      	mov	r1, r0
 8002fc0:	4b10      	ldr	r3, [pc, #64]	@ (8003004 <HAL_RCC_ClockConfig+0x1c8>)
 8002fc2:	689b      	ldr	r3, [r3, #8]
 8002fc4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002fc8:	22f0      	movs	r2, #240	@ 0xf0
 8002fca:	613a      	str	r2, [r7, #16]
 8002fcc:	693a      	ldr	r2, [r7, #16]
 8002fce:	fa92 f2a2 	rbit	r2, r2
 8002fd2:	60fa      	str	r2, [r7, #12]
 8002fd4:	68fa      	ldr	r2, [r7, #12]
 8002fd6:	fab2 f282 	clz	r2, r2
 8002fda:	b2d2      	uxtb	r2, r2
 8002fdc:	40d3      	lsrs	r3, r2
 8002fde:	4a0a      	ldr	r2, [pc, #40]	@ (8003008 <HAL_RCC_ClockConfig+0x1cc>)
 8002fe0:	5cd3      	ldrb	r3, [r2, r3]
 8002fe2:	fa21 f303 	lsr.w	r3, r1, r3
 8002fe6:	4a09      	ldr	r2, [pc, #36]	@ (800300c <HAL_RCC_ClockConfig+0x1d0>)
 8002fe8:	6013      	str	r3, [r2, #0]
 8002fea:	4b09      	ldr	r3, [pc, #36]	@ (8003010 <HAL_RCC_ClockConfig+0x1d4>)
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	4618      	mov	r0, r3
 8002ff0:	f7fe fe32 	bl	8001c58 <HAL_InitTick>
 8002ff4:	2300      	movs	r3, #0
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	3718      	adds	r7, #24
 8002ffa:	46bd      	mov	sp, r7
 8002ffc:	bd80      	pop	{r7, pc}
 8002ffe:	bf00      	nop
 8003000:	40023c00 	.word	0x40023c00
 8003004:	40023800 	.word	0x40023800
 8003008:	080054cc 	.word	0x080054cc
 800300c:	20000000 	.word	0x20000000
 8003010:	20000004 	.word	0x20000004

08003014 <HAL_RCC_GetSysClockFreq>:
 8003014:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003018:	b090      	sub	sp, #64	@ 0x40
 800301a:	af00      	add	r7, sp, #0
 800301c:	2300      	movs	r3, #0
 800301e:	637b      	str	r3, [r7, #52]	@ 0x34
 8003020:	2300      	movs	r3, #0
 8003022:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003024:	2300      	movs	r3, #0
 8003026:	633b      	str	r3, [r7, #48]	@ 0x30
 8003028:	2300      	movs	r3, #0
 800302a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800302c:	4b59      	ldr	r3, [pc, #356]	@ (8003194 <HAL_RCC_GetSysClockFreq+0x180>)
 800302e:	689b      	ldr	r3, [r3, #8]
 8003030:	f003 030c 	and.w	r3, r3, #12
 8003034:	2b08      	cmp	r3, #8
 8003036:	d00d      	beq.n	8003054 <HAL_RCC_GetSysClockFreq+0x40>
 8003038:	2b08      	cmp	r3, #8
 800303a:	f200 80a2 	bhi.w	8003182 <HAL_RCC_GetSysClockFreq+0x16e>
 800303e:	2b00      	cmp	r3, #0
 8003040:	d002      	beq.n	8003048 <HAL_RCC_GetSysClockFreq+0x34>
 8003042:	2b04      	cmp	r3, #4
 8003044:	d003      	beq.n	800304e <HAL_RCC_GetSysClockFreq+0x3a>
 8003046:	e09c      	b.n	8003182 <HAL_RCC_GetSysClockFreq+0x16e>
 8003048:	4b53      	ldr	r3, [pc, #332]	@ (8003198 <HAL_RCC_GetSysClockFreq+0x184>)
 800304a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800304c:	e09c      	b.n	8003188 <HAL_RCC_GetSysClockFreq+0x174>
 800304e:	4b53      	ldr	r3, [pc, #332]	@ (800319c <HAL_RCC_GetSysClockFreq+0x188>)
 8003050:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003052:	e099      	b.n	8003188 <HAL_RCC_GetSysClockFreq+0x174>
 8003054:	4b4f      	ldr	r3, [pc, #316]	@ (8003194 <HAL_RCC_GetSysClockFreq+0x180>)
 8003056:	685b      	ldr	r3, [r3, #4]
 8003058:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800305c:	637b      	str	r3, [r7, #52]	@ 0x34
 800305e:	4b4d      	ldr	r3, [pc, #308]	@ (8003194 <HAL_RCC_GetSysClockFreq+0x180>)
 8003060:	685b      	ldr	r3, [r3, #4]
 8003062:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003066:	2b00      	cmp	r3, #0
 8003068:	d027      	beq.n	80030ba <HAL_RCC_GetSysClockFreq+0xa6>
 800306a:	4b4a      	ldr	r3, [pc, #296]	@ (8003194 <HAL_RCC_GetSysClockFreq+0x180>)
 800306c:	685b      	ldr	r3, [r3, #4]
 800306e:	099b      	lsrs	r3, r3, #6
 8003070:	2200      	movs	r2, #0
 8003072:	623b      	str	r3, [r7, #32]
 8003074:	627a      	str	r2, [r7, #36]	@ 0x24
 8003076:	6a3b      	ldr	r3, [r7, #32]
 8003078:	f3c3 0008 	ubfx	r0, r3, #0, #9
 800307c:	2100      	movs	r1, #0
 800307e:	4b47      	ldr	r3, [pc, #284]	@ (800319c <HAL_RCC_GetSysClockFreq+0x188>)
 8003080:	fb03 f201 	mul.w	r2, r3, r1
 8003084:	2300      	movs	r3, #0
 8003086:	fb00 f303 	mul.w	r3, r0, r3
 800308a:	4413      	add	r3, r2
 800308c:	4a43      	ldr	r2, [pc, #268]	@ (800319c <HAL_RCC_GetSysClockFreq+0x188>)
 800308e:	fba0 2102 	umull	r2, r1, r0, r2
 8003092:	62f9      	str	r1, [r7, #44]	@ 0x2c
 8003094:	62ba      	str	r2, [r7, #40]	@ 0x28
 8003096:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003098:	4413      	add	r3, r2
 800309a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800309c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800309e:	2200      	movs	r2, #0
 80030a0:	61bb      	str	r3, [r7, #24]
 80030a2:	61fa      	str	r2, [r7, #28]
 80030a4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80030a8:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 80030ac:	f7fd f88a 	bl	80001c4 <__aeabi_uldivmod>
 80030b0:	4602      	mov	r2, r0
 80030b2:	460b      	mov	r3, r1
 80030b4:	4613      	mov	r3, r2
 80030b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80030b8:	e055      	b.n	8003166 <HAL_RCC_GetSysClockFreq+0x152>
 80030ba:	4b36      	ldr	r3, [pc, #216]	@ (8003194 <HAL_RCC_GetSysClockFreq+0x180>)
 80030bc:	685b      	ldr	r3, [r3, #4]
 80030be:	099b      	lsrs	r3, r3, #6
 80030c0:	2200      	movs	r2, #0
 80030c2:	613b      	str	r3, [r7, #16]
 80030c4:	617a      	str	r2, [r7, #20]
 80030c6:	693b      	ldr	r3, [r7, #16]
 80030c8:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 80030cc:	f04f 0b00 	mov.w	fp, #0
 80030d0:	4652      	mov	r2, sl
 80030d2:	465b      	mov	r3, fp
 80030d4:	f04f 0000 	mov.w	r0, #0
 80030d8:	f04f 0100 	mov.w	r1, #0
 80030dc:	0159      	lsls	r1, r3, #5
 80030de:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80030e2:	0150      	lsls	r0, r2, #5
 80030e4:	4602      	mov	r2, r0
 80030e6:	460b      	mov	r3, r1
 80030e8:	ebb2 080a 	subs.w	r8, r2, sl
 80030ec:	eb63 090b 	sbc.w	r9, r3, fp
 80030f0:	f04f 0200 	mov.w	r2, #0
 80030f4:	f04f 0300 	mov.w	r3, #0
 80030f8:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80030fc:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8003100:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8003104:	ebb2 0408 	subs.w	r4, r2, r8
 8003108:	eb63 0509 	sbc.w	r5, r3, r9
 800310c:	f04f 0200 	mov.w	r2, #0
 8003110:	f04f 0300 	mov.w	r3, #0
 8003114:	00eb      	lsls	r3, r5, #3
 8003116:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800311a:	00e2      	lsls	r2, r4, #3
 800311c:	4614      	mov	r4, r2
 800311e:	461d      	mov	r5, r3
 8003120:	eb14 030a 	adds.w	r3, r4, sl
 8003124:	603b      	str	r3, [r7, #0]
 8003126:	eb45 030b 	adc.w	r3, r5, fp
 800312a:	607b      	str	r3, [r7, #4]
 800312c:	f04f 0200 	mov.w	r2, #0
 8003130:	f04f 0300 	mov.w	r3, #0
 8003134:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003138:	4629      	mov	r1, r5
 800313a:	028b      	lsls	r3, r1, #10
 800313c:	4620      	mov	r0, r4
 800313e:	4629      	mov	r1, r5
 8003140:	4604      	mov	r4, r0
 8003142:	ea43 5394 	orr.w	r3, r3, r4, lsr #22
 8003146:	4601      	mov	r1, r0
 8003148:	028a      	lsls	r2, r1, #10
 800314a:	4610      	mov	r0, r2
 800314c:	4619      	mov	r1, r3
 800314e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003150:	2200      	movs	r2, #0
 8003152:	60bb      	str	r3, [r7, #8]
 8003154:	60fa      	str	r2, [r7, #12]
 8003156:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800315a:	f7fd f833 	bl	80001c4 <__aeabi_uldivmod>
 800315e:	4602      	mov	r2, r0
 8003160:	460b      	mov	r3, r1
 8003162:	4613      	mov	r3, r2
 8003164:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003166:	4b0b      	ldr	r3, [pc, #44]	@ (8003194 <HAL_RCC_GetSysClockFreq+0x180>)
 8003168:	685b      	ldr	r3, [r3, #4]
 800316a:	0c1b      	lsrs	r3, r3, #16
 800316c:	f003 0303 	and.w	r3, r3, #3
 8003170:	3301      	adds	r3, #1
 8003172:	005b      	lsls	r3, r3, #1
 8003174:	633b      	str	r3, [r7, #48]	@ 0x30
 8003176:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8003178:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800317a:	fbb2 f3f3 	udiv	r3, r2, r3
 800317e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003180:	e002      	b.n	8003188 <HAL_RCC_GetSysClockFreq+0x174>
 8003182:	4b05      	ldr	r3, [pc, #20]	@ (8003198 <HAL_RCC_GetSysClockFreq+0x184>)
 8003184:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003186:	bf00      	nop
 8003188:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800318a:	4618      	mov	r0, r3
 800318c:	3740      	adds	r7, #64	@ 0x40
 800318e:	46bd      	mov	sp, r7
 8003190:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003194:	40023800 	.word	0x40023800
 8003198:	00f42400 	.word	0x00f42400
 800319c:	017d7840 	.word	0x017d7840

080031a0 <HAL_RCC_GetHCLKFreq>:
 80031a0:	b480      	push	{r7}
 80031a2:	af00      	add	r7, sp, #0
 80031a4:	4b02      	ldr	r3, [pc, #8]	@ (80031b0 <HAL_RCC_GetHCLKFreq+0x10>)
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	4618      	mov	r0, r3
 80031aa:	46bd      	mov	sp, r7
 80031ac:	bc80      	pop	{r7}
 80031ae:	4770      	bx	lr
 80031b0:	20000000 	.word	0x20000000

080031b4 <HAL_RCC_GetPCLK1Freq>:
 80031b4:	b580      	push	{r7, lr}
 80031b6:	b082      	sub	sp, #8
 80031b8:	af00      	add	r7, sp, #0
 80031ba:	f7ff fff1 	bl	80031a0 <HAL_RCC_GetHCLKFreq>
 80031be:	4601      	mov	r1, r0
 80031c0:	4b0b      	ldr	r3, [pc, #44]	@ (80031f0 <HAL_RCC_GetPCLK1Freq+0x3c>)
 80031c2:	689b      	ldr	r3, [r3, #8]
 80031c4:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80031c8:	f44f 52e0 	mov.w	r2, #7168	@ 0x1c00
 80031cc:	607a      	str	r2, [r7, #4]
 80031ce:	687a      	ldr	r2, [r7, #4]
 80031d0:	fa92 f2a2 	rbit	r2, r2
 80031d4:	603a      	str	r2, [r7, #0]
 80031d6:	683a      	ldr	r2, [r7, #0]
 80031d8:	fab2 f282 	clz	r2, r2
 80031dc:	b2d2      	uxtb	r2, r2
 80031de:	40d3      	lsrs	r3, r2
 80031e0:	4a04      	ldr	r2, [pc, #16]	@ (80031f4 <HAL_RCC_GetPCLK1Freq+0x40>)
 80031e2:	5cd3      	ldrb	r3, [r2, r3]
 80031e4:	fa21 f303 	lsr.w	r3, r1, r3
 80031e8:	4618      	mov	r0, r3
 80031ea:	3708      	adds	r7, #8
 80031ec:	46bd      	mov	sp, r7
 80031ee:	bd80      	pop	{r7, pc}
 80031f0:	40023800 	.word	0x40023800
 80031f4:	080054dc 	.word	0x080054dc

080031f8 <HAL_RCC_GetPCLK2Freq>:
 80031f8:	b580      	push	{r7, lr}
 80031fa:	b082      	sub	sp, #8
 80031fc:	af00      	add	r7, sp, #0
 80031fe:	f7ff ffcf 	bl	80031a0 <HAL_RCC_GetHCLKFreq>
 8003202:	4601      	mov	r1, r0
 8003204:	4b0b      	ldr	r3, [pc, #44]	@ (8003234 <HAL_RCC_GetPCLK2Freq+0x3c>)
 8003206:	689b      	ldr	r3, [r3, #8]
 8003208:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 800320c:	f44f 4260 	mov.w	r2, #57344	@ 0xe000
 8003210:	607a      	str	r2, [r7, #4]
 8003212:	687a      	ldr	r2, [r7, #4]
 8003214:	fa92 f2a2 	rbit	r2, r2
 8003218:	603a      	str	r2, [r7, #0]
 800321a:	683a      	ldr	r2, [r7, #0]
 800321c:	fab2 f282 	clz	r2, r2
 8003220:	b2d2      	uxtb	r2, r2
 8003222:	40d3      	lsrs	r3, r2
 8003224:	4a04      	ldr	r2, [pc, #16]	@ (8003238 <HAL_RCC_GetPCLK2Freq+0x40>)
 8003226:	5cd3      	ldrb	r3, [r2, r3]
 8003228:	fa21 f303 	lsr.w	r3, r1, r3
 800322c:	4618      	mov	r0, r3
 800322e:	3708      	adds	r7, #8
 8003230:	46bd      	mov	sp, r7
 8003232:	bd80      	pop	{r7, pc}
 8003234:	40023800 	.word	0x40023800
 8003238:	080054dc 	.word	0x080054dc

0800323c <HAL_UART_Init>:
 800323c:	b580      	push	{r7, lr}
 800323e:	b082      	sub	sp, #8
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	2b00      	cmp	r3, #0
 8003248:	d101      	bne.n	800324e <HAL_UART_Init+0x12>
 800324a:	2301      	movs	r3, #1
 800324c:	e042      	b.n	80032d4 <HAL_UART_Init+0x98>
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003254:	b2db      	uxtb	r3, r3
 8003256:	2b00      	cmp	r3, #0
 8003258:	d106      	bne.n	8003268 <HAL_UART_Init+0x2c>
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	2200      	movs	r2, #0
 800325e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003262:	6878      	ldr	r0, [r7, #4]
 8003264:	f7fe faf0 	bl	8001848 <HAL_UART_MspInit>
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	2224      	movs	r2, #36	@ 0x24
 800326c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	68da      	ldr	r2, [r3, #12]
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800327e:	60da      	str	r2, [r3, #12]
 8003280:	6878      	ldr	r0, [r7, #4]
 8003282:	f000 fe43 	bl	8003f0c <UART_SetConfig>
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	691a      	ldr	r2, [r3, #16]
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003294:	611a      	str	r2, [r3, #16]
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	695a      	ldr	r2, [r3, #20]
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80032a4:	615a      	str	r2, [r3, #20]
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	68da      	ldr	r2, [r3, #12]
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80032b4:	60da      	str	r2, [r3, #12]
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	2200      	movs	r2, #0
 80032ba:	645a      	str	r2, [r3, #68]	@ 0x44
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	2220      	movs	r2, #32
 80032c0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	2220      	movs	r2, #32
 80032c8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	2200      	movs	r2, #0
 80032d0:	635a      	str	r2, [r3, #52]	@ 0x34
 80032d2:	2300      	movs	r3, #0
 80032d4:	4618      	mov	r0, r3
 80032d6:	3708      	adds	r7, #8
 80032d8:	46bd      	mov	sp, r7
 80032da:	bd80      	pop	{r7, pc}

080032dc <HAL_UART_Transmit>:
 80032dc:	b580      	push	{r7, lr}
 80032de:	b08a      	sub	sp, #40	@ 0x28
 80032e0:	af02      	add	r7, sp, #8
 80032e2:	60f8      	str	r0, [r7, #12]
 80032e4:	60b9      	str	r1, [r7, #8]
 80032e6:	603b      	str	r3, [r7, #0]
 80032e8:	4613      	mov	r3, r2
 80032ea:	80fb      	strh	r3, [r7, #6]
 80032ec:	2300      	movs	r3, #0
 80032ee:	617b      	str	r3, [r7, #20]
 80032f0:	68fb      	ldr	r3, [r7, #12]
 80032f2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80032f6:	b2db      	uxtb	r3, r3
 80032f8:	2b20      	cmp	r3, #32
 80032fa:	d16d      	bne.n	80033d8 <HAL_UART_Transmit+0xfc>
 80032fc:	68bb      	ldr	r3, [r7, #8]
 80032fe:	2b00      	cmp	r3, #0
 8003300:	d002      	beq.n	8003308 <HAL_UART_Transmit+0x2c>
 8003302:	88fb      	ldrh	r3, [r7, #6]
 8003304:	2b00      	cmp	r3, #0
 8003306:	d101      	bne.n	800330c <HAL_UART_Transmit+0x30>
 8003308:	2301      	movs	r3, #1
 800330a:	e066      	b.n	80033da <HAL_UART_Transmit+0xfe>
 800330c:	68fb      	ldr	r3, [r7, #12]
 800330e:	2200      	movs	r2, #0
 8003310:	645a      	str	r2, [r3, #68]	@ 0x44
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	2221      	movs	r2, #33	@ 0x21
 8003316:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800331a:	f7fe fcdf 	bl	8001cdc <HAL_GetTick>
 800331e:	6178      	str	r0, [r7, #20]
 8003320:	68fb      	ldr	r3, [r7, #12]
 8003322:	88fa      	ldrh	r2, [r7, #6]
 8003324:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	88fa      	ldrh	r2, [r7, #6]
 800332a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800332c:	68fb      	ldr	r3, [r7, #12]
 800332e:	689b      	ldr	r3, [r3, #8]
 8003330:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003334:	d108      	bne.n	8003348 <HAL_UART_Transmit+0x6c>
 8003336:	68fb      	ldr	r3, [r7, #12]
 8003338:	691b      	ldr	r3, [r3, #16]
 800333a:	2b00      	cmp	r3, #0
 800333c:	d104      	bne.n	8003348 <HAL_UART_Transmit+0x6c>
 800333e:	2300      	movs	r3, #0
 8003340:	61fb      	str	r3, [r7, #28]
 8003342:	68bb      	ldr	r3, [r7, #8]
 8003344:	61bb      	str	r3, [r7, #24]
 8003346:	e003      	b.n	8003350 <HAL_UART_Transmit+0x74>
 8003348:	68bb      	ldr	r3, [r7, #8]
 800334a:	61fb      	str	r3, [r7, #28]
 800334c:	2300      	movs	r3, #0
 800334e:	61bb      	str	r3, [r7, #24]
 8003350:	e02a      	b.n	80033a8 <HAL_UART_Transmit+0xcc>
 8003352:	683b      	ldr	r3, [r7, #0]
 8003354:	9300      	str	r3, [sp, #0]
 8003356:	697b      	ldr	r3, [r7, #20]
 8003358:	2200      	movs	r2, #0
 800335a:	2180      	movs	r1, #128	@ 0x80
 800335c:	68f8      	ldr	r0, [r7, #12]
 800335e:	f000 fb92 	bl	8003a86 <UART_WaitOnFlagUntilTimeout>
 8003362:	4603      	mov	r3, r0
 8003364:	2b00      	cmp	r3, #0
 8003366:	d001      	beq.n	800336c <HAL_UART_Transmit+0x90>
 8003368:	2303      	movs	r3, #3
 800336a:	e036      	b.n	80033da <HAL_UART_Transmit+0xfe>
 800336c:	69fb      	ldr	r3, [r7, #28]
 800336e:	2b00      	cmp	r3, #0
 8003370:	d10b      	bne.n	800338a <HAL_UART_Transmit+0xae>
 8003372:	69bb      	ldr	r3, [r7, #24]
 8003374:	881b      	ldrh	r3, [r3, #0]
 8003376:	461a      	mov	r2, r3
 8003378:	68fb      	ldr	r3, [r7, #12]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003380:	605a      	str	r2, [r3, #4]
 8003382:	69bb      	ldr	r3, [r7, #24]
 8003384:	3302      	adds	r3, #2
 8003386:	61bb      	str	r3, [r7, #24]
 8003388:	e007      	b.n	800339a <HAL_UART_Transmit+0xbe>
 800338a:	69fb      	ldr	r3, [r7, #28]
 800338c:	781a      	ldrb	r2, [r3, #0]
 800338e:	68fb      	ldr	r3, [r7, #12]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	605a      	str	r2, [r3, #4]
 8003394:	69fb      	ldr	r3, [r7, #28]
 8003396:	3301      	adds	r3, #1
 8003398:	61fb      	str	r3, [r7, #28]
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800339e:	b29b      	uxth	r3, r3
 80033a0:	3b01      	subs	r3, #1
 80033a2:	b29a      	uxth	r2, r3
 80033a4:	68fb      	ldr	r3, [r7, #12]
 80033a6:	84da      	strh	r2, [r3, #38]	@ 0x26
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80033ac:	b29b      	uxth	r3, r3
 80033ae:	2b00      	cmp	r3, #0
 80033b0:	d1cf      	bne.n	8003352 <HAL_UART_Transmit+0x76>
 80033b2:	683b      	ldr	r3, [r7, #0]
 80033b4:	9300      	str	r3, [sp, #0]
 80033b6:	697b      	ldr	r3, [r7, #20]
 80033b8:	2200      	movs	r2, #0
 80033ba:	2140      	movs	r1, #64	@ 0x40
 80033bc:	68f8      	ldr	r0, [r7, #12]
 80033be:	f000 fb62 	bl	8003a86 <UART_WaitOnFlagUntilTimeout>
 80033c2:	4603      	mov	r3, r0
 80033c4:	2b00      	cmp	r3, #0
 80033c6:	d001      	beq.n	80033cc <HAL_UART_Transmit+0xf0>
 80033c8:	2303      	movs	r3, #3
 80033ca:	e006      	b.n	80033da <HAL_UART_Transmit+0xfe>
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	2220      	movs	r2, #32
 80033d0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80033d4:	2300      	movs	r3, #0
 80033d6:	e000      	b.n	80033da <HAL_UART_Transmit+0xfe>
 80033d8:	2302      	movs	r3, #2
 80033da:	4618      	mov	r0, r3
 80033dc:	3720      	adds	r7, #32
 80033de:	46bd      	mov	sp, r7
 80033e0:	bd80      	pop	{r7, pc}

080033e2 <HAL_UART_Transmit_IT>:
 80033e2:	b480      	push	{r7}
 80033e4:	b085      	sub	sp, #20
 80033e6:	af00      	add	r7, sp, #0
 80033e8:	60f8      	str	r0, [r7, #12]
 80033ea:	60b9      	str	r1, [r7, #8]
 80033ec:	4613      	mov	r3, r2
 80033ee:	80fb      	strh	r3, [r7, #6]
 80033f0:	68fb      	ldr	r3, [r7, #12]
 80033f2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80033f6:	b2db      	uxtb	r3, r3
 80033f8:	2b20      	cmp	r3, #32
 80033fa:	d121      	bne.n	8003440 <HAL_UART_Transmit_IT+0x5e>
 80033fc:	68bb      	ldr	r3, [r7, #8]
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d002      	beq.n	8003408 <HAL_UART_Transmit_IT+0x26>
 8003402:	88fb      	ldrh	r3, [r7, #6]
 8003404:	2b00      	cmp	r3, #0
 8003406:	d101      	bne.n	800340c <HAL_UART_Transmit_IT+0x2a>
 8003408:	2301      	movs	r3, #1
 800340a:	e01a      	b.n	8003442 <HAL_UART_Transmit_IT+0x60>
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	68ba      	ldr	r2, [r7, #8]
 8003410:	621a      	str	r2, [r3, #32]
 8003412:	68fb      	ldr	r3, [r7, #12]
 8003414:	88fa      	ldrh	r2, [r7, #6]
 8003416:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	88fa      	ldrh	r2, [r7, #6]
 800341c:	84da      	strh	r2, [r3, #38]	@ 0x26
 800341e:	68fb      	ldr	r3, [r7, #12]
 8003420:	2200      	movs	r2, #0
 8003422:	645a      	str	r2, [r3, #68]	@ 0x44
 8003424:	68fb      	ldr	r3, [r7, #12]
 8003426:	2221      	movs	r2, #33	@ 0x21
 8003428:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	681b      	ldr	r3, [r3, #0]
 8003430:	68da      	ldr	r2, [r3, #12]
 8003432:	68fb      	ldr	r3, [r7, #12]
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800343a:	60da      	str	r2, [r3, #12]
 800343c:	2300      	movs	r3, #0
 800343e:	e000      	b.n	8003442 <HAL_UART_Transmit_IT+0x60>
 8003440:	2302      	movs	r3, #2
 8003442:	4618      	mov	r0, r3
 8003444:	3714      	adds	r7, #20
 8003446:	46bd      	mov	sp, r7
 8003448:	bc80      	pop	{r7}
 800344a:	4770      	bx	lr

0800344c <HAL_UART_Receive_IT>:
 800344c:	b580      	push	{r7, lr}
 800344e:	b084      	sub	sp, #16
 8003450:	af00      	add	r7, sp, #0
 8003452:	60f8      	str	r0, [r7, #12]
 8003454:	60b9      	str	r1, [r7, #8]
 8003456:	4613      	mov	r3, r2
 8003458:	80fb      	strh	r3, [r7, #6]
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003460:	b2db      	uxtb	r3, r3
 8003462:	2b20      	cmp	r3, #32
 8003464:	d112      	bne.n	800348c <HAL_UART_Receive_IT+0x40>
 8003466:	68bb      	ldr	r3, [r7, #8]
 8003468:	2b00      	cmp	r3, #0
 800346a:	d002      	beq.n	8003472 <HAL_UART_Receive_IT+0x26>
 800346c:	88fb      	ldrh	r3, [r7, #6]
 800346e:	2b00      	cmp	r3, #0
 8003470:	d101      	bne.n	8003476 <HAL_UART_Receive_IT+0x2a>
 8003472:	2301      	movs	r3, #1
 8003474:	e00b      	b.n	800348e <HAL_UART_Receive_IT+0x42>
 8003476:	68fb      	ldr	r3, [r7, #12]
 8003478:	2200      	movs	r2, #0
 800347a:	631a      	str	r2, [r3, #48]	@ 0x30
 800347c:	88fb      	ldrh	r3, [r7, #6]
 800347e:	461a      	mov	r2, r3
 8003480:	68b9      	ldr	r1, [r7, #8]
 8003482:	68f8      	ldr	r0, [r7, #12]
 8003484:	f000 fb6d 	bl	8003b62 <UART_Start_Receive_IT>
 8003488:	4603      	mov	r3, r0
 800348a:	e000      	b.n	800348e <HAL_UART_Receive_IT+0x42>
 800348c:	2302      	movs	r3, #2
 800348e:	4618      	mov	r0, r3
 8003490:	3710      	adds	r7, #16
 8003492:	46bd      	mov	sp, r7
 8003494:	bd80      	pop	{r7, pc}

08003496 <HAL_UARTEx_ReceiveToIdle_IT>:
 8003496:	b580      	push	{r7, lr}
 8003498:	b08c      	sub	sp, #48	@ 0x30
 800349a:	af00      	add	r7, sp, #0
 800349c:	60f8      	str	r0, [r7, #12]
 800349e:	60b9      	str	r1, [r7, #8]
 80034a0:	4613      	mov	r3, r2
 80034a2:	80fb      	strh	r3, [r7, #6]
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80034aa:	b2db      	uxtb	r3, r3
 80034ac:	2b20      	cmp	r3, #32
 80034ae:	d14a      	bne.n	8003546 <HAL_UARTEx_ReceiveToIdle_IT+0xb0>
 80034b0:	68bb      	ldr	r3, [r7, #8]
 80034b2:	2b00      	cmp	r3, #0
 80034b4:	d002      	beq.n	80034bc <HAL_UARTEx_ReceiveToIdle_IT+0x26>
 80034b6:	88fb      	ldrh	r3, [r7, #6]
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d101      	bne.n	80034c0 <HAL_UARTEx_ReceiveToIdle_IT+0x2a>
 80034bc:	2301      	movs	r3, #1
 80034be:	e043      	b.n	8003548 <HAL_UARTEx_ReceiveToIdle_IT+0xb2>
 80034c0:	68fb      	ldr	r3, [r7, #12]
 80034c2:	2201      	movs	r2, #1
 80034c4:	631a      	str	r2, [r3, #48]	@ 0x30
 80034c6:	68fb      	ldr	r3, [r7, #12]
 80034c8:	2200      	movs	r2, #0
 80034ca:	635a      	str	r2, [r3, #52]	@ 0x34
 80034cc:	88fb      	ldrh	r3, [r7, #6]
 80034ce:	461a      	mov	r2, r3
 80034d0:	68b9      	ldr	r1, [r7, #8]
 80034d2:	68f8      	ldr	r0, [r7, #12]
 80034d4:	f000 fb45 	bl	8003b62 <UART_Start_Receive_IT>
 80034d8:	4603      	mov	r3, r0
 80034da:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 80034de:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d12c      	bne.n	8003540 <HAL_UARTEx_ReceiveToIdle_IT+0xaa>
 80034e6:	68fb      	ldr	r3, [r7, #12]
 80034e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80034ea:	2b01      	cmp	r3, #1
 80034ec:	d125      	bne.n	800353a <HAL_UARTEx_ReceiveToIdle_IT+0xa4>
 80034ee:	2300      	movs	r3, #0
 80034f0:	613b      	str	r3, [r7, #16]
 80034f2:	68fb      	ldr	r3, [r7, #12]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	613b      	str	r3, [r7, #16]
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	685b      	ldr	r3, [r3, #4]
 8003500:	613b      	str	r3, [r7, #16]
 8003502:	693b      	ldr	r3, [r7, #16]
 8003504:	68fb      	ldr	r3, [r7, #12]
 8003506:	681b      	ldr	r3, [r3, #0]
 8003508:	330c      	adds	r3, #12
 800350a:	61bb      	str	r3, [r7, #24]
 800350c:	69bb      	ldr	r3, [r7, #24]
 800350e:	e853 3f00 	ldrex	r3, [r3]
 8003512:	617b      	str	r3, [r7, #20]
 8003514:	697b      	ldr	r3, [r7, #20]
 8003516:	f043 0310 	orr.w	r3, r3, #16
 800351a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800351c:	68fb      	ldr	r3, [r7, #12]
 800351e:	681b      	ldr	r3, [r3, #0]
 8003520:	330c      	adds	r3, #12
 8003522:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8003524:	627a      	str	r2, [r7, #36]	@ 0x24
 8003526:	623b      	str	r3, [r7, #32]
 8003528:	6a39      	ldr	r1, [r7, #32]
 800352a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800352c:	e841 2300 	strex	r3, r2, [r1]
 8003530:	61fb      	str	r3, [r7, #28]
 8003532:	69fb      	ldr	r3, [r7, #28]
 8003534:	2b00      	cmp	r3, #0
 8003536:	d1e5      	bne.n	8003504 <HAL_UARTEx_ReceiveToIdle_IT+0x6e>
 8003538:	e002      	b.n	8003540 <HAL_UARTEx_ReceiveToIdle_IT+0xaa>
 800353a:	2301      	movs	r3, #1
 800353c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8003540:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8003544:	e000      	b.n	8003548 <HAL_UARTEx_ReceiveToIdle_IT+0xb2>
 8003546:	2302      	movs	r3, #2
 8003548:	4618      	mov	r0, r3
 800354a:	3730      	adds	r7, #48	@ 0x30
 800354c:	46bd      	mov	sp, r7
 800354e:	bd80      	pop	{r7, pc}

08003550 <HAL_UART_IRQHandler>:
 8003550:	b580      	push	{r7, lr}
 8003552:	b0ba      	sub	sp, #232	@ 0xe8
 8003554:	af00      	add	r7, sp, #0
 8003556:	6078      	str	r0, [r7, #4]
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	681b      	ldr	r3, [r3, #0]
 800355e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	681b      	ldr	r3, [r3, #0]
 8003566:	68db      	ldr	r3, [r3, #12]
 8003568:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	681b      	ldr	r3, [r3, #0]
 8003570:	695b      	ldr	r3, [r3, #20]
 8003572:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8003576:	2300      	movs	r3, #0
 8003578:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800357c:	2300      	movs	r3, #0
 800357e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003582:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003586:	f003 030f 	and.w	r3, r3, #15
 800358a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800358e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003592:	2b00      	cmp	r3, #0
 8003594:	d10f      	bne.n	80035b6 <HAL_UART_IRQHandler+0x66>
 8003596:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800359a:	f003 0320 	and.w	r3, r3, #32
 800359e:	2b00      	cmp	r3, #0
 80035a0:	d009      	beq.n	80035b6 <HAL_UART_IRQHandler+0x66>
 80035a2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80035a6:	f003 0320 	and.w	r3, r3, #32
 80035aa:	2b00      	cmp	r3, #0
 80035ac:	d003      	beq.n	80035b6 <HAL_UART_IRQHandler+0x66>
 80035ae:	6878      	ldr	r0, [r7, #4]
 80035b0:	f000 fbed 	bl	8003d8e <UART_Receive_IT>
 80035b4:	e25b      	b.n	8003a6e <HAL_UART_IRQHandler+0x51e>
 80035b6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80035ba:	2b00      	cmp	r3, #0
 80035bc:	f000 80de 	beq.w	800377c <HAL_UART_IRQHandler+0x22c>
 80035c0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80035c4:	f003 0301 	and.w	r3, r3, #1
 80035c8:	2b00      	cmp	r3, #0
 80035ca:	d106      	bne.n	80035da <HAL_UART_IRQHandler+0x8a>
 80035cc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80035d0:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 80035d4:	2b00      	cmp	r3, #0
 80035d6:	f000 80d1 	beq.w	800377c <HAL_UART_IRQHandler+0x22c>
 80035da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80035de:	f003 0301 	and.w	r3, r3, #1
 80035e2:	2b00      	cmp	r3, #0
 80035e4:	d00b      	beq.n	80035fe <HAL_UART_IRQHandler+0xae>
 80035e6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80035ea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	d005      	beq.n	80035fe <HAL_UART_IRQHandler+0xae>
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80035f6:	f043 0201 	orr.w	r2, r3, #1
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	645a      	str	r2, [r3, #68]	@ 0x44
 80035fe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003602:	f003 0304 	and.w	r3, r3, #4
 8003606:	2b00      	cmp	r3, #0
 8003608:	d00b      	beq.n	8003622 <HAL_UART_IRQHandler+0xd2>
 800360a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800360e:	f003 0301 	and.w	r3, r3, #1
 8003612:	2b00      	cmp	r3, #0
 8003614:	d005      	beq.n	8003622 <HAL_UART_IRQHandler+0xd2>
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800361a:	f043 0202 	orr.w	r2, r3, #2
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	645a      	str	r2, [r3, #68]	@ 0x44
 8003622:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003626:	f003 0302 	and.w	r3, r3, #2
 800362a:	2b00      	cmp	r3, #0
 800362c:	d00b      	beq.n	8003646 <HAL_UART_IRQHandler+0xf6>
 800362e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003632:	f003 0301 	and.w	r3, r3, #1
 8003636:	2b00      	cmp	r3, #0
 8003638:	d005      	beq.n	8003646 <HAL_UART_IRQHandler+0xf6>
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800363e:	f043 0204 	orr.w	r2, r3, #4
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	645a      	str	r2, [r3, #68]	@ 0x44
 8003646:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800364a:	f003 0308 	and.w	r3, r3, #8
 800364e:	2b00      	cmp	r3, #0
 8003650:	d011      	beq.n	8003676 <HAL_UART_IRQHandler+0x126>
 8003652:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003656:	f003 0320 	and.w	r3, r3, #32
 800365a:	2b00      	cmp	r3, #0
 800365c:	d105      	bne.n	800366a <HAL_UART_IRQHandler+0x11a>
 800365e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003662:	f003 0301 	and.w	r3, r3, #1
 8003666:	2b00      	cmp	r3, #0
 8003668:	d005      	beq.n	8003676 <HAL_UART_IRQHandler+0x126>
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800366e:	f043 0208 	orr.w	r2, r3, #8
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	645a      	str	r2, [r3, #68]	@ 0x44
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800367a:	2b00      	cmp	r3, #0
 800367c:	f000 81f2 	beq.w	8003a64 <HAL_UART_IRQHandler+0x514>
 8003680:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003684:	f003 0320 	and.w	r3, r3, #32
 8003688:	2b00      	cmp	r3, #0
 800368a:	d008      	beq.n	800369e <HAL_UART_IRQHandler+0x14e>
 800368c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003690:	f003 0320 	and.w	r3, r3, #32
 8003694:	2b00      	cmp	r3, #0
 8003696:	d002      	beq.n	800369e <HAL_UART_IRQHandler+0x14e>
 8003698:	6878      	ldr	r0, [r7, #4]
 800369a:	f000 fb78 	bl	8003d8e <UART_Receive_IT>
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	681b      	ldr	r3, [r3, #0]
 80036a2:	695b      	ldr	r3, [r3, #20]
 80036a4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80036a8:	2b40      	cmp	r3, #64	@ 0x40
 80036aa:	bf0c      	ite	eq
 80036ac:	2301      	moveq	r3, #1
 80036ae:	2300      	movne	r3, #0
 80036b0:	b2db      	uxtb	r3, r3
 80036b2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80036b6:	687b      	ldr	r3, [r7, #4]
 80036b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80036ba:	f003 0308 	and.w	r3, r3, #8
 80036be:	2b00      	cmp	r3, #0
 80036c0:	d103      	bne.n	80036ca <HAL_UART_IRQHandler+0x17a>
 80036c2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80036c6:	2b00      	cmp	r3, #0
 80036c8:	d04f      	beq.n	800376a <HAL_UART_IRQHandler+0x21a>
 80036ca:	6878      	ldr	r0, [r7, #4]
 80036cc:	f000 fa82 	bl	8003bd4 <UART_EndRxTransfer>
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	695b      	ldr	r3, [r3, #20]
 80036d6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80036da:	2b40      	cmp	r3, #64	@ 0x40
 80036dc:	d141      	bne.n	8003762 <HAL_UART_IRQHandler+0x212>
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	681b      	ldr	r3, [r3, #0]
 80036e2:	3314      	adds	r3, #20
 80036e4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80036e8:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80036ec:	e853 3f00 	ldrex	r3, [r3]
 80036f0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80036f4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80036f8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80036fc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	3314      	adds	r3, #20
 8003706:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800370a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800370e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003712:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8003716:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800371a:	e841 2300 	strex	r3, r2, [r1]
 800371e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003722:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8003726:	2b00      	cmp	r3, #0
 8003728:	d1d9      	bne.n	80036de <HAL_UART_IRQHandler+0x18e>
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800372e:	2b00      	cmp	r3, #0
 8003730:	d013      	beq.n	800375a <HAL_UART_IRQHandler+0x20a>
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003736:	4a7e      	ldr	r2, [pc, #504]	@ (8003930 <HAL_UART_IRQHandler+0x3e0>)
 8003738:	651a      	str	r2, [r3, #80]	@ 0x50
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800373e:	4618      	mov	r0, r3
 8003740:	f7fe fc53 	bl	8001fea <HAL_DMA_Abort_IT>
 8003744:	4603      	mov	r3, r0
 8003746:	2b00      	cmp	r3, #0
 8003748:	d016      	beq.n	8003778 <HAL_UART_IRQHandler+0x228>
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800374e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003750:	687a      	ldr	r2, [r7, #4]
 8003752:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8003754:	4610      	mov	r0, r2
 8003756:	4798      	blx	r3
 8003758:	e00e      	b.n	8003778 <HAL_UART_IRQHandler+0x228>
 800375a:	6878      	ldr	r0, [r7, #4]
 800375c:	f000 f98a 	bl	8003a74 <HAL_UART_ErrorCallback>
 8003760:	e00a      	b.n	8003778 <HAL_UART_IRQHandler+0x228>
 8003762:	6878      	ldr	r0, [r7, #4]
 8003764:	f000 f986 	bl	8003a74 <HAL_UART_ErrorCallback>
 8003768:	e006      	b.n	8003778 <HAL_UART_IRQHandler+0x228>
 800376a:	6878      	ldr	r0, [r7, #4]
 800376c:	f000 f982 	bl	8003a74 <HAL_UART_ErrorCallback>
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	2200      	movs	r2, #0
 8003774:	645a      	str	r2, [r3, #68]	@ 0x44
 8003776:	e175      	b.n	8003a64 <HAL_UART_IRQHandler+0x514>
 8003778:	bf00      	nop
 800377a:	e173      	b.n	8003a64 <HAL_UART_IRQHandler+0x514>
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003780:	2b01      	cmp	r3, #1
 8003782:	f040 814f 	bne.w	8003a24 <HAL_UART_IRQHandler+0x4d4>
 8003786:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800378a:	f003 0310 	and.w	r3, r3, #16
 800378e:	2b00      	cmp	r3, #0
 8003790:	f000 8148 	beq.w	8003a24 <HAL_UART_IRQHandler+0x4d4>
 8003794:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003798:	f003 0310 	and.w	r3, r3, #16
 800379c:	2b00      	cmp	r3, #0
 800379e:	f000 8141 	beq.w	8003a24 <HAL_UART_IRQHandler+0x4d4>
 80037a2:	2300      	movs	r3, #0
 80037a4:	60bb      	str	r3, [r7, #8]
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	681b      	ldr	r3, [r3, #0]
 80037aa:	681b      	ldr	r3, [r3, #0]
 80037ac:	60bb      	str	r3, [r7, #8]
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	685b      	ldr	r3, [r3, #4]
 80037b4:	60bb      	str	r3, [r7, #8]
 80037b6:	68bb      	ldr	r3, [r7, #8]
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	695b      	ldr	r3, [r3, #20]
 80037be:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80037c2:	2b40      	cmp	r3, #64	@ 0x40
 80037c4:	f040 80b6 	bne.w	8003934 <HAL_UART_IRQHandler+0x3e4>
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	685b      	ldr	r3, [r3, #4]
 80037d0:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80037d4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80037d8:	2b00      	cmp	r3, #0
 80037da:	f000 8145 	beq.w	8003a68 <HAL_UART_IRQHandler+0x518>
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80037e2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80037e6:	429a      	cmp	r2, r3
 80037e8:	f080 813e 	bcs.w	8003a68 <HAL_UART_IRQHandler+0x518>
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80037f2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80037f8:	69db      	ldr	r3, [r3, #28]
 80037fa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80037fe:	f000 8088 	beq.w	8003912 <HAL_UART_IRQHandler+0x3c2>
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	330c      	adds	r3, #12
 8003808:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800380c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8003810:	e853 3f00 	ldrex	r3, [r3]
 8003814:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003818:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800381c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8003820:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	330c      	adds	r3, #12
 800382a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800382e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8003832:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003836:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800383a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800383e:	e841 2300 	strex	r3, r2, [r1]
 8003842:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003846:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800384a:	2b00      	cmp	r3, #0
 800384c:	d1d9      	bne.n	8003802 <HAL_UART_IRQHandler+0x2b2>
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	3314      	adds	r3, #20
 8003854:	677b      	str	r3, [r7, #116]	@ 0x74
 8003856:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003858:	e853 3f00 	ldrex	r3, [r3]
 800385c:	673b      	str	r3, [r7, #112]	@ 0x70
 800385e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003860:	f023 0301 	bic.w	r3, r3, #1
 8003864:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	3314      	adds	r3, #20
 800386e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8003872:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8003876:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003878:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800387a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800387e:	e841 2300 	strex	r3, r2, [r1]
 8003882:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003884:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003886:	2b00      	cmp	r3, #0
 8003888:	d1e1      	bne.n	800384e <HAL_UART_IRQHandler+0x2fe>
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	681b      	ldr	r3, [r3, #0]
 800388e:	3314      	adds	r3, #20
 8003890:	663b      	str	r3, [r7, #96]	@ 0x60
 8003892:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003894:	e853 3f00 	ldrex	r3, [r3]
 8003898:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800389a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800389c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80038a0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	681b      	ldr	r3, [r3, #0]
 80038a8:	3314      	adds	r3, #20
 80038aa:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80038ae:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80038b0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80038b2:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80038b4:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80038b6:	e841 2300 	strex	r3, r2, [r1]
 80038ba:	667b      	str	r3, [r7, #100]	@ 0x64
 80038bc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d1e3      	bne.n	800388a <HAL_UART_IRQHandler+0x33a>
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	2220      	movs	r2, #32
 80038c6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	2200      	movs	r2, #0
 80038ce:	631a      	str	r2, [r3, #48]	@ 0x30
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	681b      	ldr	r3, [r3, #0]
 80038d4:	330c      	adds	r3, #12
 80038d6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80038d8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80038da:	e853 3f00 	ldrex	r3, [r3]
 80038de:	64bb      	str	r3, [r7, #72]	@ 0x48
 80038e0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80038e2:	f023 0310 	bic.w	r3, r3, #16
 80038e6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	330c      	adds	r3, #12
 80038f0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80038f4:	65ba      	str	r2, [r7, #88]	@ 0x58
 80038f6:	657b      	str	r3, [r7, #84]	@ 0x54
 80038f8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80038fa:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80038fc:	e841 2300 	strex	r3, r2, [r1]
 8003900:	653b      	str	r3, [r7, #80]	@ 0x50
 8003902:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003904:	2b00      	cmp	r3, #0
 8003906:	d1e3      	bne.n	80038d0 <HAL_UART_IRQHandler+0x380>
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800390c:	4618      	mov	r0, r3
 800390e:	f7fe fafc 	bl	8001f0a <HAL_DMA_Abort>
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	2202      	movs	r2, #2
 8003916:	635a      	str	r2, [r3, #52]	@ 0x34
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003920:	b29b      	uxth	r3, r3
 8003922:	1ad3      	subs	r3, r2, r3
 8003924:	b29b      	uxth	r3, r3
 8003926:	4619      	mov	r1, r3
 8003928:	6878      	ldr	r0, [r7, #4]
 800392a:	f7fd fe4f 	bl	80015cc <HAL_UARTEx_RxEventCallback>
 800392e:	e09b      	b.n	8003a68 <HAL_UART_IRQHandler+0x518>
 8003930:	08003c99 	.word	0x08003c99
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800393c:	b29b      	uxth	r3, r3
 800393e:	1ad3      	subs	r3, r2, r3
 8003940:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003948:	b29b      	uxth	r3, r3
 800394a:	2b00      	cmp	r3, #0
 800394c:	f000 808e 	beq.w	8003a6c <HAL_UART_IRQHandler+0x51c>
 8003950:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003954:	2b00      	cmp	r3, #0
 8003956:	f000 8089 	beq.w	8003a6c <HAL_UART_IRQHandler+0x51c>
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	330c      	adds	r3, #12
 8003960:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003962:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003964:	e853 3f00 	ldrex	r3, [r3]
 8003968:	637b      	str	r3, [r7, #52]	@ 0x34
 800396a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800396c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003970:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	330c      	adds	r3, #12
 800397a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 800397e:	647a      	str	r2, [r7, #68]	@ 0x44
 8003980:	643b      	str	r3, [r7, #64]	@ 0x40
 8003982:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8003984:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003986:	e841 2300 	strex	r3, r2, [r1]
 800398a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800398c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800398e:	2b00      	cmp	r3, #0
 8003990:	d1e3      	bne.n	800395a <HAL_UART_IRQHandler+0x40a>
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	3314      	adds	r3, #20
 8003998:	627b      	str	r3, [r7, #36]	@ 0x24
 800399a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800399c:	e853 3f00 	ldrex	r3, [r3]
 80039a0:	623b      	str	r3, [r7, #32]
 80039a2:	6a3b      	ldr	r3, [r7, #32]
 80039a4:	f023 0301 	bic.w	r3, r3, #1
 80039a8:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	3314      	adds	r3, #20
 80039b2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80039b6:	633a      	str	r2, [r7, #48]	@ 0x30
 80039b8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80039ba:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80039bc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80039be:	e841 2300 	strex	r3, r2, [r1]
 80039c2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80039c4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d1e3      	bne.n	8003992 <HAL_UART_IRQHandler+0x442>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	2220      	movs	r2, #32
 80039ce:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	2200      	movs	r2, #0
 80039d6:	631a      	str	r2, [r3, #48]	@ 0x30
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	330c      	adds	r3, #12
 80039de:	613b      	str	r3, [r7, #16]
 80039e0:	693b      	ldr	r3, [r7, #16]
 80039e2:	e853 3f00 	ldrex	r3, [r3]
 80039e6:	60fb      	str	r3, [r7, #12]
 80039e8:	68fb      	ldr	r3, [r7, #12]
 80039ea:	f023 0310 	bic.w	r3, r3, #16
 80039ee:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	681b      	ldr	r3, [r3, #0]
 80039f6:	330c      	adds	r3, #12
 80039f8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80039fc:	61fa      	str	r2, [r7, #28]
 80039fe:	61bb      	str	r3, [r7, #24]
 8003a00:	69b9      	ldr	r1, [r7, #24]
 8003a02:	69fa      	ldr	r2, [r7, #28]
 8003a04:	e841 2300 	strex	r3, r2, [r1]
 8003a08:	617b      	str	r3, [r7, #20]
 8003a0a:	697b      	ldr	r3, [r7, #20]
 8003a0c:	2b00      	cmp	r3, #0
 8003a0e:	d1e3      	bne.n	80039d8 <HAL_UART_IRQHandler+0x488>
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	2202      	movs	r2, #2
 8003a14:	635a      	str	r2, [r3, #52]	@ 0x34
 8003a16:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003a1a:	4619      	mov	r1, r3
 8003a1c:	6878      	ldr	r0, [r7, #4]
 8003a1e:	f7fd fdd5 	bl	80015cc <HAL_UARTEx_RxEventCallback>
 8003a22:	e023      	b.n	8003a6c <HAL_UART_IRQHandler+0x51c>
 8003a24:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003a28:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	d009      	beq.n	8003a44 <HAL_UART_IRQHandler+0x4f4>
 8003a30:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003a34:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d003      	beq.n	8003a44 <HAL_UART_IRQHandler+0x4f4>
 8003a3c:	6878      	ldr	r0, [r7, #4]
 8003a3e:	f000 f93f 	bl	8003cc0 <UART_Transmit_IT>
 8003a42:	e014      	b.n	8003a6e <HAL_UART_IRQHandler+0x51e>
 8003a44:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003a48:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003a4c:	2b00      	cmp	r3, #0
 8003a4e:	d00e      	beq.n	8003a6e <HAL_UART_IRQHandler+0x51e>
 8003a50:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003a54:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003a58:	2b00      	cmp	r3, #0
 8003a5a:	d008      	beq.n	8003a6e <HAL_UART_IRQHandler+0x51e>
 8003a5c:	6878      	ldr	r0, [r7, #4]
 8003a5e:	f000 f97e 	bl	8003d5e <UART_EndTransmit_IT>
 8003a62:	e004      	b.n	8003a6e <HAL_UART_IRQHandler+0x51e>
 8003a64:	bf00      	nop
 8003a66:	e002      	b.n	8003a6e <HAL_UART_IRQHandler+0x51e>
 8003a68:	bf00      	nop
 8003a6a:	e000      	b.n	8003a6e <HAL_UART_IRQHandler+0x51e>
 8003a6c:	bf00      	nop
 8003a6e:	37e8      	adds	r7, #232	@ 0xe8
 8003a70:	46bd      	mov	sp, r7
 8003a72:	bd80      	pop	{r7, pc}

08003a74 <HAL_UART_ErrorCallback>:
 8003a74:	b480      	push	{r7}
 8003a76:	b083      	sub	sp, #12
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	6078      	str	r0, [r7, #4]
 8003a7c:	bf00      	nop
 8003a7e:	370c      	adds	r7, #12
 8003a80:	46bd      	mov	sp, r7
 8003a82:	bc80      	pop	{r7}
 8003a84:	4770      	bx	lr

08003a86 <UART_WaitOnFlagUntilTimeout>:
 8003a86:	b580      	push	{r7, lr}
 8003a88:	b090      	sub	sp, #64	@ 0x40
 8003a8a:	af00      	add	r7, sp, #0
 8003a8c:	60f8      	str	r0, [r7, #12]
 8003a8e:	60b9      	str	r1, [r7, #8]
 8003a90:	603b      	str	r3, [r7, #0]
 8003a92:	4613      	mov	r3, r2
 8003a94:	71fb      	strb	r3, [r7, #7]
 8003a96:	e050      	b.n	8003b3a <UART_WaitOnFlagUntilTimeout+0xb4>
 8003a98:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003a9a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003a9e:	d04c      	beq.n	8003b3a <UART_WaitOnFlagUntilTimeout+0xb4>
 8003aa0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003aa2:	2b00      	cmp	r3, #0
 8003aa4:	d007      	beq.n	8003ab6 <UART_WaitOnFlagUntilTimeout+0x30>
 8003aa6:	f7fe f919 	bl	8001cdc <HAL_GetTick>
 8003aaa:	4602      	mov	r2, r0
 8003aac:	683b      	ldr	r3, [r7, #0]
 8003aae:	1ad3      	subs	r3, r2, r3
 8003ab0:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8003ab2:	429a      	cmp	r2, r3
 8003ab4:	d241      	bcs.n	8003b3a <UART_WaitOnFlagUntilTimeout+0xb4>
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	681b      	ldr	r3, [r3, #0]
 8003aba:	330c      	adds	r3, #12
 8003abc:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003abe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003ac0:	e853 3f00 	ldrex	r3, [r3]
 8003ac4:	627b      	str	r3, [r7, #36]	@ 0x24
 8003ac6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ac8:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
 8003acc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003ace:	68fb      	ldr	r3, [r7, #12]
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	330c      	adds	r3, #12
 8003ad4:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8003ad6:	637a      	str	r2, [r7, #52]	@ 0x34
 8003ad8:	633b      	str	r3, [r7, #48]	@ 0x30
 8003ada:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8003adc:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8003ade:	e841 2300 	strex	r3, r2, [r1]
 8003ae2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003ae4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003ae6:	2b00      	cmp	r3, #0
 8003ae8:	d1e5      	bne.n	8003ab6 <UART_WaitOnFlagUntilTimeout+0x30>
 8003aea:	68fb      	ldr	r3, [r7, #12]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	3314      	adds	r3, #20
 8003af0:	617b      	str	r3, [r7, #20]
 8003af2:	697b      	ldr	r3, [r7, #20]
 8003af4:	e853 3f00 	ldrex	r3, [r3]
 8003af8:	613b      	str	r3, [r7, #16]
 8003afa:	693b      	ldr	r3, [r7, #16]
 8003afc:	f023 0301 	bic.w	r3, r3, #1
 8003b00:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003b02:	68fb      	ldr	r3, [r7, #12]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	3314      	adds	r3, #20
 8003b08:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8003b0a:	623a      	str	r2, [r7, #32]
 8003b0c:	61fb      	str	r3, [r7, #28]
 8003b0e:	69f9      	ldr	r1, [r7, #28]
 8003b10:	6a3a      	ldr	r2, [r7, #32]
 8003b12:	e841 2300 	strex	r3, r2, [r1]
 8003b16:	61bb      	str	r3, [r7, #24]
 8003b18:	69bb      	ldr	r3, [r7, #24]
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d1e5      	bne.n	8003aea <UART_WaitOnFlagUntilTimeout+0x64>
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	2220      	movs	r2, #32
 8003b22:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b26:	68fb      	ldr	r3, [r7, #12]
 8003b28:	2220      	movs	r2, #32
 8003b2a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003b2e:	68fb      	ldr	r3, [r7, #12]
 8003b30:	2200      	movs	r2, #0
 8003b32:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003b36:	2303      	movs	r3, #3
 8003b38:	e00f      	b.n	8003b5a <UART_WaitOnFlagUntilTimeout+0xd4>
 8003b3a:	68fb      	ldr	r3, [r7, #12]
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	681a      	ldr	r2, [r3, #0]
 8003b40:	68bb      	ldr	r3, [r7, #8]
 8003b42:	4013      	ands	r3, r2
 8003b44:	68ba      	ldr	r2, [r7, #8]
 8003b46:	429a      	cmp	r2, r3
 8003b48:	bf0c      	ite	eq
 8003b4a:	2301      	moveq	r3, #1
 8003b4c:	2300      	movne	r3, #0
 8003b4e:	b2db      	uxtb	r3, r3
 8003b50:	461a      	mov	r2, r3
 8003b52:	79fb      	ldrb	r3, [r7, #7]
 8003b54:	429a      	cmp	r2, r3
 8003b56:	d09f      	beq.n	8003a98 <UART_WaitOnFlagUntilTimeout+0x12>
 8003b58:	2300      	movs	r3, #0
 8003b5a:	4618      	mov	r0, r3
 8003b5c:	3740      	adds	r7, #64	@ 0x40
 8003b5e:	46bd      	mov	sp, r7
 8003b60:	bd80      	pop	{r7, pc}

08003b62 <UART_Start_Receive_IT>:
 8003b62:	b480      	push	{r7}
 8003b64:	b085      	sub	sp, #20
 8003b66:	af00      	add	r7, sp, #0
 8003b68:	60f8      	str	r0, [r7, #12]
 8003b6a:	60b9      	str	r1, [r7, #8]
 8003b6c:	4613      	mov	r3, r2
 8003b6e:	80fb      	strh	r3, [r7, #6]
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	68ba      	ldr	r2, [r7, #8]
 8003b74:	629a      	str	r2, [r3, #40]	@ 0x28
 8003b76:	68fb      	ldr	r3, [r7, #12]
 8003b78:	88fa      	ldrh	r2, [r7, #6]
 8003b7a:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	88fa      	ldrh	r2, [r7, #6]
 8003b80:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	2200      	movs	r2, #0
 8003b86:	645a      	str	r2, [r3, #68]	@ 0x44
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	2222      	movs	r2, #34	@ 0x22
 8003b8c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003b90:	68fb      	ldr	r3, [r7, #12]
 8003b92:	691b      	ldr	r3, [r3, #16]
 8003b94:	2b00      	cmp	r3, #0
 8003b96:	d007      	beq.n	8003ba8 <UART_Start_Receive_IT+0x46>
 8003b98:	68fb      	ldr	r3, [r7, #12]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	68da      	ldr	r2, [r3, #12]
 8003b9e:	68fb      	ldr	r3, [r7, #12]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003ba6:	60da      	str	r2, [r3, #12]
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	695a      	ldr	r2, [r3, #20]
 8003bae:	68fb      	ldr	r3, [r7, #12]
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	f042 0201 	orr.w	r2, r2, #1
 8003bb6:	615a      	str	r2, [r3, #20]
 8003bb8:	68fb      	ldr	r3, [r7, #12]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	68da      	ldr	r2, [r3, #12]
 8003bbe:	68fb      	ldr	r3, [r7, #12]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	f042 0220 	orr.w	r2, r2, #32
 8003bc6:	60da      	str	r2, [r3, #12]
 8003bc8:	2300      	movs	r3, #0
 8003bca:	4618      	mov	r0, r3
 8003bcc:	3714      	adds	r7, #20
 8003bce:	46bd      	mov	sp, r7
 8003bd0:	bc80      	pop	{r7}
 8003bd2:	4770      	bx	lr

08003bd4 <UART_EndRxTransfer>:
 8003bd4:	b480      	push	{r7}
 8003bd6:	b095      	sub	sp, #84	@ 0x54
 8003bd8:	af00      	add	r7, sp, #0
 8003bda:	6078      	str	r0, [r7, #4]
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	330c      	adds	r3, #12
 8003be2:	637b      	str	r3, [r7, #52]	@ 0x34
 8003be4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003be6:	e853 3f00 	ldrex	r3, [r3]
 8003bea:	633b      	str	r3, [r7, #48]	@ 0x30
 8003bec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003bee:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003bf2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	330c      	adds	r3, #12
 8003bfa:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8003bfc:	643a      	str	r2, [r7, #64]	@ 0x40
 8003bfe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003c00:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003c02:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8003c04:	e841 2300 	strex	r3, r2, [r1]
 8003c08:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003c0a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003c0c:	2b00      	cmp	r3, #0
 8003c0e:	d1e5      	bne.n	8003bdc <UART_EndRxTransfer+0x8>
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	3314      	adds	r3, #20
 8003c16:	623b      	str	r3, [r7, #32]
 8003c18:	6a3b      	ldr	r3, [r7, #32]
 8003c1a:	e853 3f00 	ldrex	r3, [r3]
 8003c1e:	61fb      	str	r3, [r7, #28]
 8003c20:	69fb      	ldr	r3, [r7, #28]
 8003c22:	f023 0301 	bic.w	r3, r3, #1
 8003c26:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	3314      	adds	r3, #20
 8003c2e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8003c30:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003c32:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003c34:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003c36:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003c38:	e841 2300 	strex	r3, r2, [r1]
 8003c3c:	627b      	str	r3, [r7, #36]	@ 0x24
 8003c3e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	d1e5      	bne.n	8003c10 <UART_EndRxTransfer+0x3c>
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c48:	2b01      	cmp	r3, #1
 8003c4a:	d119      	bne.n	8003c80 <UART_EndRxTransfer+0xac>
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	330c      	adds	r3, #12
 8003c52:	60fb      	str	r3, [r7, #12]
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	e853 3f00 	ldrex	r3, [r3]
 8003c5a:	60bb      	str	r3, [r7, #8]
 8003c5c:	68bb      	ldr	r3, [r7, #8]
 8003c5e:	f023 0310 	bic.w	r3, r3, #16
 8003c62:	647b      	str	r3, [r7, #68]	@ 0x44
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	330c      	adds	r3, #12
 8003c6a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003c6c:	61ba      	str	r2, [r7, #24]
 8003c6e:	617b      	str	r3, [r7, #20]
 8003c70:	6979      	ldr	r1, [r7, #20]
 8003c72:	69ba      	ldr	r2, [r7, #24]
 8003c74:	e841 2300 	strex	r3, r2, [r1]
 8003c78:	613b      	str	r3, [r7, #16]
 8003c7a:	693b      	ldr	r3, [r7, #16]
 8003c7c:	2b00      	cmp	r3, #0
 8003c7e:	d1e5      	bne.n	8003c4c <UART_EndRxTransfer+0x78>
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	2220      	movs	r2, #32
 8003c84:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	2200      	movs	r2, #0
 8003c8c:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c8e:	bf00      	nop
 8003c90:	3754      	adds	r7, #84	@ 0x54
 8003c92:	46bd      	mov	sp, r7
 8003c94:	bc80      	pop	{r7}
 8003c96:	4770      	bx	lr

08003c98 <UART_DMAAbortOnError>:
 8003c98:	b580      	push	{r7, lr}
 8003c9a:	b084      	sub	sp, #16
 8003c9c:	af00      	add	r7, sp, #0
 8003c9e:	6078      	str	r0, [r7, #4]
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003ca4:	60fb      	str	r3, [r7, #12]
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	2200      	movs	r2, #0
 8003caa:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	2200      	movs	r2, #0
 8003cb0:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003cb2:	68f8      	ldr	r0, [r7, #12]
 8003cb4:	f7ff fede 	bl	8003a74 <HAL_UART_ErrorCallback>
 8003cb8:	bf00      	nop
 8003cba:	3710      	adds	r7, #16
 8003cbc:	46bd      	mov	sp, r7
 8003cbe:	bd80      	pop	{r7, pc}

08003cc0 <UART_Transmit_IT>:
 8003cc0:	b480      	push	{r7}
 8003cc2:	b085      	sub	sp, #20
 8003cc4:	af00      	add	r7, sp, #0
 8003cc6:	6078      	str	r0, [r7, #4]
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003cce:	b2db      	uxtb	r3, r3
 8003cd0:	2b21      	cmp	r3, #33	@ 0x21
 8003cd2:	d13e      	bne.n	8003d52 <UART_Transmit_IT+0x92>
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	689b      	ldr	r3, [r3, #8]
 8003cd8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003cdc:	d114      	bne.n	8003d08 <UART_Transmit_IT+0x48>
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	691b      	ldr	r3, [r3, #16]
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	d110      	bne.n	8003d08 <UART_Transmit_IT+0x48>
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	6a1b      	ldr	r3, [r3, #32]
 8003cea:	60fb      	str	r3, [r7, #12]
 8003cec:	68fb      	ldr	r3, [r7, #12]
 8003cee:	881b      	ldrh	r3, [r3, #0]
 8003cf0:	461a      	mov	r2, r3
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003cfa:	605a      	str	r2, [r3, #4]
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	6a1b      	ldr	r3, [r3, #32]
 8003d00:	1c9a      	adds	r2, r3, #2
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	621a      	str	r2, [r3, #32]
 8003d06:	e008      	b.n	8003d1a <UART_Transmit_IT+0x5a>
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	6a1b      	ldr	r3, [r3, #32]
 8003d0c:	1c59      	adds	r1, r3, #1
 8003d0e:	687a      	ldr	r2, [r7, #4]
 8003d10:	6211      	str	r1, [r2, #32]
 8003d12:	781a      	ldrb	r2, [r3, #0]
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	681b      	ldr	r3, [r3, #0]
 8003d18:	605a      	str	r2, [r3, #4]
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003d1e:	b29b      	uxth	r3, r3
 8003d20:	3b01      	subs	r3, #1
 8003d22:	b29b      	uxth	r3, r3
 8003d24:	687a      	ldr	r2, [r7, #4]
 8003d26:	4619      	mov	r1, r3
 8003d28:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	d10f      	bne.n	8003d4e <UART_Transmit_IT+0x8e>
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	681b      	ldr	r3, [r3, #0]
 8003d32:	68da      	ldr	r2, [r3, #12]
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003d3c:	60da      	str	r2, [r3, #12]
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	68da      	ldr	r2, [r3, #12]
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003d4c:	60da      	str	r2, [r3, #12]
 8003d4e:	2300      	movs	r3, #0
 8003d50:	e000      	b.n	8003d54 <UART_Transmit_IT+0x94>
 8003d52:	2302      	movs	r3, #2
 8003d54:	4618      	mov	r0, r3
 8003d56:	3714      	adds	r7, #20
 8003d58:	46bd      	mov	sp, r7
 8003d5a:	bc80      	pop	{r7}
 8003d5c:	4770      	bx	lr

08003d5e <UART_EndTransmit_IT>:
 8003d5e:	b580      	push	{r7, lr}
 8003d60:	b082      	sub	sp, #8
 8003d62:	af00      	add	r7, sp, #0
 8003d64:	6078      	str	r0, [r7, #4]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	68da      	ldr	r2, [r3, #12]
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003d74:	60da      	str	r2, [r3, #12]
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	2220      	movs	r2, #32
 8003d7a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003d7e:	6878      	ldr	r0, [r7, #4]
 8003d80:	f7fd fcea 	bl	8001758 <HAL_UART_TxCpltCallback>
 8003d84:	2300      	movs	r3, #0
 8003d86:	4618      	mov	r0, r3
 8003d88:	3708      	adds	r7, #8
 8003d8a:	46bd      	mov	sp, r7
 8003d8c:	bd80      	pop	{r7, pc}

08003d8e <UART_Receive_IT>:
 8003d8e:	b580      	push	{r7, lr}
 8003d90:	b08c      	sub	sp, #48	@ 0x30
 8003d92:	af00      	add	r7, sp, #0
 8003d94:	6078      	str	r0, [r7, #4]
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003d9c:	b2db      	uxtb	r3, r3
 8003d9e:	2b22      	cmp	r3, #34	@ 0x22
 8003da0:	f040 80ae 	bne.w	8003f00 <UART_Receive_IT+0x172>
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	689b      	ldr	r3, [r3, #8]
 8003da8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003dac:	d117      	bne.n	8003dde <UART_Receive_IT+0x50>
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	691b      	ldr	r3, [r3, #16]
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	d113      	bne.n	8003dde <UART_Receive_IT+0x50>
 8003db6:	2300      	movs	r3, #0
 8003db8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003dbe:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	685b      	ldr	r3, [r3, #4]
 8003dc6:	b29b      	uxth	r3, r3
 8003dc8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003dcc:	b29a      	uxth	r2, r3
 8003dce:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003dd0:	801a      	strh	r2, [r3, #0]
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003dd6:	1c9a      	adds	r2, r3, #2
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	629a      	str	r2, [r3, #40]	@ 0x28
 8003ddc:	e026      	b.n	8003e2c <UART_Receive_IT+0x9e>
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003de2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003de4:	2300      	movs	r3, #0
 8003de6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	689b      	ldr	r3, [r3, #8]
 8003dec:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003df0:	d007      	beq.n	8003e02 <UART_Receive_IT+0x74>
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	689b      	ldr	r3, [r3, #8]
 8003df6:	2b00      	cmp	r3, #0
 8003df8:	d10a      	bne.n	8003e10 <UART_Receive_IT+0x82>
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	691b      	ldr	r3, [r3, #16]
 8003dfe:	2b00      	cmp	r3, #0
 8003e00:	d106      	bne.n	8003e10 <UART_Receive_IT+0x82>
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	685b      	ldr	r3, [r3, #4]
 8003e08:	b2da      	uxtb	r2, r3
 8003e0a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003e0c:	701a      	strb	r2, [r3, #0]
 8003e0e:	e008      	b.n	8003e22 <UART_Receive_IT+0x94>
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	685b      	ldr	r3, [r3, #4]
 8003e16:	b2db      	uxtb	r3, r3
 8003e18:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003e1c:	b2da      	uxtb	r2, r3
 8003e1e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003e20:	701a      	strb	r2, [r3, #0]
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003e26:	1c5a      	adds	r2, r3, #1
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	629a      	str	r2, [r3, #40]	@ 0x28
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003e30:	b29b      	uxth	r3, r3
 8003e32:	3b01      	subs	r3, #1
 8003e34:	b29b      	uxth	r3, r3
 8003e36:	687a      	ldr	r2, [r7, #4]
 8003e38:	4619      	mov	r1, r3
 8003e3a:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8003e3c:	2b00      	cmp	r3, #0
 8003e3e:	d15d      	bne.n	8003efc <UART_Receive_IT+0x16e>
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	681b      	ldr	r3, [r3, #0]
 8003e44:	68da      	ldr	r2, [r3, #12]
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	f022 0220 	bic.w	r2, r2, #32
 8003e4e:	60da      	str	r2, [r3, #12]
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	68da      	ldr	r2, [r3, #12]
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003e5e:	60da      	str	r2, [r3, #12]
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	695a      	ldr	r2, [r3, #20]
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	f022 0201 	bic.w	r2, r2, #1
 8003e6e:	615a      	str	r2, [r3, #20]
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	2220      	movs	r2, #32
 8003e74:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	2200      	movs	r2, #0
 8003e7c:	635a      	str	r2, [r3, #52]	@ 0x34
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003e82:	2b01      	cmp	r3, #1
 8003e84:	d135      	bne.n	8003ef2 <UART_Receive_IT+0x164>
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	2200      	movs	r2, #0
 8003e8a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	681b      	ldr	r3, [r3, #0]
 8003e90:	330c      	adds	r3, #12
 8003e92:	617b      	str	r3, [r7, #20]
 8003e94:	697b      	ldr	r3, [r7, #20]
 8003e96:	e853 3f00 	ldrex	r3, [r3]
 8003e9a:	613b      	str	r3, [r7, #16]
 8003e9c:	693b      	ldr	r3, [r7, #16]
 8003e9e:	f023 0310 	bic.w	r3, r3, #16
 8003ea2:	627b      	str	r3, [r7, #36]	@ 0x24
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	330c      	adds	r3, #12
 8003eaa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003eac:	623a      	str	r2, [r7, #32]
 8003eae:	61fb      	str	r3, [r7, #28]
 8003eb0:	69f9      	ldr	r1, [r7, #28]
 8003eb2:	6a3a      	ldr	r2, [r7, #32]
 8003eb4:	e841 2300 	strex	r3, r2, [r1]
 8003eb8:	61bb      	str	r3, [r7, #24]
 8003eba:	69bb      	ldr	r3, [r7, #24]
 8003ebc:	2b00      	cmp	r3, #0
 8003ebe:	d1e5      	bne.n	8003e8c <UART_Receive_IT+0xfe>
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	681b      	ldr	r3, [r3, #0]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f003 0310 	and.w	r3, r3, #16
 8003eca:	2b10      	cmp	r3, #16
 8003ecc:	d10a      	bne.n	8003ee4 <UART_Receive_IT+0x156>
 8003ece:	2300      	movs	r3, #0
 8003ed0:	60fb      	str	r3, [r7, #12]
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	681b      	ldr	r3, [r3, #0]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	60fb      	str	r3, [r7, #12]
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	681b      	ldr	r3, [r3, #0]
 8003ede:	685b      	ldr	r3, [r3, #4]
 8003ee0:	60fb      	str	r3, [r7, #12]
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8003ee8:	4619      	mov	r1, r3
 8003eea:	6878      	ldr	r0, [r7, #4]
 8003eec:	f7fd fb6e 	bl	80015cc <HAL_UARTEx_RxEventCallback>
 8003ef0:	e002      	b.n	8003ef8 <UART_Receive_IT+0x16a>
 8003ef2:	6878      	ldr	r0, [r7, #4]
 8003ef4:	f7fd fb1c 	bl	8001530 <HAL_UART_RxCpltCallback>
 8003ef8:	2300      	movs	r3, #0
 8003efa:	e002      	b.n	8003f02 <UART_Receive_IT+0x174>
 8003efc:	2300      	movs	r3, #0
 8003efe:	e000      	b.n	8003f02 <UART_Receive_IT+0x174>
 8003f00:	2302      	movs	r3, #2
 8003f02:	4618      	mov	r0, r3
 8003f04:	3730      	adds	r7, #48	@ 0x30
 8003f06:	46bd      	mov	sp, r7
 8003f08:	bd80      	pop	{r7, pc}
	...

08003f0c <UART_SetConfig>:
 8003f0c:	b580      	push	{r7, lr}
 8003f0e:	b084      	sub	sp, #16
 8003f10:	af00      	add	r7, sp, #0
 8003f12:	6078      	str	r0, [r7, #4]
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	691b      	ldr	r3, [r3, #16]
 8003f1a:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	68da      	ldr	r2, [r3, #12]
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	430a      	orrs	r2, r1
 8003f28:	611a      	str	r2, [r3, #16]
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	689a      	ldr	r2, [r3, #8]
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	691b      	ldr	r3, [r3, #16]
 8003f32:	431a      	orrs	r2, r3
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	695b      	ldr	r3, [r3, #20]
 8003f38:	431a      	orrs	r2, r3
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	69db      	ldr	r3, [r3, #28]
 8003f3e:	4313      	orrs	r3, r2
 8003f40:	60bb      	str	r3, [r7, #8]
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	681b      	ldr	r3, [r3, #0]
 8003f46:	68db      	ldr	r3, [r3, #12]
 8003f48:	f423 4316 	bic.w	r3, r3, #38400	@ 0x9600
 8003f4c:	f023 030c 	bic.w	r3, r3, #12
 8003f50:	687a      	ldr	r2, [r7, #4]
 8003f52:	6812      	ldr	r2, [r2, #0]
 8003f54:	68b9      	ldr	r1, [r7, #8]
 8003f56:	430b      	orrs	r3, r1
 8003f58:	60d3      	str	r3, [r2, #12]
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	681b      	ldr	r3, [r3, #0]
 8003f5e:	695b      	ldr	r3, [r3, #20]
 8003f60:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	699a      	ldr	r2, [r3, #24]
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	430a      	orrs	r2, r1
 8003f6e:	615a      	str	r2, [r3, #20]
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	681b      	ldr	r3, [r3, #0]
 8003f74:	4a57      	ldr	r2, [pc, #348]	@ (80040d4 <UART_SetConfig+0x1c8>)
 8003f76:	4293      	cmp	r3, r2
 8003f78:	d004      	beq.n	8003f84 <UART_SetConfig+0x78>
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	4a56      	ldr	r2, [pc, #344]	@ (80040d8 <UART_SetConfig+0x1cc>)
 8003f80:	4293      	cmp	r3, r2
 8003f82:	d103      	bne.n	8003f8c <UART_SetConfig+0x80>
 8003f84:	f7ff f938 	bl	80031f8 <HAL_RCC_GetPCLK2Freq>
 8003f88:	60f8      	str	r0, [r7, #12]
 8003f8a:	e002      	b.n	8003f92 <UART_SetConfig+0x86>
 8003f8c:	f7ff f912 	bl	80031b4 <HAL_RCC_GetPCLK1Freq>
 8003f90:	60f8      	str	r0, [r7, #12]
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	69db      	ldr	r3, [r3, #28]
 8003f96:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003f9a:	d14c      	bne.n	8004036 <UART_SetConfig+0x12a>
 8003f9c:	68fa      	ldr	r2, [r7, #12]
 8003f9e:	4613      	mov	r3, r2
 8003fa0:	009b      	lsls	r3, r3, #2
 8003fa2:	4413      	add	r3, r2
 8003fa4:	009a      	lsls	r2, r3, #2
 8003fa6:	441a      	add	r2, r3
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	685b      	ldr	r3, [r3, #4]
 8003fac:	005b      	lsls	r3, r3, #1
 8003fae:	fbb2 f3f3 	udiv	r3, r2, r3
 8003fb2:	4a4a      	ldr	r2, [pc, #296]	@ (80040dc <UART_SetConfig+0x1d0>)
 8003fb4:	fba2 2303 	umull	r2, r3, r2, r3
 8003fb8:	095b      	lsrs	r3, r3, #5
 8003fba:	0119      	lsls	r1, r3, #4
 8003fbc:	68fa      	ldr	r2, [r7, #12]
 8003fbe:	4613      	mov	r3, r2
 8003fc0:	009b      	lsls	r3, r3, #2
 8003fc2:	4413      	add	r3, r2
 8003fc4:	009a      	lsls	r2, r3, #2
 8003fc6:	441a      	add	r2, r3
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	685b      	ldr	r3, [r3, #4]
 8003fcc:	005b      	lsls	r3, r3, #1
 8003fce:	fbb2 f2f3 	udiv	r2, r2, r3
 8003fd2:	4b42      	ldr	r3, [pc, #264]	@ (80040dc <UART_SetConfig+0x1d0>)
 8003fd4:	fba3 0302 	umull	r0, r3, r3, r2
 8003fd8:	095b      	lsrs	r3, r3, #5
 8003fda:	2064      	movs	r0, #100	@ 0x64
 8003fdc:	fb00 f303 	mul.w	r3, r0, r3
 8003fe0:	1ad3      	subs	r3, r2, r3
 8003fe2:	00db      	lsls	r3, r3, #3
 8003fe4:	3332      	adds	r3, #50	@ 0x32
 8003fe6:	4a3d      	ldr	r2, [pc, #244]	@ (80040dc <UART_SetConfig+0x1d0>)
 8003fe8:	fba2 2303 	umull	r2, r3, r2, r3
 8003fec:	095b      	lsrs	r3, r3, #5
 8003fee:	005b      	lsls	r3, r3, #1
 8003ff0:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8003ff4:	4419      	add	r1, r3
 8003ff6:	68fa      	ldr	r2, [r7, #12]
 8003ff8:	4613      	mov	r3, r2
 8003ffa:	009b      	lsls	r3, r3, #2
 8003ffc:	4413      	add	r3, r2
 8003ffe:	009a      	lsls	r2, r3, #2
 8004000:	441a      	add	r2, r3
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	685b      	ldr	r3, [r3, #4]
 8004006:	005b      	lsls	r3, r3, #1
 8004008:	fbb2 f2f3 	udiv	r2, r2, r3
 800400c:	4b33      	ldr	r3, [pc, #204]	@ (80040dc <UART_SetConfig+0x1d0>)
 800400e:	fba3 0302 	umull	r0, r3, r3, r2
 8004012:	095b      	lsrs	r3, r3, #5
 8004014:	2064      	movs	r0, #100	@ 0x64
 8004016:	fb00 f303 	mul.w	r3, r0, r3
 800401a:	1ad3      	subs	r3, r2, r3
 800401c:	00db      	lsls	r3, r3, #3
 800401e:	3332      	adds	r3, #50	@ 0x32
 8004020:	4a2e      	ldr	r2, [pc, #184]	@ (80040dc <UART_SetConfig+0x1d0>)
 8004022:	fba2 2303 	umull	r2, r3, r2, r3
 8004026:	095b      	lsrs	r3, r3, #5
 8004028:	f003 0207 	and.w	r2, r3, #7
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	440a      	add	r2, r1
 8004032:	609a      	str	r2, [r3, #8]
 8004034:	e04a      	b.n	80040cc <UART_SetConfig+0x1c0>
 8004036:	68fa      	ldr	r2, [r7, #12]
 8004038:	4613      	mov	r3, r2
 800403a:	009b      	lsls	r3, r3, #2
 800403c:	4413      	add	r3, r2
 800403e:	009a      	lsls	r2, r3, #2
 8004040:	441a      	add	r2, r3
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	685b      	ldr	r3, [r3, #4]
 8004046:	009b      	lsls	r3, r3, #2
 8004048:	fbb2 f3f3 	udiv	r3, r2, r3
 800404c:	4a23      	ldr	r2, [pc, #140]	@ (80040dc <UART_SetConfig+0x1d0>)
 800404e:	fba2 2303 	umull	r2, r3, r2, r3
 8004052:	095b      	lsrs	r3, r3, #5
 8004054:	0119      	lsls	r1, r3, #4
 8004056:	68fa      	ldr	r2, [r7, #12]
 8004058:	4613      	mov	r3, r2
 800405a:	009b      	lsls	r3, r3, #2
 800405c:	4413      	add	r3, r2
 800405e:	009a      	lsls	r2, r3, #2
 8004060:	441a      	add	r2, r3
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	685b      	ldr	r3, [r3, #4]
 8004066:	009b      	lsls	r3, r3, #2
 8004068:	fbb2 f2f3 	udiv	r2, r2, r3
 800406c:	4b1b      	ldr	r3, [pc, #108]	@ (80040dc <UART_SetConfig+0x1d0>)
 800406e:	fba3 0302 	umull	r0, r3, r3, r2
 8004072:	095b      	lsrs	r3, r3, #5
 8004074:	2064      	movs	r0, #100	@ 0x64
 8004076:	fb00 f303 	mul.w	r3, r0, r3
 800407a:	1ad3      	subs	r3, r2, r3
 800407c:	011b      	lsls	r3, r3, #4
 800407e:	3332      	adds	r3, #50	@ 0x32
 8004080:	4a16      	ldr	r2, [pc, #88]	@ (80040dc <UART_SetConfig+0x1d0>)
 8004082:	fba2 2303 	umull	r2, r3, r2, r3
 8004086:	095b      	lsrs	r3, r3, #5
 8004088:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800408c:	4419      	add	r1, r3
 800408e:	68fa      	ldr	r2, [r7, #12]
 8004090:	4613      	mov	r3, r2
 8004092:	009b      	lsls	r3, r3, #2
 8004094:	4413      	add	r3, r2
 8004096:	009a      	lsls	r2, r3, #2
 8004098:	441a      	add	r2, r3
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	685b      	ldr	r3, [r3, #4]
 800409e:	009b      	lsls	r3, r3, #2
 80040a0:	fbb2 f2f3 	udiv	r2, r2, r3
 80040a4:	4b0d      	ldr	r3, [pc, #52]	@ (80040dc <UART_SetConfig+0x1d0>)
 80040a6:	fba3 0302 	umull	r0, r3, r3, r2
 80040aa:	095b      	lsrs	r3, r3, #5
 80040ac:	2064      	movs	r0, #100	@ 0x64
 80040ae:	fb00 f303 	mul.w	r3, r0, r3
 80040b2:	1ad3      	subs	r3, r2, r3
 80040b4:	011b      	lsls	r3, r3, #4
 80040b6:	3332      	adds	r3, #50	@ 0x32
 80040b8:	4a08      	ldr	r2, [pc, #32]	@ (80040dc <UART_SetConfig+0x1d0>)
 80040ba:	fba2 2303 	umull	r2, r3, r2, r3
 80040be:	095b      	lsrs	r3, r3, #5
 80040c0:	f003 020f 	and.w	r2, r3, #15
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	681b      	ldr	r3, [r3, #0]
 80040c8:	440a      	add	r2, r1
 80040ca:	609a      	str	r2, [r3, #8]
 80040cc:	bf00      	nop
 80040ce:	3710      	adds	r7, #16
 80040d0:	46bd      	mov	sp, r7
 80040d2:	bd80      	pop	{r7, pc}
 80040d4:	40011000 	.word	0x40011000
 80040d8:	40011400 	.word	0x40011400
 80040dc:	51eb851f 	.word	0x51eb851f

080040e0 <__sflush_r>:
 80040e0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80040e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040e6:	0716      	lsls	r6, r2, #28
 80040e8:	4605      	mov	r5, r0
 80040ea:	460c      	mov	r4, r1
 80040ec:	d454      	bmi.n	8004198 <__sflush_r+0xb8>
 80040ee:	684b      	ldr	r3, [r1, #4]
 80040f0:	2b00      	cmp	r3, #0
 80040f2:	dc02      	bgt.n	80040fa <__sflush_r+0x1a>
 80040f4:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80040f6:	2b00      	cmp	r3, #0
 80040f8:	dd48      	ble.n	800418c <__sflush_r+0xac>
 80040fa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80040fc:	2e00      	cmp	r6, #0
 80040fe:	d045      	beq.n	800418c <__sflush_r+0xac>
 8004100:	2300      	movs	r3, #0
 8004102:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8004106:	682f      	ldr	r7, [r5, #0]
 8004108:	6a21      	ldr	r1, [r4, #32]
 800410a:	602b      	str	r3, [r5, #0]
 800410c:	d030      	beq.n	8004170 <__sflush_r+0x90>
 800410e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004110:	89a3      	ldrh	r3, [r4, #12]
 8004112:	0759      	lsls	r1, r3, #29
 8004114:	d505      	bpl.n	8004122 <__sflush_r+0x42>
 8004116:	6863      	ldr	r3, [r4, #4]
 8004118:	1ad2      	subs	r2, r2, r3
 800411a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800411c:	b10b      	cbz	r3, 8004122 <__sflush_r+0x42>
 800411e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004120:	1ad2      	subs	r2, r2, r3
 8004122:	2300      	movs	r3, #0
 8004124:	4628      	mov	r0, r5
 8004126:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004128:	6a21      	ldr	r1, [r4, #32]
 800412a:	47b0      	blx	r6
 800412c:	1c43      	adds	r3, r0, #1
 800412e:	89a3      	ldrh	r3, [r4, #12]
 8004130:	d106      	bne.n	8004140 <__sflush_r+0x60>
 8004132:	6829      	ldr	r1, [r5, #0]
 8004134:	291d      	cmp	r1, #29
 8004136:	d82b      	bhi.n	8004190 <__sflush_r+0xb0>
 8004138:	4a28      	ldr	r2, [pc, #160]	@ (80041dc <__sflush_r+0xfc>)
 800413a:	410a      	asrs	r2, r1
 800413c:	07d6      	lsls	r6, r2, #31
 800413e:	d427      	bmi.n	8004190 <__sflush_r+0xb0>
 8004140:	2200      	movs	r2, #0
 8004142:	6062      	str	r2, [r4, #4]
 8004144:	6922      	ldr	r2, [r4, #16]
 8004146:	04d9      	lsls	r1, r3, #19
 8004148:	6022      	str	r2, [r4, #0]
 800414a:	d504      	bpl.n	8004156 <__sflush_r+0x76>
 800414c:	1c42      	adds	r2, r0, #1
 800414e:	d101      	bne.n	8004154 <__sflush_r+0x74>
 8004150:	682b      	ldr	r3, [r5, #0]
 8004152:	b903      	cbnz	r3, 8004156 <__sflush_r+0x76>
 8004154:	6560      	str	r0, [r4, #84]	@ 0x54
 8004156:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004158:	602f      	str	r7, [r5, #0]
 800415a:	b1b9      	cbz	r1, 800418c <__sflush_r+0xac>
 800415c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004160:	4299      	cmp	r1, r3
 8004162:	d002      	beq.n	800416a <__sflush_r+0x8a>
 8004164:	4628      	mov	r0, r5
 8004166:	f000 fb13 	bl	8004790 <_free_r>
 800416a:	2300      	movs	r3, #0
 800416c:	6363      	str	r3, [r4, #52]	@ 0x34
 800416e:	e00d      	b.n	800418c <__sflush_r+0xac>
 8004170:	2301      	movs	r3, #1
 8004172:	4628      	mov	r0, r5
 8004174:	47b0      	blx	r6
 8004176:	4602      	mov	r2, r0
 8004178:	1c50      	adds	r0, r2, #1
 800417a:	d1c9      	bne.n	8004110 <__sflush_r+0x30>
 800417c:	682b      	ldr	r3, [r5, #0]
 800417e:	2b00      	cmp	r3, #0
 8004180:	d0c6      	beq.n	8004110 <__sflush_r+0x30>
 8004182:	2b1d      	cmp	r3, #29
 8004184:	d001      	beq.n	800418a <__sflush_r+0xaa>
 8004186:	2b16      	cmp	r3, #22
 8004188:	d11d      	bne.n	80041c6 <__sflush_r+0xe6>
 800418a:	602f      	str	r7, [r5, #0]
 800418c:	2000      	movs	r0, #0
 800418e:	e021      	b.n	80041d4 <__sflush_r+0xf4>
 8004190:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004194:	b21b      	sxth	r3, r3
 8004196:	e01a      	b.n	80041ce <__sflush_r+0xee>
 8004198:	690f      	ldr	r7, [r1, #16]
 800419a:	2f00      	cmp	r7, #0
 800419c:	d0f6      	beq.n	800418c <__sflush_r+0xac>
 800419e:	0793      	lsls	r3, r2, #30
 80041a0:	bf18      	it	ne
 80041a2:	2300      	movne	r3, #0
 80041a4:	680e      	ldr	r6, [r1, #0]
 80041a6:	bf08      	it	eq
 80041a8:	694b      	ldreq	r3, [r1, #20]
 80041aa:	1bf6      	subs	r6, r6, r7
 80041ac:	600f      	str	r7, [r1, #0]
 80041ae:	608b      	str	r3, [r1, #8]
 80041b0:	2e00      	cmp	r6, #0
 80041b2:	ddeb      	ble.n	800418c <__sflush_r+0xac>
 80041b4:	4633      	mov	r3, r6
 80041b6:	463a      	mov	r2, r7
 80041b8:	4628      	mov	r0, r5
 80041ba:	6a21      	ldr	r1, [r4, #32]
 80041bc:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80041c0:	47e0      	blx	ip
 80041c2:	2800      	cmp	r0, #0
 80041c4:	dc07      	bgt.n	80041d6 <__sflush_r+0xf6>
 80041c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80041ca:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80041ce:	f04f 30ff 	mov.w	r0, #4294967295
 80041d2:	81a3      	strh	r3, [r4, #12]
 80041d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80041d6:	4407      	add	r7, r0
 80041d8:	1a36      	subs	r6, r6, r0
 80041da:	e7e9      	b.n	80041b0 <__sflush_r+0xd0>
 80041dc:	dfbffffe 	.word	0xdfbffffe

080041e0 <_fflush_r>:
 80041e0:	b538      	push	{r3, r4, r5, lr}
 80041e2:	690b      	ldr	r3, [r1, #16]
 80041e4:	4605      	mov	r5, r0
 80041e6:	460c      	mov	r4, r1
 80041e8:	b913      	cbnz	r3, 80041f0 <_fflush_r+0x10>
 80041ea:	2500      	movs	r5, #0
 80041ec:	4628      	mov	r0, r5
 80041ee:	bd38      	pop	{r3, r4, r5, pc}
 80041f0:	b118      	cbz	r0, 80041fa <_fflush_r+0x1a>
 80041f2:	6a03      	ldr	r3, [r0, #32]
 80041f4:	b90b      	cbnz	r3, 80041fa <_fflush_r+0x1a>
 80041f6:	f000 f8bb 	bl	8004370 <__sinit>
 80041fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80041fe:	2b00      	cmp	r3, #0
 8004200:	d0f3      	beq.n	80041ea <_fflush_r+0xa>
 8004202:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004204:	07d0      	lsls	r0, r2, #31
 8004206:	d404      	bmi.n	8004212 <_fflush_r+0x32>
 8004208:	0599      	lsls	r1, r3, #22
 800420a:	d402      	bmi.n	8004212 <_fflush_r+0x32>
 800420c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800420e:	f000 faae 	bl	800476e <__retarget_lock_acquire_recursive>
 8004212:	4628      	mov	r0, r5
 8004214:	4621      	mov	r1, r4
 8004216:	f7ff ff63 	bl	80040e0 <__sflush_r>
 800421a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800421c:	4605      	mov	r5, r0
 800421e:	07da      	lsls	r2, r3, #31
 8004220:	d4e4      	bmi.n	80041ec <_fflush_r+0xc>
 8004222:	89a3      	ldrh	r3, [r4, #12]
 8004224:	059b      	lsls	r3, r3, #22
 8004226:	d4e1      	bmi.n	80041ec <_fflush_r+0xc>
 8004228:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800422a:	f000 faa1 	bl	8004770 <__retarget_lock_release_recursive>
 800422e:	e7dd      	b.n	80041ec <_fflush_r+0xc>

08004230 <fflush>:
 8004230:	4601      	mov	r1, r0
 8004232:	b920      	cbnz	r0, 800423e <fflush+0xe>
 8004234:	4a04      	ldr	r2, [pc, #16]	@ (8004248 <fflush+0x18>)
 8004236:	4905      	ldr	r1, [pc, #20]	@ (800424c <fflush+0x1c>)
 8004238:	4805      	ldr	r0, [pc, #20]	@ (8004250 <fflush+0x20>)
 800423a:	f000 b8b1 	b.w	80043a0 <_fwalk_sglue>
 800423e:	4b05      	ldr	r3, [pc, #20]	@ (8004254 <fflush+0x24>)
 8004240:	6818      	ldr	r0, [r3, #0]
 8004242:	f7ff bfcd 	b.w	80041e0 <_fflush_r>
 8004246:	bf00      	nop
 8004248:	2000000c 	.word	0x2000000c
 800424c:	080041e1 	.word	0x080041e1
 8004250:	2000001c 	.word	0x2000001c
 8004254:	20000018 	.word	0x20000018

08004258 <std>:
 8004258:	2300      	movs	r3, #0
 800425a:	b510      	push	{r4, lr}
 800425c:	4604      	mov	r4, r0
 800425e:	e9c0 3300 	strd	r3, r3, [r0]
 8004262:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004266:	6083      	str	r3, [r0, #8]
 8004268:	8181      	strh	r1, [r0, #12]
 800426a:	6643      	str	r3, [r0, #100]	@ 0x64
 800426c:	81c2      	strh	r2, [r0, #14]
 800426e:	6183      	str	r3, [r0, #24]
 8004270:	4619      	mov	r1, r3
 8004272:	2208      	movs	r2, #8
 8004274:	305c      	adds	r0, #92	@ 0x5c
 8004276:	f000 fa01 	bl	800467c <memset>
 800427a:	4b0d      	ldr	r3, [pc, #52]	@ (80042b0 <std+0x58>)
 800427c:	6224      	str	r4, [r4, #32]
 800427e:	6263      	str	r3, [r4, #36]	@ 0x24
 8004280:	4b0c      	ldr	r3, [pc, #48]	@ (80042b4 <std+0x5c>)
 8004282:	62a3      	str	r3, [r4, #40]	@ 0x28
 8004284:	4b0c      	ldr	r3, [pc, #48]	@ (80042b8 <std+0x60>)
 8004286:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8004288:	4b0c      	ldr	r3, [pc, #48]	@ (80042bc <std+0x64>)
 800428a:	6323      	str	r3, [r4, #48]	@ 0x30
 800428c:	4b0c      	ldr	r3, [pc, #48]	@ (80042c0 <std+0x68>)
 800428e:	429c      	cmp	r4, r3
 8004290:	d006      	beq.n	80042a0 <std+0x48>
 8004292:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8004296:	4294      	cmp	r4, r2
 8004298:	d002      	beq.n	80042a0 <std+0x48>
 800429a:	33d0      	adds	r3, #208	@ 0xd0
 800429c:	429c      	cmp	r4, r3
 800429e:	d105      	bne.n	80042ac <std+0x54>
 80042a0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80042a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80042a8:	f000 ba60 	b.w	800476c <__retarget_lock_init_recursive>
 80042ac:	bd10      	pop	{r4, pc}
 80042ae:	bf00      	nop
 80042b0:	080044cd 	.word	0x080044cd
 80042b4:	080044ef 	.word	0x080044ef
 80042b8:	08004527 	.word	0x08004527
 80042bc:	0800454b 	.word	0x0800454b
 80042c0:	2001311c 	.word	0x2001311c

080042c4 <stdio_exit_handler>:
 80042c4:	4a02      	ldr	r2, [pc, #8]	@ (80042d0 <stdio_exit_handler+0xc>)
 80042c6:	4903      	ldr	r1, [pc, #12]	@ (80042d4 <stdio_exit_handler+0x10>)
 80042c8:	4803      	ldr	r0, [pc, #12]	@ (80042d8 <stdio_exit_handler+0x14>)
 80042ca:	f000 b869 	b.w	80043a0 <_fwalk_sglue>
 80042ce:	bf00      	nop
 80042d0:	2000000c 	.word	0x2000000c
 80042d4:	080041e1 	.word	0x080041e1
 80042d8:	2000001c 	.word	0x2000001c

080042dc <cleanup_stdio>:
 80042dc:	6841      	ldr	r1, [r0, #4]
 80042de:	4b0c      	ldr	r3, [pc, #48]	@ (8004310 <cleanup_stdio+0x34>)
 80042e0:	b510      	push	{r4, lr}
 80042e2:	4299      	cmp	r1, r3
 80042e4:	4604      	mov	r4, r0
 80042e6:	d001      	beq.n	80042ec <cleanup_stdio+0x10>
 80042e8:	f7ff ff7a 	bl	80041e0 <_fflush_r>
 80042ec:	68a1      	ldr	r1, [r4, #8]
 80042ee:	4b09      	ldr	r3, [pc, #36]	@ (8004314 <cleanup_stdio+0x38>)
 80042f0:	4299      	cmp	r1, r3
 80042f2:	d002      	beq.n	80042fa <cleanup_stdio+0x1e>
 80042f4:	4620      	mov	r0, r4
 80042f6:	f7ff ff73 	bl	80041e0 <_fflush_r>
 80042fa:	68e1      	ldr	r1, [r4, #12]
 80042fc:	4b06      	ldr	r3, [pc, #24]	@ (8004318 <cleanup_stdio+0x3c>)
 80042fe:	4299      	cmp	r1, r3
 8004300:	d004      	beq.n	800430c <cleanup_stdio+0x30>
 8004302:	4620      	mov	r0, r4
 8004304:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004308:	f7ff bf6a 	b.w	80041e0 <_fflush_r>
 800430c:	bd10      	pop	{r4, pc}
 800430e:	bf00      	nop
 8004310:	2001311c 	.word	0x2001311c
 8004314:	20013184 	.word	0x20013184
 8004318:	200131ec 	.word	0x200131ec

0800431c <global_stdio_init.part.0>:
 800431c:	b510      	push	{r4, lr}
 800431e:	4b0b      	ldr	r3, [pc, #44]	@ (800434c <global_stdio_init.part.0+0x30>)
 8004320:	4c0b      	ldr	r4, [pc, #44]	@ (8004350 <global_stdio_init.part.0+0x34>)
 8004322:	4a0c      	ldr	r2, [pc, #48]	@ (8004354 <global_stdio_init.part.0+0x38>)
 8004324:	4620      	mov	r0, r4
 8004326:	601a      	str	r2, [r3, #0]
 8004328:	2104      	movs	r1, #4
 800432a:	2200      	movs	r2, #0
 800432c:	f7ff ff94 	bl	8004258 <std>
 8004330:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8004334:	2201      	movs	r2, #1
 8004336:	2109      	movs	r1, #9
 8004338:	f7ff ff8e 	bl	8004258 <std>
 800433c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8004340:	2202      	movs	r2, #2
 8004342:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004346:	2112      	movs	r1, #18
 8004348:	f7ff bf86 	b.w	8004258 <std>
 800434c:	20013254 	.word	0x20013254
 8004350:	2001311c 	.word	0x2001311c
 8004354:	080042c5 	.word	0x080042c5

08004358 <__sfp_lock_acquire>:
 8004358:	4801      	ldr	r0, [pc, #4]	@ (8004360 <__sfp_lock_acquire+0x8>)
 800435a:	f000 ba08 	b.w	800476e <__retarget_lock_acquire_recursive>
 800435e:	bf00      	nop
 8004360:	2001325d 	.word	0x2001325d

08004364 <__sfp_lock_release>:
 8004364:	4801      	ldr	r0, [pc, #4]	@ (800436c <__sfp_lock_release+0x8>)
 8004366:	f000 ba03 	b.w	8004770 <__retarget_lock_release_recursive>
 800436a:	bf00      	nop
 800436c:	2001325d 	.word	0x2001325d

08004370 <__sinit>:
 8004370:	b510      	push	{r4, lr}
 8004372:	4604      	mov	r4, r0
 8004374:	f7ff fff0 	bl	8004358 <__sfp_lock_acquire>
 8004378:	6a23      	ldr	r3, [r4, #32]
 800437a:	b11b      	cbz	r3, 8004384 <__sinit+0x14>
 800437c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004380:	f7ff bff0 	b.w	8004364 <__sfp_lock_release>
 8004384:	4b04      	ldr	r3, [pc, #16]	@ (8004398 <__sinit+0x28>)
 8004386:	6223      	str	r3, [r4, #32]
 8004388:	4b04      	ldr	r3, [pc, #16]	@ (800439c <__sinit+0x2c>)
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	2b00      	cmp	r3, #0
 800438e:	d1f5      	bne.n	800437c <__sinit+0xc>
 8004390:	f7ff ffc4 	bl	800431c <global_stdio_init.part.0>
 8004394:	e7f2      	b.n	800437c <__sinit+0xc>
 8004396:	bf00      	nop
 8004398:	080042dd 	.word	0x080042dd
 800439c:	20013254 	.word	0x20013254

080043a0 <_fwalk_sglue>:
 80043a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80043a4:	4607      	mov	r7, r0
 80043a6:	4688      	mov	r8, r1
 80043a8:	4614      	mov	r4, r2
 80043aa:	2600      	movs	r6, #0
 80043ac:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80043b0:	f1b9 0901 	subs.w	r9, r9, #1
 80043b4:	d505      	bpl.n	80043c2 <_fwalk_sglue+0x22>
 80043b6:	6824      	ldr	r4, [r4, #0]
 80043b8:	2c00      	cmp	r4, #0
 80043ba:	d1f7      	bne.n	80043ac <_fwalk_sglue+0xc>
 80043bc:	4630      	mov	r0, r6
 80043be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80043c2:	89ab      	ldrh	r3, [r5, #12]
 80043c4:	2b01      	cmp	r3, #1
 80043c6:	d907      	bls.n	80043d8 <_fwalk_sglue+0x38>
 80043c8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80043cc:	3301      	adds	r3, #1
 80043ce:	d003      	beq.n	80043d8 <_fwalk_sglue+0x38>
 80043d0:	4629      	mov	r1, r5
 80043d2:	4638      	mov	r0, r7
 80043d4:	47c0      	blx	r8
 80043d6:	4306      	orrs	r6, r0
 80043d8:	3568      	adds	r5, #104	@ 0x68
 80043da:	e7e9      	b.n	80043b0 <_fwalk_sglue+0x10>

080043dc <iprintf>:
 80043dc:	b40f      	push	{r0, r1, r2, r3}
 80043de:	b507      	push	{r0, r1, r2, lr}
 80043e0:	4906      	ldr	r1, [pc, #24]	@ (80043fc <iprintf+0x20>)
 80043e2:	ab04      	add	r3, sp, #16
 80043e4:	6808      	ldr	r0, [r1, #0]
 80043e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80043ea:	6881      	ldr	r1, [r0, #8]
 80043ec:	9301      	str	r3, [sp, #4]
 80043ee:	f000 faed 	bl	80049cc <_vfiprintf_r>
 80043f2:	b003      	add	sp, #12
 80043f4:	f85d eb04 	ldr.w	lr, [sp], #4
 80043f8:	b004      	add	sp, #16
 80043fa:	4770      	bx	lr
 80043fc:	20000018 	.word	0x20000018

08004400 <putchar>:
 8004400:	4b02      	ldr	r3, [pc, #8]	@ (800440c <putchar+0xc>)
 8004402:	4601      	mov	r1, r0
 8004404:	6818      	ldr	r0, [r3, #0]
 8004406:	6882      	ldr	r2, [r0, #8]
 8004408:	f000 bdeb 	b.w	8004fe2 <_putc_r>
 800440c:	20000018 	.word	0x20000018

08004410 <_puts_r>:
 8004410:	6a03      	ldr	r3, [r0, #32]
 8004412:	b570      	push	{r4, r5, r6, lr}
 8004414:	4605      	mov	r5, r0
 8004416:	460e      	mov	r6, r1
 8004418:	6884      	ldr	r4, [r0, #8]
 800441a:	b90b      	cbnz	r3, 8004420 <_puts_r+0x10>
 800441c:	f7ff ffa8 	bl	8004370 <__sinit>
 8004420:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004422:	07db      	lsls	r3, r3, #31
 8004424:	d405      	bmi.n	8004432 <_puts_r+0x22>
 8004426:	89a3      	ldrh	r3, [r4, #12]
 8004428:	0598      	lsls	r0, r3, #22
 800442a:	d402      	bmi.n	8004432 <_puts_r+0x22>
 800442c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800442e:	f000 f99e 	bl	800476e <__retarget_lock_acquire_recursive>
 8004432:	89a3      	ldrh	r3, [r4, #12]
 8004434:	0719      	lsls	r1, r3, #28
 8004436:	d502      	bpl.n	800443e <_puts_r+0x2e>
 8004438:	6923      	ldr	r3, [r4, #16]
 800443a:	2b00      	cmp	r3, #0
 800443c:	d135      	bne.n	80044aa <_puts_r+0x9a>
 800443e:	4621      	mov	r1, r4
 8004440:	4628      	mov	r0, r5
 8004442:	f000 f8c5 	bl	80045d0 <__swsetup_r>
 8004446:	b380      	cbz	r0, 80044aa <_puts_r+0x9a>
 8004448:	f04f 35ff 	mov.w	r5, #4294967295
 800444c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800444e:	07da      	lsls	r2, r3, #31
 8004450:	d405      	bmi.n	800445e <_puts_r+0x4e>
 8004452:	89a3      	ldrh	r3, [r4, #12]
 8004454:	059b      	lsls	r3, r3, #22
 8004456:	d402      	bmi.n	800445e <_puts_r+0x4e>
 8004458:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800445a:	f000 f989 	bl	8004770 <__retarget_lock_release_recursive>
 800445e:	4628      	mov	r0, r5
 8004460:	bd70      	pop	{r4, r5, r6, pc}
 8004462:	2b00      	cmp	r3, #0
 8004464:	da04      	bge.n	8004470 <_puts_r+0x60>
 8004466:	69a2      	ldr	r2, [r4, #24]
 8004468:	429a      	cmp	r2, r3
 800446a:	dc17      	bgt.n	800449c <_puts_r+0x8c>
 800446c:	290a      	cmp	r1, #10
 800446e:	d015      	beq.n	800449c <_puts_r+0x8c>
 8004470:	6823      	ldr	r3, [r4, #0]
 8004472:	1c5a      	adds	r2, r3, #1
 8004474:	6022      	str	r2, [r4, #0]
 8004476:	7019      	strb	r1, [r3, #0]
 8004478:	68a3      	ldr	r3, [r4, #8]
 800447a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800447e:	3b01      	subs	r3, #1
 8004480:	60a3      	str	r3, [r4, #8]
 8004482:	2900      	cmp	r1, #0
 8004484:	d1ed      	bne.n	8004462 <_puts_r+0x52>
 8004486:	2b00      	cmp	r3, #0
 8004488:	da11      	bge.n	80044ae <_puts_r+0x9e>
 800448a:	4622      	mov	r2, r4
 800448c:	210a      	movs	r1, #10
 800448e:	4628      	mov	r0, r5
 8004490:	f000 f85f 	bl	8004552 <__swbuf_r>
 8004494:	3001      	adds	r0, #1
 8004496:	d0d7      	beq.n	8004448 <_puts_r+0x38>
 8004498:	250a      	movs	r5, #10
 800449a:	e7d7      	b.n	800444c <_puts_r+0x3c>
 800449c:	4622      	mov	r2, r4
 800449e:	4628      	mov	r0, r5
 80044a0:	f000 f857 	bl	8004552 <__swbuf_r>
 80044a4:	3001      	adds	r0, #1
 80044a6:	d1e7      	bne.n	8004478 <_puts_r+0x68>
 80044a8:	e7ce      	b.n	8004448 <_puts_r+0x38>
 80044aa:	3e01      	subs	r6, #1
 80044ac:	e7e4      	b.n	8004478 <_puts_r+0x68>
 80044ae:	6823      	ldr	r3, [r4, #0]
 80044b0:	1c5a      	adds	r2, r3, #1
 80044b2:	6022      	str	r2, [r4, #0]
 80044b4:	220a      	movs	r2, #10
 80044b6:	701a      	strb	r2, [r3, #0]
 80044b8:	e7ee      	b.n	8004498 <_puts_r+0x88>
	...

080044bc <puts>:
 80044bc:	4b02      	ldr	r3, [pc, #8]	@ (80044c8 <puts+0xc>)
 80044be:	4601      	mov	r1, r0
 80044c0:	6818      	ldr	r0, [r3, #0]
 80044c2:	f7ff bfa5 	b.w	8004410 <_puts_r>
 80044c6:	bf00      	nop
 80044c8:	20000018 	.word	0x20000018

080044cc <__sread>:
 80044cc:	b510      	push	{r4, lr}
 80044ce:	460c      	mov	r4, r1
 80044d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80044d4:	f000 f8fc 	bl	80046d0 <_read_r>
 80044d8:	2800      	cmp	r0, #0
 80044da:	bfab      	itete	ge
 80044dc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80044de:	89a3      	ldrhlt	r3, [r4, #12]
 80044e0:	181b      	addge	r3, r3, r0
 80044e2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80044e6:	bfac      	ite	ge
 80044e8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80044ea:	81a3      	strhlt	r3, [r4, #12]
 80044ec:	bd10      	pop	{r4, pc}

080044ee <__swrite>:
 80044ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044f2:	461f      	mov	r7, r3
 80044f4:	898b      	ldrh	r3, [r1, #12]
 80044f6:	4605      	mov	r5, r0
 80044f8:	05db      	lsls	r3, r3, #23
 80044fa:	460c      	mov	r4, r1
 80044fc:	4616      	mov	r6, r2
 80044fe:	d505      	bpl.n	800450c <__swrite+0x1e>
 8004500:	2302      	movs	r3, #2
 8004502:	2200      	movs	r2, #0
 8004504:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004508:	f000 f8d0 	bl	80046ac <_lseek_r>
 800450c:	89a3      	ldrh	r3, [r4, #12]
 800450e:	4632      	mov	r2, r6
 8004510:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004514:	81a3      	strh	r3, [r4, #12]
 8004516:	4628      	mov	r0, r5
 8004518:	463b      	mov	r3, r7
 800451a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800451e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004522:	f000 b8e7 	b.w	80046f4 <_write_r>

08004526 <__sseek>:
 8004526:	b510      	push	{r4, lr}
 8004528:	460c      	mov	r4, r1
 800452a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800452e:	f000 f8bd 	bl	80046ac <_lseek_r>
 8004532:	1c43      	adds	r3, r0, #1
 8004534:	89a3      	ldrh	r3, [r4, #12]
 8004536:	bf15      	itete	ne
 8004538:	6560      	strne	r0, [r4, #84]	@ 0x54
 800453a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800453e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8004542:	81a3      	strheq	r3, [r4, #12]
 8004544:	bf18      	it	ne
 8004546:	81a3      	strhne	r3, [r4, #12]
 8004548:	bd10      	pop	{r4, pc}

0800454a <__sclose>:
 800454a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800454e:	f000 b89d 	b.w	800468c <_close_r>

08004552 <__swbuf_r>:
 8004552:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004554:	460e      	mov	r6, r1
 8004556:	4614      	mov	r4, r2
 8004558:	4605      	mov	r5, r0
 800455a:	b118      	cbz	r0, 8004564 <__swbuf_r+0x12>
 800455c:	6a03      	ldr	r3, [r0, #32]
 800455e:	b90b      	cbnz	r3, 8004564 <__swbuf_r+0x12>
 8004560:	f7ff ff06 	bl	8004370 <__sinit>
 8004564:	69a3      	ldr	r3, [r4, #24]
 8004566:	60a3      	str	r3, [r4, #8]
 8004568:	89a3      	ldrh	r3, [r4, #12]
 800456a:	071a      	lsls	r2, r3, #28
 800456c:	d501      	bpl.n	8004572 <__swbuf_r+0x20>
 800456e:	6923      	ldr	r3, [r4, #16]
 8004570:	b943      	cbnz	r3, 8004584 <__swbuf_r+0x32>
 8004572:	4621      	mov	r1, r4
 8004574:	4628      	mov	r0, r5
 8004576:	f000 f82b 	bl	80045d0 <__swsetup_r>
 800457a:	b118      	cbz	r0, 8004584 <__swbuf_r+0x32>
 800457c:	f04f 37ff 	mov.w	r7, #4294967295
 8004580:	4638      	mov	r0, r7
 8004582:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004584:	6823      	ldr	r3, [r4, #0]
 8004586:	6922      	ldr	r2, [r4, #16]
 8004588:	b2f6      	uxtb	r6, r6
 800458a:	1a98      	subs	r0, r3, r2
 800458c:	6963      	ldr	r3, [r4, #20]
 800458e:	4637      	mov	r7, r6
 8004590:	4283      	cmp	r3, r0
 8004592:	dc05      	bgt.n	80045a0 <__swbuf_r+0x4e>
 8004594:	4621      	mov	r1, r4
 8004596:	4628      	mov	r0, r5
 8004598:	f7ff fe22 	bl	80041e0 <_fflush_r>
 800459c:	2800      	cmp	r0, #0
 800459e:	d1ed      	bne.n	800457c <__swbuf_r+0x2a>
 80045a0:	68a3      	ldr	r3, [r4, #8]
 80045a2:	3b01      	subs	r3, #1
 80045a4:	60a3      	str	r3, [r4, #8]
 80045a6:	6823      	ldr	r3, [r4, #0]
 80045a8:	1c5a      	adds	r2, r3, #1
 80045aa:	6022      	str	r2, [r4, #0]
 80045ac:	701e      	strb	r6, [r3, #0]
 80045ae:	6962      	ldr	r2, [r4, #20]
 80045b0:	1c43      	adds	r3, r0, #1
 80045b2:	429a      	cmp	r2, r3
 80045b4:	d004      	beq.n	80045c0 <__swbuf_r+0x6e>
 80045b6:	89a3      	ldrh	r3, [r4, #12]
 80045b8:	07db      	lsls	r3, r3, #31
 80045ba:	d5e1      	bpl.n	8004580 <__swbuf_r+0x2e>
 80045bc:	2e0a      	cmp	r6, #10
 80045be:	d1df      	bne.n	8004580 <__swbuf_r+0x2e>
 80045c0:	4621      	mov	r1, r4
 80045c2:	4628      	mov	r0, r5
 80045c4:	f7ff fe0c 	bl	80041e0 <_fflush_r>
 80045c8:	2800      	cmp	r0, #0
 80045ca:	d0d9      	beq.n	8004580 <__swbuf_r+0x2e>
 80045cc:	e7d6      	b.n	800457c <__swbuf_r+0x2a>
	...

080045d0 <__swsetup_r>:
 80045d0:	b538      	push	{r3, r4, r5, lr}
 80045d2:	4b29      	ldr	r3, [pc, #164]	@ (8004678 <__swsetup_r+0xa8>)
 80045d4:	4605      	mov	r5, r0
 80045d6:	6818      	ldr	r0, [r3, #0]
 80045d8:	460c      	mov	r4, r1
 80045da:	b118      	cbz	r0, 80045e4 <__swsetup_r+0x14>
 80045dc:	6a03      	ldr	r3, [r0, #32]
 80045de:	b90b      	cbnz	r3, 80045e4 <__swsetup_r+0x14>
 80045e0:	f7ff fec6 	bl	8004370 <__sinit>
 80045e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80045e8:	0719      	lsls	r1, r3, #28
 80045ea:	d422      	bmi.n	8004632 <__swsetup_r+0x62>
 80045ec:	06da      	lsls	r2, r3, #27
 80045ee:	d407      	bmi.n	8004600 <__swsetup_r+0x30>
 80045f0:	2209      	movs	r2, #9
 80045f2:	602a      	str	r2, [r5, #0]
 80045f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80045f8:	f04f 30ff 	mov.w	r0, #4294967295
 80045fc:	81a3      	strh	r3, [r4, #12]
 80045fe:	e033      	b.n	8004668 <__swsetup_r+0x98>
 8004600:	0758      	lsls	r0, r3, #29
 8004602:	d512      	bpl.n	800462a <__swsetup_r+0x5a>
 8004604:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004606:	b141      	cbz	r1, 800461a <__swsetup_r+0x4a>
 8004608:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800460c:	4299      	cmp	r1, r3
 800460e:	d002      	beq.n	8004616 <__swsetup_r+0x46>
 8004610:	4628      	mov	r0, r5
 8004612:	f000 f8bd 	bl	8004790 <_free_r>
 8004616:	2300      	movs	r3, #0
 8004618:	6363      	str	r3, [r4, #52]	@ 0x34
 800461a:	89a3      	ldrh	r3, [r4, #12]
 800461c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004620:	81a3      	strh	r3, [r4, #12]
 8004622:	2300      	movs	r3, #0
 8004624:	6063      	str	r3, [r4, #4]
 8004626:	6923      	ldr	r3, [r4, #16]
 8004628:	6023      	str	r3, [r4, #0]
 800462a:	89a3      	ldrh	r3, [r4, #12]
 800462c:	f043 0308 	orr.w	r3, r3, #8
 8004630:	81a3      	strh	r3, [r4, #12]
 8004632:	6923      	ldr	r3, [r4, #16]
 8004634:	b94b      	cbnz	r3, 800464a <__swsetup_r+0x7a>
 8004636:	89a3      	ldrh	r3, [r4, #12]
 8004638:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800463c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004640:	d003      	beq.n	800464a <__swsetup_r+0x7a>
 8004642:	4621      	mov	r1, r4
 8004644:	4628      	mov	r0, r5
 8004646:	f000 fc90 	bl	8004f6a <__smakebuf_r>
 800464a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800464e:	f013 0201 	ands.w	r2, r3, #1
 8004652:	d00a      	beq.n	800466a <__swsetup_r+0x9a>
 8004654:	2200      	movs	r2, #0
 8004656:	60a2      	str	r2, [r4, #8]
 8004658:	6962      	ldr	r2, [r4, #20]
 800465a:	4252      	negs	r2, r2
 800465c:	61a2      	str	r2, [r4, #24]
 800465e:	6922      	ldr	r2, [r4, #16]
 8004660:	b942      	cbnz	r2, 8004674 <__swsetup_r+0xa4>
 8004662:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8004666:	d1c5      	bne.n	80045f4 <__swsetup_r+0x24>
 8004668:	bd38      	pop	{r3, r4, r5, pc}
 800466a:	0799      	lsls	r1, r3, #30
 800466c:	bf58      	it	pl
 800466e:	6962      	ldrpl	r2, [r4, #20]
 8004670:	60a2      	str	r2, [r4, #8]
 8004672:	e7f4      	b.n	800465e <__swsetup_r+0x8e>
 8004674:	2000      	movs	r0, #0
 8004676:	e7f7      	b.n	8004668 <__swsetup_r+0x98>
 8004678:	20000018 	.word	0x20000018

0800467c <memset>:
 800467c:	4603      	mov	r3, r0
 800467e:	4402      	add	r2, r0
 8004680:	4293      	cmp	r3, r2
 8004682:	d100      	bne.n	8004686 <memset+0xa>
 8004684:	4770      	bx	lr
 8004686:	f803 1b01 	strb.w	r1, [r3], #1
 800468a:	e7f9      	b.n	8004680 <memset+0x4>

0800468c <_close_r>:
 800468c:	b538      	push	{r3, r4, r5, lr}
 800468e:	2300      	movs	r3, #0
 8004690:	4d05      	ldr	r5, [pc, #20]	@ (80046a8 <_close_r+0x1c>)
 8004692:	4604      	mov	r4, r0
 8004694:	4608      	mov	r0, r1
 8004696:	602b      	str	r3, [r5, #0]
 8004698:	f7fd fa25 	bl	8001ae6 <_close>
 800469c:	1c43      	adds	r3, r0, #1
 800469e:	d102      	bne.n	80046a6 <_close_r+0x1a>
 80046a0:	682b      	ldr	r3, [r5, #0]
 80046a2:	b103      	cbz	r3, 80046a6 <_close_r+0x1a>
 80046a4:	6023      	str	r3, [r4, #0]
 80046a6:	bd38      	pop	{r3, r4, r5, pc}
 80046a8:	20013258 	.word	0x20013258

080046ac <_lseek_r>:
 80046ac:	b538      	push	{r3, r4, r5, lr}
 80046ae:	4604      	mov	r4, r0
 80046b0:	4608      	mov	r0, r1
 80046b2:	4611      	mov	r1, r2
 80046b4:	2200      	movs	r2, #0
 80046b6:	4d05      	ldr	r5, [pc, #20]	@ (80046cc <_lseek_r+0x20>)
 80046b8:	602a      	str	r2, [r5, #0]
 80046ba:	461a      	mov	r2, r3
 80046bc:	f7fd fa37 	bl	8001b2e <_lseek>
 80046c0:	1c43      	adds	r3, r0, #1
 80046c2:	d102      	bne.n	80046ca <_lseek_r+0x1e>
 80046c4:	682b      	ldr	r3, [r5, #0]
 80046c6:	b103      	cbz	r3, 80046ca <_lseek_r+0x1e>
 80046c8:	6023      	str	r3, [r4, #0]
 80046ca:	bd38      	pop	{r3, r4, r5, pc}
 80046cc:	20013258 	.word	0x20013258

080046d0 <_read_r>:
 80046d0:	b538      	push	{r3, r4, r5, lr}
 80046d2:	4604      	mov	r4, r0
 80046d4:	4608      	mov	r0, r1
 80046d6:	4611      	mov	r1, r2
 80046d8:	2200      	movs	r2, #0
 80046da:	4d05      	ldr	r5, [pc, #20]	@ (80046f0 <_read_r+0x20>)
 80046dc:	602a      	str	r2, [r5, #0]
 80046de:	461a      	mov	r2, r3
 80046e0:	f7fd f9c8 	bl	8001a74 <_read>
 80046e4:	1c43      	adds	r3, r0, #1
 80046e6:	d102      	bne.n	80046ee <_read_r+0x1e>
 80046e8:	682b      	ldr	r3, [r5, #0]
 80046ea:	b103      	cbz	r3, 80046ee <_read_r+0x1e>
 80046ec:	6023      	str	r3, [r4, #0]
 80046ee:	bd38      	pop	{r3, r4, r5, pc}
 80046f0:	20013258 	.word	0x20013258

080046f4 <_write_r>:
 80046f4:	b538      	push	{r3, r4, r5, lr}
 80046f6:	4604      	mov	r4, r0
 80046f8:	4608      	mov	r0, r1
 80046fa:	4611      	mov	r1, r2
 80046fc:	2200      	movs	r2, #0
 80046fe:	4d05      	ldr	r5, [pc, #20]	@ (8004714 <_write_r+0x20>)
 8004700:	602a      	str	r2, [r5, #0]
 8004702:	461a      	mov	r2, r3
 8004704:	f7fd f9d3 	bl	8001aae <_write>
 8004708:	1c43      	adds	r3, r0, #1
 800470a:	d102      	bne.n	8004712 <_write_r+0x1e>
 800470c:	682b      	ldr	r3, [r5, #0]
 800470e:	b103      	cbz	r3, 8004712 <_write_r+0x1e>
 8004710:	6023      	str	r3, [r4, #0]
 8004712:	bd38      	pop	{r3, r4, r5, pc}
 8004714:	20013258 	.word	0x20013258

08004718 <__errno>:
 8004718:	4b01      	ldr	r3, [pc, #4]	@ (8004720 <__errno+0x8>)
 800471a:	6818      	ldr	r0, [r3, #0]
 800471c:	4770      	bx	lr
 800471e:	bf00      	nop
 8004720:	20000018 	.word	0x20000018

08004724 <__libc_init_array>:
 8004724:	b570      	push	{r4, r5, r6, lr}
 8004726:	2600      	movs	r6, #0
 8004728:	4d0c      	ldr	r5, [pc, #48]	@ (800475c <__libc_init_array+0x38>)
 800472a:	4c0d      	ldr	r4, [pc, #52]	@ (8004760 <__libc_init_array+0x3c>)
 800472c:	1b64      	subs	r4, r4, r5
 800472e:	10a4      	asrs	r4, r4, #2
 8004730:	42a6      	cmp	r6, r4
 8004732:	d109      	bne.n	8004748 <__libc_init_array+0x24>
 8004734:	f000 fcca 	bl	80050cc <_init>
 8004738:	2600      	movs	r6, #0
 800473a:	4d0a      	ldr	r5, [pc, #40]	@ (8004764 <__libc_init_array+0x40>)
 800473c:	4c0a      	ldr	r4, [pc, #40]	@ (8004768 <__libc_init_array+0x44>)
 800473e:	1b64      	subs	r4, r4, r5
 8004740:	10a4      	asrs	r4, r4, #2
 8004742:	42a6      	cmp	r6, r4
 8004744:	d105      	bne.n	8004752 <__libc_init_array+0x2e>
 8004746:	bd70      	pop	{r4, r5, r6, pc}
 8004748:	f855 3b04 	ldr.w	r3, [r5], #4
 800474c:	4798      	blx	r3
 800474e:	3601      	adds	r6, #1
 8004750:	e7ee      	b.n	8004730 <__libc_init_array+0xc>
 8004752:	f855 3b04 	ldr.w	r3, [r5], #4
 8004756:	4798      	blx	r3
 8004758:	3601      	adds	r6, #1
 800475a:	e7f2      	b.n	8004742 <__libc_init_array+0x1e>
 800475c:	08005520 	.word	0x08005520
 8004760:	08005520 	.word	0x08005520
 8004764:	08005520 	.word	0x08005520
 8004768:	08005524 	.word	0x08005524

0800476c <__retarget_lock_init_recursive>:
 800476c:	4770      	bx	lr

0800476e <__retarget_lock_acquire_recursive>:
 800476e:	4770      	bx	lr

08004770 <__retarget_lock_release_recursive>:
 8004770:	4770      	bx	lr

08004772 <memcpy>:
 8004772:	440a      	add	r2, r1
 8004774:	4291      	cmp	r1, r2
 8004776:	f100 33ff 	add.w	r3, r0, #4294967295
 800477a:	d100      	bne.n	800477e <memcpy+0xc>
 800477c:	4770      	bx	lr
 800477e:	b510      	push	{r4, lr}
 8004780:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004784:	4291      	cmp	r1, r2
 8004786:	f803 4f01 	strb.w	r4, [r3, #1]!
 800478a:	d1f9      	bne.n	8004780 <memcpy+0xe>
 800478c:	bd10      	pop	{r4, pc}
	...

08004790 <_free_r>:
 8004790:	b538      	push	{r3, r4, r5, lr}
 8004792:	4605      	mov	r5, r0
 8004794:	2900      	cmp	r1, #0
 8004796:	d040      	beq.n	800481a <_free_r+0x8a>
 8004798:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800479c:	1f0c      	subs	r4, r1, #4
 800479e:	2b00      	cmp	r3, #0
 80047a0:	bfb8      	it	lt
 80047a2:	18e4      	addlt	r4, r4, r3
 80047a4:	f000 f8de 	bl	8004964 <__malloc_lock>
 80047a8:	4a1c      	ldr	r2, [pc, #112]	@ (800481c <_free_r+0x8c>)
 80047aa:	6813      	ldr	r3, [r2, #0]
 80047ac:	b933      	cbnz	r3, 80047bc <_free_r+0x2c>
 80047ae:	6063      	str	r3, [r4, #4]
 80047b0:	6014      	str	r4, [r2, #0]
 80047b2:	4628      	mov	r0, r5
 80047b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80047b8:	f000 b8da 	b.w	8004970 <__malloc_unlock>
 80047bc:	42a3      	cmp	r3, r4
 80047be:	d908      	bls.n	80047d2 <_free_r+0x42>
 80047c0:	6820      	ldr	r0, [r4, #0]
 80047c2:	1821      	adds	r1, r4, r0
 80047c4:	428b      	cmp	r3, r1
 80047c6:	bf01      	itttt	eq
 80047c8:	6819      	ldreq	r1, [r3, #0]
 80047ca:	685b      	ldreq	r3, [r3, #4]
 80047cc:	1809      	addeq	r1, r1, r0
 80047ce:	6021      	streq	r1, [r4, #0]
 80047d0:	e7ed      	b.n	80047ae <_free_r+0x1e>
 80047d2:	461a      	mov	r2, r3
 80047d4:	685b      	ldr	r3, [r3, #4]
 80047d6:	b10b      	cbz	r3, 80047dc <_free_r+0x4c>
 80047d8:	42a3      	cmp	r3, r4
 80047da:	d9fa      	bls.n	80047d2 <_free_r+0x42>
 80047dc:	6811      	ldr	r1, [r2, #0]
 80047de:	1850      	adds	r0, r2, r1
 80047e0:	42a0      	cmp	r0, r4
 80047e2:	d10b      	bne.n	80047fc <_free_r+0x6c>
 80047e4:	6820      	ldr	r0, [r4, #0]
 80047e6:	4401      	add	r1, r0
 80047e8:	1850      	adds	r0, r2, r1
 80047ea:	4283      	cmp	r3, r0
 80047ec:	6011      	str	r1, [r2, #0]
 80047ee:	d1e0      	bne.n	80047b2 <_free_r+0x22>
 80047f0:	6818      	ldr	r0, [r3, #0]
 80047f2:	685b      	ldr	r3, [r3, #4]
 80047f4:	4408      	add	r0, r1
 80047f6:	6010      	str	r0, [r2, #0]
 80047f8:	6053      	str	r3, [r2, #4]
 80047fa:	e7da      	b.n	80047b2 <_free_r+0x22>
 80047fc:	d902      	bls.n	8004804 <_free_r+0x74>
 80047fe:	230c      	movs	r3, #12
 8004800:	602b      	str	r3, [r5, #0]
 8004802:	e7d6      	b.n	80047b2 <_free_r+0x22>
 8004804:	6820      	ldr	r0, [r4, #0]
 8004806:	1821      	adds	r1, r4, r0
 8004808:	428b      	cmp	r3, r1
 800480a:	bf01      	itttt	eq
 800480c:	6819      	ldreq	r1, [r3, #0]
 800480e:	685b      	ldreq	r3, [r3, #4]
 8004810:	1809      	addeq	r1, r1, r0
 8004812:	6021      	streq	r1, [r4, #0]
 8004814:	6063      	str	r3, [r4, #4]
 8004816:	6054      	str	r4, [r2, #4]
 8004818:	e7cb      	b.n	80047b2 <_free_r+0x22>
 800481a:	bd38      	pop	{r3, r4, r5, pc}
 800481c:	20013264 	.word	0x20013264

08004820 <sbrk_aligned>:
 8004820:	b570      	push	{r4, r5, r6, lr}
 8004822:	4e0f      	ldr	r6, [pc, #60]	@ (8004860 <sbrk_aligned+0x40>)
 8004824:	460c      	mov	r4, r1
 8004826:	6831      	ldr	r1, [r6, #0]
 8004828:	4605      	mov	r5, r0
 800482a:	b911      	cbnz	r1, 8004832 <sbrk_aligned+0x12>
 800482c:	f000 fc30 	bl	8005090 <_sbrk_r>
 8004830:	6030      	str	r0, [r6, #0]
 8004832:	4621      	mov	r1, r4
 8004834:	4628      	mov	r0, r5
 8004836:	f000 fc2b 	bl	8005090 <_sbrk_r>
 800483a:	1c43      	adds	r3, r0, #1
 800483c:	d103      	bne.n	8004846 <sbrk_aligned+0x26>
 800483e:	f04f 34ff 	mov.w	r4, #4294967295
 8004842:	4620      	mov	r0, r4
 8004844:	bd70      	pop	{r4, r5, r6, pc}
 8004846:	1cc4      	adds	r4, r0, #3
 8004848:	f024 0403 	bic.w	r4, r4, #3
 800484c:	42a0      	cmp	r0, r4
 800484e:	d0f8      	beq.n	8004842 <sbrk_aligned+0x22>
 8004850:	1a21      	subs	r1, r4, r0
 8004852:	4628      	mov	r0, r5
 8004854:	f000 fc1c 	bl	8005090 <_sbrk_r>
 8004858:	3001      	adds	r0, #1
 800485a:	d1f2      	bne.n	8004842 <sbrk_aligned+0x22>
 800485c:	e7ef      	b.n	800483e <sbrk_aligned+0x1e>
 800485e:	bf00      	nop
 8004860:	20013260 	.word	0x20013260

08004864 <_malloc_r>:
 8004864:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004868:	1ccd      	adds	r5, r1, #3
 800486a:	f025 0503 	bic.w	r5, r5, #3
 800486e:	3508      	adds	r5, #8
 8004870:	2d0c      	cmp	r5, #12
 8004872:	bf38      	it	cc
 8004874:	250c      	movcc	r5, #12
 8004876:	2d00      	cmp	r5, #0
 8004878:	4606      	mov	r6, r0
 800487a:	db01      	blt.n	8004880 <_malloc_r+0x1c>
 800487c:	42a9      	cmp	r1, r5
 800487e:	d904      	bls.n	800488a <_malloc_r+0x26>
 8004880:	230c      	movs	r3, #12
 8004882:	6033      	str	r3, [r6, #0]
 8004884:	2000      	movs	r0, #0
 8004886:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800488a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004960 <_malloc_r+0xfc>
 800488e:	f000 f869 	bl	8004964 <__malloc_lock>
 8004892:	f8d8 3000 	ldr.w	r3, [r8]
 8004896:	461c      	mov	r4, r3
 8004898:	bb44      	cbnz	r4, 80048ec <_malloc_r+0x88>
 800489a:	4629      	mov	r1, r5
 800489c:	4630      	mov	r0, r6
 800489e:	f7ff ffbf 	bl	8004820 <sbrk_aligned>
 80048a2:	1c43      	adds	r3, r0, #1
 80048a4:	4604      	mov	r4, r0
 80048a6:	d158      	bne.n	800495a <_malloc_r+0xf6>
 80048a8:	f8d8 4000 	ldr.w	r4, [r8]
 80048ac:	4627      	mov	r7, r4
 80048ae:	2f00      	cmp	r7, #0
 80048b0:	d143      	bne.n	800493a <_malloc_r+0xd6>
 80048b2:	2c00      	cmp	r4, #0
 80048b4:	d04b      	beq.n	800494e <_malloc_r+0xea>
 80048b6:	6823      	ldr	r3, [r4, #0]
 80048b8:	4639      	mov	r1, r7
 80048ba:	4630      	mov	r0, r6
 80048bc:	eb04 0903 	add.w	r9, r4, r3
 80048c0:	f000 fbe6 	bl	8005090 <_sbrk_r>
 80048c4:	4581      	cmp	r9, r0
 80048c6:	d142      	bne.n	800494e <_malloc_r+0xea>
 80048c8:	6821      	ldr	r1, [r4, #0]
 80048ca:	4630      	mov	r0, r6
 80048cc:	1a6d      	subs	r5, r5, r1
 80048ce:	4629      	mov	r1, r5
 80048d0:	f7ff ffa6 	bl	8004820 <sbrk_aligned>
 80048d4:	3001      	adds	r0, #1
 80048d6:	d03a      	beq.n	800494e <_malloc_r+0xea>
 80048d8:	6823      	ldr	r3, [r4, #0]
 80048da:	442b      	add	r3, r5
 80048dc:	6023      	str	r3, [r4, #0]
 80048de:	f8d8 3000 	ldr.w	r3, [r8]
 80048e2:	685a      	ldr	r2, [r3, #4]
 80048e4:	bb62      	cbnz	r2, 8004940 <_malloc_r+0xdc>
 80048e6:	f8c8 7000 	str.w	r7, [r8]
 80048ea:	e00f      	b.n	800490c <_malloc_r+0xa8>
 80048ec:	6822      	ldr	r2, [r4, #0]
 80048ee:	1b52      	subs	r2, r2, r5
 80048f0:	d420      	bmi.n	8004934 <_malloc_r+0xd0>
 80048f2:	2a0b      	cmp	r2, #11
 80048f4:	d917      	bls.n	8004926 <_malloc_r+0xc2>
 80048f6:	1961      	adds	r1, r4, r5
 80048f8:	42a3      	cmp	r3, r4
 80048fa:	6025      	str	r5, [r4, #0]
 80048fc:	bf18      	it	ne
 80048fe:	6059      	strne	r1, [r3, #4]
 8004900:	6863      	ldr	r3, [r4, #4]
 8004902:	bf08      	it	eq
 8004904:	f8c8 1000 	streq.w	r1, [r8]
 8004908:	5162      	str	r2, [r4, r5]
 800490a:	604b      	str	r3, [r1, #4]
 800490c:	4630      	mov	r0, r6
 800490e:	f000 f82f 	bl	8004970 <__malloc_unlock>
 8004912:	f104 000b 	add.w	r0, r4, #11
 8004916:	1d23      	adds	r3, r4, #4
 8004918:	f020 0007 	bic.w	r0, r0, #7
 800491c:	1ac2      	subs	r2, r0, r3
 800491e:	bf1c      	itt	ne
 8004920:	1a1b      	subne	r3, r3, r0
 8004922:	50a3      	strne	r3, [r4, r2]
 8004924:	e7af      	b.n	8004886 <_malloc_r+0x22>
 8004926:	6862      	ldr	r2, [r4, #4]
 8004928:	42a3      	cmp	r3, r4
 800492a:	bf0c      	ite	eq
 800492c:	f8c8 2000 	streq.w	r2, [r8]
 8004930:	605a      	strne	r2, [r3, #4]
 8004932:	e7eb      	b.n	800490c <_malloc_r+0xa8>
 8004934:	4623      	mov	r3, r4
 8004936:	6864      	ldr	r4, [r4, #4]
 8004938:	e7ae      	b.n	8004898 <_malloc_r+0x34>
 800493a:	463c      	mov	r4, r7
 800493c:	687f      	ldr	r7, [r7, #4]
 800493e:	e7b6      	b.n	80048ae <_malloc_r+0x4a>
 8004940:	461a      	mov	r2, r3
 8004942:	685b      	ldr	r3, [r3, #4]
 8004944:	42a3      	cmp	r3, r4
 8004946:	d1fb      	bne.n	8004940 <_malloc_r+0xdc>
 8004948:	2300      	movs	r3, #0
 800494a:	6053      	str	r3, [r2, #4]
 800494c:	e7de      	b.n	800490c <_malloc_r+0xa8>
 800494e:	230c      	movs	r3, #12
 8004950:	4630      	mov	r0, r6
 8004952:	6033      	str	r3, [r6, #0]
 8004954:	f000 f80c 	bl	8004970 <__malloc_unlock>
 8004958:	e794      	b.n	8004884 <_malloc_r+0x20>
 800495a:	6005      	str	r5, [r0, #0]
 800495c:	e7d6      	b.n	800490c <_malloc_r+0xa8>
 800495e:	bf00      	nop
 8004960:	20013264 	.word	0x20013264

08004964 <__malloc_lock>:
 8004964:	4801      	ldr	r0, [pc, #4]	@ (800496c <__malloc_lock+0x8>)
 8004966:	f7ff bf02 	b.w	800476e <__retarget_lock_acquire_recursive>
 800496a:	bf00      	nop
 800496c:	2001325c 	.word	0x2001325c

08004970 <__malloc_unlock>:
 8004970:	4801      	ldr	r0, [pc, #4]	@ (8004978 <__malloc_unlock+0x8>)
 8004972:	f7ff befd 	b.w	8004770 <__retarget_lock_release_recursive>
 8004976:	bf00      	nop
 8004978:	2001325c 	.word	0x2001325c

0800497c <__sfputc_r>:
 800497c:	6893      	ldr	r3, [r2, #8]
 800497e:	b410      	push	{r4}
 8004980:	3b01      	subs	r3, #1
 8004982:	2b00      	cmp	r3, #0
 8004984:	6093      	str	r3, [r2, #8]
 8004986:	da07      	bge.n	8004998 <__sfputc_r+0x1c>
 8004988:	6994      	ldr	r4, [r2, #24]
 800498a:	42a3      	cmp	r3, r4
 800498c:	db01      	blt.n	8004992 <__sfputc_r+0x16>
 800498e:	290a      	cmp	r1, #10
 8004990:	d102      	bne.n	8004998 <__sfputc_r+0x1c>
 8004992:	bc10      	pop	{r4}
 8004994:	f7ff bddd 	b.w	8004552 <__swbuf_r>
 8004998:	6813      	ldr	r3, [r2, #0]
 800499a:	1c58      	adds	r0, r3, #1
 800499c:	6010      	str	r0, [r2, #0]
 800499e:	7019      	strb	r1, [r3, #0]
 80049a0:	4608      	mov	r0, r1
 80049a2:	bc10      	pop	{r4}
 80049a4:	4770      	bx	lr

080049a6 <__sfputs_r>:
 80049a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049a8:	4606      	mov	r6, r0
 80049aa:	460f      	mov	r7, r1
 80049ac:	4614      	mov	r4, r2
 80049ae:	18d5      	adds	r5, r2, r3
 80049b0:	42ac      	cmp	r4, r5
 80049b2:	d101      	bne.n	80049b8 <__sfputs_r+0x12>
 80049b4:	2000      	movs	r0, #0
 80049b6:	e007      	b.n	80049c8 <__sfputs_r+0x22>
 80049b8:	463a      	mov	r2, r7
 80049ba:	4630      	mov	r0, r6
 80049bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80049c0:	f7ff ffdc 	bl	800497c <__sfputc_r>
 80049c4:	1c43      	adds	r3, r0, #1
 80049c6:	d1f3      	bne.n	80049b0 <__sfputs_r+0xa>
 80049c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080049cc <_vfiprintf_r>:
 80049cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049d0:	460d      	mov	r5, r1
 80049d2:	4614      	mov	r4, r2
 80049d4:	4698      	mov	r8, r3
 80049d6:	4606      	mov	r6, r0
 80049d8:	b09d      	sub	sp, #116	@ 0x74
 80049da:	b118      	cbz	r0, 80049e4 <_vfiprintf_r+0x18>
 80049dc:	6a03      	ldr	r3, [r0, #32]
 80049de:	b90b      	cbnz	r3, 80049e4 <_vfiprintf_r+0x18>
 80049e0:	f7ff fcc6 	bl	8004370 <__sinit>
 80049e4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80049e6:	07d9      	lsls	r1, r3, #31
 80049e8:	d405      	bmi.n	80049f6 <_vfiprintf_r+0x2a>
 80049ea:	89ab      	ldrh	r3, [r5, #12]
 80049ec:	059a      	lsls	r2, r3, #22
 80049ee:	d402      	bmi.n	80049f6 <_vfiprintf_r+0x2a>
 80049f0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80049f2:	f7ff febc 	bl	800476e <__retarget_lock_acquire_recursive>
 80049f6:	89ab      	ldrh	r3, [r5, #12]
 80049f8:	071b      	lsls	r3, r3, #28
 80049fa:	d501      	bpl.n	8004a00 <_vfiprintf_r+0x34>
 80049fc:	692b      	ldr	r3, [r5, #16]
 80049fe:	b99b      	cbnz	r3, 8004a28 <_vfiprintf_r+0x5c>
 8004a00:	4629      	mov	r1, r5
 8004a02:	4630      	mov	r0, r6
 8004a04:	f7ff fde4 	bl	80045d0 <__swsetup_r>
 8004a08:	b170      	cbz	r0, 8004a28 <_vfiprintf_r+0x5c>
 8004a0a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004a0c:	07dc      	lsls	r4, r3, #31
 8004a0e:	d504      	bpl.n	8004a1a <_vfiprintf_r+0x4e>
 8004a10:	f04f 30ff 	mov.w	r0, #4294967295
 8004a14:	b01d      	add	sp, #116	@ 0x74
 8004a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a1a:	89ab      	ldrh	r3, [r5, #12]
 8004a1c:	0598      	lsls	r0, r3, #22
 8004a1e:	d4f7      	bmi.n	8004a10 <_vfiprintf_r+0x44>
 8004a20:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004a22:	f7ff fea5 	bl	8004770 <__retarget_lock_release_recursive>
 8004a26:	e7f3      	b.n	8004a10 <_vfiprintf_r+0x44>
 8004a28:	2300      	movs	r3, #0
 8004a2a:	9309      	str	r3, [sp, #36]	@ 0x24
 8004a2c:	2320      	movs	r3, #32
 8004a2e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004a32:	2330      	movs	r3, #48	@ 0x30
 8004a34:	f04f 0901 	mov.w	r9, #1
 8004a38:	f8cd 800c 	str.w	r8, [sp, #12]
 8004a3c:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8004be8 <_vfiprintf_r+0x21c>
 8004a40:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004a44:	4623      	mov	r3, r4
 8004a46:	469a      	mov	sl, r3
 8004a48:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004a4c:	b10a      	cbz	r2, 8004a52 <_vfiprintf_r+0x86>
 8004a4e:	2a25      	cmp	r2, #37	@ 0x25
 8004a50:	d1f9      	bne.n	8004a46 <_vfiprintf_r+0x7a>
 8004a52:	ebba 0b04 	subs.w	fp, sl, r4
 8004a56:	d00b      	beq.n	8004a70 <_vfiprintf_r+0xa4>
 8004a58:	465b      	mov	r3, fp
 8004a5a:	4622      	mov	r2, r4
 8004a5c:	4629      	mov	r1, r5
 8004a5e:	4630      	mov	r0, r6
 8004a60:	f7ff ffa1 	bl	80049a6 <__sfputs_r>
 8004a64:	3001      	adds	r0, #1
 8004a66:	f000 80a7 	beq.w	8004bb8 <_vfiprintf_r+0x1ec>
 8004a6a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004a6c:	445a      	add	r2, fp
 8004a6e:	9209      	str	r2, [sp, #36]	@ 0x24
 8004a70:	f89a 3000 	ldrb.w	r3, [sl]
 8004a74:	2b00      	cmp	r3, #0
 8004a76:	f000 809f 	beq.w	8004bb8 <_vfiprintf_r+0x1ec>
 8004a7a:	2300      	movs	r3, #0
 8004a7c:	f04f 32ff 	mov.w	r2, #4294967295
 8004a80:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004a84:	f10a 0a01 	add.w	sl, sl, #1
 8004a88:	9304      	str	r3, [sp, #16]
 8004a8a:	9307      	str	r3, [sp, #28]
 8004a8c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004a90:	931a      	str	r3, [sp, #104]	@ 0x68
 8004a92:	4654      	mov	r4, sl
 8004a94:	2205      	movs	r2, #5
 8004a96:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004a9a:	4853      	ldr	r0, [pc, #332]	@ (8004be8 <_vfiprintf_r+0x21c>)
 8004a9c:	f000 fb08 	bl	80050b0 <memchr>
 8004aa0:	9a04      	ldr	r2, [sp, #16]
 8004aa2:	b9d8      	cbnz	r0, 8004adc <_vfiprintf_r+0x110>
 8004aa4:	06d1      	lsls	r1, r2, #27
 8004aa6:	bf44      	itt	mi
 8004aa8:	2320      	movmi	r3, #32
 8004aaa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004aae:	0713      	lsls	r3, r2, #28
 8004ab0:	bf44      	itt	mi
 8004ab2:	232b      	movmi	r3, #43	@ 0x2b
 8004ab4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004ab8:	f89a 3000 	ldrb.w	r3, [sl]
 8004abc:	2b2a      	cmp	r3, #42	@ 0x2a
 8004abe:	d015      	beq.n	8004aec <_vfiprintf_r+0x120>
 8004ac0:	4654      	mov	r4, sl
 8004ac2:	2000      	movs	r0, #0
 8004ac4:	f04f 0c0a 	mov.w	ip, #10
 8004ac8:	9a07      	ldr	r2, [sp, #28]
 8004aca:	4621      	mov	r1, r4
 8004acc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004ad0:	3b30      	subs	r3, #48	@ 0x30
 8004ad2:	2b09      	cmp	r3, #9
 8004ad4:	d94b      	bls.n	8004b6e <_vfiprintf_r+0x1a2>
 8004ad6:	b1b0      	cbz	r0, 8004b06 <_vfiprintf_r+0x13a>
 8004ad8:	9207      	str	r2, [sp, #28]
 8004ada:	e014      	b.n	8004b06 <_vfiprintf_r+0x13a>
 8004adc:	eba0 0308 	sub.w	r3, r0, r8
 8004ae0:	fa09 f303 	lsl.w	r3, r9, r3
 8004ae4:	4313      	orrs	r3, r2
 8004ae6:	46a2      	mov	sl, r4
 8004ae8:	9304      	str	r3, [sp, #16]
 8004aea:	e7d2      	b.n	8004a92 <_vfiprintf_r+0xc6>
 8004aec:	9b03      	ldr	r3, [sp, #12]
 8004aee:	1d19      	adds	r1, r3, #4
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	9103      	str	r1, [sp, #12]
 8004af4:	2b00      	cmp	r3, #0
 8004af6:	bfbb      	ittet	lt
 8004af8:	425b      	neglt	r3, r3
 8004afa:	f042 0202 	orrlt.w	r2, r2, #2
 8004afe:	9307      	strge	r3, [sp, #28]
 8004b00:	9307      	strlt	r3, [sp, #28]
 8004b02:	bfb8      	it	lt
 8004b04:	9204      	strlt	r2, [sp, #16]
 8004b06:	7823      	ldrb	r3, [r4, #0]
 8004b08:	2b2e      	cmp	r3, #46	@ 0x2e
 8004b0a:	d10a      	bne.n	8004b22 <_vfiprintf_r+0x156>
 8004b0c:	7863      	ldrb	r3, [r4, #1]
 8004b0e:	2b2a      	cmp	r3, #42	@ 0x2a
 8004b10:	d132      	bne.n	8004b78 <_vfiprintf_r+0x1ac>
 8004b12:	9b03      	ldr	r3, [sp, #12]
 8004b14:	3402      	adds	r4, #2
 8004b16:	1d1a      	adds	r2, r3, #4
 8004b18:	681b      	ldr	r3, [r3, #0]
 8004b1a:	9203      	str	r2, [sp, #12]
 8004b1c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004b20:	9305      	str	r3, [sp, #20]
 8004b22:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8004bec <_vfiprintf_r+0x220>
 8004b26:	2203      	movs	r2, #3
 8004b28:	4650      	mov	r0, sl
 8004b2a:	7821      	ldrb	r1, [r4, #0]
 8004b2c:	f000 fac0 	bl	80050b0 <memchr>
 8004b30:	b138      	cbz	r0, 8004b42 <_vfiprintf_r+0x176>
 8004b32:	2240      	movs	r2, #64	@ 0x40
 8004b34:	9b04      	ldr	r3, [sp, #16]
 8004b36:	eba0 000a 	sub.w	r0, r0, sl
 8004b3a:	4082      	lsls	r2, r0
 8004b3c:	4313      	orrs	r3, r2
 8004b3e:	3401      	adds	r4, #1
 8004b40:	9304      	str	r3, [sp, #16]
 8004b42:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004b46:	2206      	movs	r2, #6
 8004b48:	4829      	ldr	r0, [pc, #164]	@ (8004bf0 <_vfiprintf_r+0x224>)
 8004b4a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004b4e:	f000 faaf 	bl	80050b0 <memchr>
 8004b52:	2800      	cmp	r0, #0
 8004b54:	d03f      	beq.n	8004bd6 <_vfiprintf_r+0x20a>
 8004b56:	4b27      	ldr	r3, [pc, #156]	@ (8004bf4 <_vfiprintf_r+0x228>)
 8004b58:	bb1b      	cbnz	r3, 8004ba2 <_vfiprintf_r+0x1d6>
 8004b5a:	9b03      	ldr	r3, [sp, #12]
 8004b5c:	3307      	adds	r3, #7
 8004b5e:	f023 0307 	bic.w	r3, r3, #7
 8004b62:	3308      	adds	r3, #8
 8004b64:	9303      	str	r3, [sp, #12]
 8004b66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b68:	443b      	add	r3, r7
 8004b6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8004b6c:	e76a      	b.n	8004a44 <_vfiprintf_r+0x78>
 8004b6e:	460c      	mov	r4, r1
 8004b70:	2001      	movs	r0, #1
 8004b72:	fb0c 3202 	mla	r2, ip, r2, r3
 8004b76:	e7a8      	b.n	8004aca <_vfiprintf_r+0xfe>
 8004b78:	2300      	movs	r3, #0
 8004b7a:	f04f 0c0a 	mov.w	ip, #10
 8004b7e:	4619      	mov	r1, r3
 8004b80:	3401      	adds	r4, #1
 8004b82:	9305      	str	r3, [sp, #20]
 8004b84:	4620      	mov	r0, r4
 8004b86:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004b8a:	3a30      	subs	r2, #48	@ 0x30
 8004b8c:	2a09      	cmp	r2, #9
 8004b8e:	d903      	bls.n	8004b98 <_vfiprintf_r+0x1cc>
 8004b90:	2b00      	cmp	r3, #0
 8004b92:	d0c6      	beq.n	8004b22 <_vfiprintf_r+0x156>
 8004b94:	9105      	str	r1, [sp, #20]
 8004b96:	e7c4      	b.n	8004b22 <_vfiprintf_r+0x156>
 8004b98:	4604      	mov	r4, r0
 8004b9a:	2301      	movs	r3, #1
 8004b9c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004ba0:	e7f0      	b.n	8004b84 <_vfiprintf_r+0x1b8>
 8004ba2:	ab03      	add	r3, sp, #12
 8004ba4:	9300      	str	r3, [sp, #0]
 8004ba6:	462a      	mov	r2, r5
 8004ba8:	4630      	mov	r0, r6
 8004baa:	4b13      	ldr	r3, [pc, #76]	@ (8004bf8 <_vfiprintf_r+0x22c>)
 8004bac:	a904      	add	r1, sp, #16
 8004bae:	f3af 8000 	nop.w
 8004bb2:	4607      	mov	r7, r0
 8004bb4:	1c78      	adds	r0, r7, #1
 8004bb6:	d1d6      	bne.n	8004b66 <_vfiprintf_r+0x19a>
 8004bb8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004bba:	07d9      	lsls	r1, r3, #31
 8004bbc:	d405      	bmi.n	8004bca <_vfiprintf_r+0x1fe>
 8004bbe:	89ab      	ldrh	r3, [r5, #12]
 8004bc0:	059a      	lsls	r2, r3, #22
 8004bc2:	d402      	bmi.n	8004bca <_vfiprintf_r+0x1fe>
 8004bc4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004bc6:	f7ff fdd3 	bl	8004770 <__retarget_lock_release_recursive>
 8004bca:	89ab      	ldrh	r3, [r5, #12]
 8004bcc:	065b      	lsls	r3, r3, #25
 8004bce:	f53f af1f 	bmi.w	8004a10 <_vfiprintf_r+0x44>
 8004bd2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004bd4:	e71e      	b.n	8004a14 <_vfiprintf_r+0x48>
 8004bd6:	ab03      	add	r3, sp, #12
 8004bd8:	9300      	str	r3, [sp, #0]
 8004bda:	462a      	mov	r2, r5
 8004bdc:	4630      	mov	r0, r6
 8004bde:	4b06      	ldr	r3, [pc, #24]	@ (8004bf8 <_vfiprintf_r+0x22c>)
 8004be0:	a904      	add	r1, sp, #16
 8004be2:	f000 f87d 	bl	8004ce0 <_printf_i>
 8004be6:	e7e4      	b.n	8004bb2 <_vfiprintf_r+0x1e6>
 8004be8:	080054e4 	.word	0x080054e4
 8004bec:	080054ea 	.word	0x080054ea
 8004bf0:	080054ee 	.word	0x080054ee
 8004bf4:	00000000 	.word	0x00000000
 8004bf8:	080049a7 	.word	0x080049a7

08004bfc <_printf_common>:
 8004bfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c00:	4616      	mov	r6, r2
 8004c02:	4698      	mov	r8, r3
 8004c04:	688a      	ldr	r2, [r1, #8]
 8004c06:	690b      	ldr	r3, [r1, #16]
 8004c08:	4607      	mov	r7, r0
 8004c0a:	4293      	cmp	r3, r2
 8004c0c:	bfb8      	it	lt
 8004c0e:	4613      	movlt	r3, r2
 8004c10:	6033      	str	r3, [r6, #0]
 8004c12:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8004c16:	460c      	mov	r4, r1
 8004c18:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004c1c:	b10a      	cbz	r2, 8004c22 <_printf_common+0x26>
 8004c1e:	3301      	adds	r3, #1
 8004c20:	6033      	str	r3, [r6, #0]
 8004c22:	6823      	ldr	r3, [r4, #0]
 8004c24:	0699      	lsls	r1, r3, #26
 8004c26:	bf42      	ittt	mi
 8004c28:	6833      	ldrmi	r3, [r6, #0]
 8004c2a:	3302      	addmi	r3, #2
 8004c2c:	6033      	strmi	r3, [r6, #0]
 8004c2e:	6825      	ldr	r5, [r4, #0]
 8004c30:	f015 0506 	ands.w	r5, r5, #6
 8004c34:	d106      	bne.n	8004c44 <_printf_common+0x48>
 8004c36:	f104 0a19 	add.w	sl, r4, #25
 8004c3a:	68e3      	ldr	r3, [r4, #12]
 8004c3c:	6832      	ldr	r2, [r6, #0]
 8004c3e:	1a9b      	subs	r3, r3, r2
 8004c40:	42ab      	cmp	r3, r5
 8004c42:	dc2b      	bgt.n	8004c9c <_printf_common+0xa0>
 8004c44:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8004c48:	6822      	ldr	r2, [r4, #0]
 8004c4a:	3b00      	subs	r3, #0
 8004c4c:	bf18      	it	ne
 8004c4e:	2301      	movne	r3, #1
 8004c50:	0692      	lsls	r2, r2, #26
 8004c52:	d430      	bmi.n	8004cb6 <_printf_common+0xba>
 8004c54:	4641      	mov	r1, r8
 8004c56:	4638      	mov	r0, r7
 8004c58:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8004c5c:	47c8      	blx	r9
 8004c5e:	3001      	adds	r0, #1
 8004c60:	d023      	beq.n	8004caa <_printf_common+0xae>
 8004c62:	6823      	ldr	r3, [r4, #0]
 8004c64:	6922      	ldr	r2, [r4, #16]
 8004c66:	f003 0306 	and.w	r3, r3, #6
 8004c6a:	2b04      	cmp	r3, #4
 8004c6c:	bf14      	ite	ne
 8004c6e:	2500      	movne	r5, #0
 8004c70:	6833      	ldreq	r3, [r6, #0]
 8004c72:	f04f 0600 	mov.w	r6, #0
 8004c76:	bf08      	it	eq
 8004c78:	68e5      	ldreq	r5, [r4, #12]
 8004c7a:	f104 041a 	add.w	r4, r4, #26
 8004c7e:	bf08      	it	eq
 8004c80:	1aed      	subeq	r5, r5, r3
 8004c82:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8004c86:	bf08      	it	eq
 8004c88:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004c8c:	4293      	cmp	r3, r2
 8004c8e:	bfc4      	itt	gt
 8004c90:	1a9b      	subgt	r3, r3, r2
 8004c92:	18ed      	addgt	r5, r5, r3
 8004c94:	42b5      	cmp	r5, r6
 8004c96:	d11a      	bne.n	8004cce <_printf_common+0xd2>
 8004c98:	2000      	movs	r0, #0
 8004c9a:	e008      	b.n	8004cae <_printf_common+0xb2>
 8004c9c:	2301      	movs	r3, #1
 8004c9e:	4652      	mov	r2, sl
 8004ca0:	4641      	mov	r1, r8
 8004ca2:	4638      	mov	r0, r7
 8004ca4:	47c8      	blx	r9
 8004ca6:	3001      	adds	r0, #1
 8004ca8:	d103      	bne.n	8004cb2 <_printf_common+0xb6>
 8004caa:	f04f 30ff 	mov.w	r0, #4294967295
 8004cae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004cb2:	3501      	adds	r5, #1
 8004cb4:	e7c1      	b.n	8004c3a <_printf_common+0x3e>
 8004cb6:	2030      	movs	r0, #48	@ 0x30
 8004cb8:	18e1      	adds	r1, r4, r3
 8004cba:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8004cbe:	1c5a      	adds	r2, r3, #1
 8004cc0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8004cc4:	4422      	add	r2, r4
 8004cc6:	3302      	adds	r3, #2
 8004cc8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8004ccc:	e7c2      	b.n	8004c54 <_printf_common+0x58>
 8004cce:	2301      	movs	r3, #1
 8004cd0:	4622      	mov	r2, r4
 8004cd2:	4641      	mov	r1, r8
 8004cd4:	4638      	mov	r0, r7
 8004cd6:	47c8      	blx	r9
 8004cd8:	3001      	adds	r0, #1
 8004cda:	d0e6      	beq.n	8004caa <_printf_common+0xae>
 8004cdc:	3601      	adds	r6, #1
 8004cde:	e7d9      	b.n	8004c94 <_printf_common+0x98>

08004ce0 <_printf_i>:
 8004ce0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004ce4:	7e0f      	ldrb	r7, [r1, #24]
 8004ce6:	4691      	mov	r9, r2
 8004ce8:	2f78      	cmp	r7, #120	@ 0x78
 8004cea:	4680      	mov	r8, r0
 8004cec:	460c      	mov	r4, r1
 8004cee:	469a      	mov	sl, r3
 8004cf0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004cf2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8004cf6:	d807      	bhi.n	8004d08 <_printf_i+0x28>
 8004cf8:	2f62      	cmp	r7, #98	@ 0x62
 8004cfa:	d80a      	bhi.n	8004d12 <_printf_i+0x32>
 8004cfc:	2f00      	cmp	r7, #0
 8004cfe:	f000 80d3 	beq.w	8004ea8 <_printf_i+0x1c8>
 8004d02:	2f58      	cmp	r7, #88	@ 0x58
 8004d04:	f000 80ba 	beq.w	8004e7c <_printf_i+0x19c>
 8004d08:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004d0c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8004d10:	e03a      	b.n	8004d88 <_printf_i+0xa8>
 8004d12:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8004d16:	2b15      	cmp	r3, #21
 8004d18:	d8f6      	bhi.n	8004d08 <_printf_i+0x28>
 8004d1a:	a101      	add	r1, pc, #4	@ (adr r1, 8004d20 <_printf_i+0x40>)
 8004d1c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004d20:	08004d79 	.word	0x08004d79
 8004d24:	08004d8d 	.word	0x08004d8d
 8004d28:	08004d09 	.word	0x08004d09
 8004d2c:	08004d09 	.word	0x08004d09
 8004d30:	08004d09 	.word	0x08004d09
 8004d34:	08004d09 	.word	0x08004d09
 8004d38:	08004d8d 	.word	0x08004d8d
 8004d3c:	08004d09 	.word	0x08004d09
 8004d40:	08004d09 	.word	0x08004d09
 8004d44:	08004d09 	.word	0x08004d09
 8004d48:	08004d09 	.word	0x08004d09
 8004d4c:	08004e8f 	.word	0x08004e8f
 8004d50:	08004db7 	.word	0x08004db7
 8004d54:	08004e49 	.word	0x08004e49
 8004d58:	08004d09 	.word	0x08004d09
 8004d5c:	08004d09 	.word	0x08004d09
 8004d60:	08004eb1 	.word	0x08004eb1
 8004d64:	08004d09 	.word	0x08004d09
 8004d68:	08004db7 	.word	0x08004db7
 8004d6c:	08004d09 	.word	0x08004d09
 8004d70:	08004d09 	.word	0x08004d09
 8004d74:	08004e51 	.word	0x08004e51
 8004d78:	6833      	ldr	r3, [r6, #0]
 8004d7a:	1d1a      	adds	r2, r3, #4
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	6032      	str	r2, [r6, #0]
 8004d80:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004d84:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8004d88:	2301      	movs	r3, #1
 8004d8a:	e09e      	b.n	8004eca <_printf_i+0x1ea>
 8004d8c:	6833      	ldr	r3, [r6, #0]
 8004d8e:	6820      	ldr	r0, [r4, #0]
 8004d90:	1d19      	adds	r1, r3, #4
 8004d92:	6031      	str	r1, [r6, #0]
 8004d94:	0606      	lsls	r6, r0, #24
 8004d96:	d501      	bpl.n	8004d9c <_printf_i+0xbc>
 8004d98:	681d      	ldr	r5, [r3, #0]
 8004d9a:	e003      	b.n	8004da4 <_printf_i+0xc4>
 8004d9c:	0645      	lsls	r5, r0, #25
 8004d9e:	d5fb      	bpl.n	8004d98 <_printf_i+0xb8>
 8004da0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8004da4:	2d00      	cmp	r5, #0
 8004da6:	da03      	bge.n	8004db0 <_printf_i+0xd0>
 8004da8:	232d      	movs	r3, #45	@ 0x2d
 8004daa:	426d      	negs	r5, r5
 8004dac:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004db0:	230a      	movs	r3, #10
 8004db2:	4859      	ldr	r0, [pc, #356]	@ (8004f18 <_printf_i+0x238>)
 8004db4:	e011      	b.n	8004dda <_printf_i+0xfa>
 8004db6:	6821      	ldr	r1, [r4, #0]
 8004db8:	6833      	ldr	r3, [r6, #0]
 8004dba:	0608      	lsls	r0, r1, #24
 8004dbc:	f853 5b04 	ldr.w	r5, [r3], #4
 8004dc0:	d402      	bmi.n	8004dc8 <_printf_i+0xe8>
 8004dc2:	0649      	lsls	r1, r1, #25
 8004dc4:	bf48      	it	mi
 8004dc6:	b2ad      	uxthmi	r5, r5
 8004dc8:	2f6f      	cmp	r7, #111	@ 0x6f
 8004dca:	6033      	str	r3, [r6, #0]
 8004dcc:	bf14      	ite	ne
 8004dce:	230a      	movne	r3, #10
 8004dd0:	2308      	moveq	r3, #8
 8004dd2:	4851      	ldr	r0, [pc, #324]	@ (8004f18 <_printf_i+0x238>)
 8004dd4:	2100      	movs	r1, #0
 8004dd6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8004dda:	6866      	ldr	r6, [r4, #4]
 8004ddc:	2e00      	cmp	r6, #0
 8004dde:	bfa8      	it	ge
 8004de0:	6821      	ldrge	r1, [r4, #0]
 8004de2:	60a6      	str	r6, [r4, #8]
 8004de4:	bfa4      	itt	ge
 8004de6:	f021 0104 	bicge.w	r1, r1, #4
 8004dea:	6021      	strge	r1, [r4, #0]
 8004dec:	b90d      	cbnz	r5, 8004df2 <_printf_i+0x112>
 8004dee:	2e00      	cmp	r6, #0
 8004df0:	d04b      	beq.n	8004e8a <_printf_i+0x1aa>
 8004df2:	4616      	mov	r6, r2
 8004df4:	fbb5 f1f3 	udiv	r1, r5, r3
 8004df8:	fb03 5711 	mls	r7, r3, r1, r5
 8004dfc:	5dc7      	ldrb	r7, [r0, r7]
 8004dfe:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004e02:	462f      	mov	r7, r5
 8004e04:	42bb      	cmp	r3, r7
 8004e06:	460d      	mov	r5, r1
 8004e08:	d9f4      	bls.n	8004df4 <_printf_i+0x114>
 8004e0a:	2b08      	cmp	r3, #8
 8004e0c:	d10b      	bne.n	8004e26 <_printf_i+0x146>
 8004e0e:	6823      	ldr	r3, [r4, #0]
 8004e10:	07df      	lsls	r7, r3, #31
 8004e12:	d508      	bpl.n	8004e26 <_printf_i+0x146>
 8004e14:	6923      	ldr	r3, [r4, #16]
 8004e16:	6861      	ldr	r1, [r4, #4]
 8004e18:	4299      	cmp	r1, r3
 8004e1a:	bfde      	ittt	le
 8004e1c:	2330      	movle	r3, #48	@ 0x30
 8004e1e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004e22:	f106 36ff 	addle.w	r6, r6, #4294967295
 8004e26:	1b92      	subs	r2, r2, r6
 8004e28:	6122      	str	r2, [r4, #16]
 8004e2a:	464b      	mov	r3, r9
 8004e2c:	4621      	mov	r1, r4
 8004e2e:	4640      	mov	r0, r8
 8004e30:	f8cd a000 	str.w	sl, [sp]
 8004e34:	aa03      	add	r2, sp, #12
 8004e36:	f7ff fee1 	bl	8004bfc <_printf_common>
 8004e3a:	3001      	adds	r0, #1
 8004e3c:	d14a      	bne.n	8004ed4 <_printf_i+0x1f4>
 8004e3e:	f04f 30ff 	mov.w	r0, #4294967295
 8004e42:	b004      	add	sp, #16
 8004e44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004e48:	6823      	ldr	r3, [r4, #0]
 8004e4a:	f043 0320 	orr.w	r3, r3, #32
 8004e4e:	6023      	str	r3, [r4, #0]
 8004e50:	2778      	movs	r7, #120	@ 0x78
 8004e52:	4832      	ldr	r0, [pc, #200]	@ (8004f1c <_printf_i+0x23c>)
 8004e54:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8004e58:	6823      	ldr	r3, [r4, #0]
 8004e5a:	6831      	ldr	r1, [r6, #0]
 8004e5c:	061f      	lsls	r7, r3, #24
 8004e5e:	f851 5b04 	ldr.w	r5, [r1], #4
 8004e62:	d402      	bmi.n	8004e6a <_printf_i+0x18a>
 8004e64:	065f      	lsls	r7, r3, #25
 8004e66:	bf48      	it	mi
 8004e68:	b2ad      	uxthmi	r5, r5
 8004e6a:	6031      	str	r1, [r6, #0]
 8004e6c:	07d9      	lsls	r1, r3, #31
 8004e6e:	bf44      	itt	mi
 8004e70:	f043 0320 	orrmi.w	r3, r3, #32
 8004e74:	6023      	strmi	r3, [r4, #0]
 8004e76:	b11d      	cbz	r5, 8004e80 <_printf_i+0x1a0>
 8004e78:	2310      	movs	r3, #16
 8004e7a:	e7ab      	b.n	8004dd4 <_printf_i+0xf4>
 8004e7c:	4826      	ldr	r0, [pc, #152]	@ (8004f18 <_printf_i+0x238>)
 8004e7e:	e7e9      	b.n	8004e54 <_printf_i+0x174>
 8004e80:	6823      	ldr	r3, [r4, #0]
 8004e82:	f023 0320 	bic.w	r3, r3, #32
 8004e86:	6023      	str	r3, [r4, #0]
 8004e88:	e7f6      	b.n	8004e78 <_printf_i+0x198>
 8004e8a:	4616      	mov	r6, r2
 8004e8c:	e7bd      	b.n	8004e0a <_printf_i+0x12a>
 8004e8e:	6833      	ldr	r3, [r6, #0]
 8004e90:	6825      	ldr	r5, [r4, #0]
 8004e92:	1d18      	adds	r0, r3, #4
 8004e94:	6961      	ldr	r1, [r4, #20]
 8004e96:	6030      	str	r0, [r6, #0]
 8004e98:	062e      	lsls	r6, r5, #24
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	d501      	bpl.n	8004ea2 <_printf_i+0x1c2>
 8004e9e:	6019      	str	r1, [r3, #0]
 8004ea0:	e002      	b.n	8004ea8 <_printf_i+0x1c8>
 8004ea2:	0668      	lsls	r0, r5, #25
 8004ea4:	d5fb      	bpl.n	8004e9e <_printf_i+0x1be>
 8004ea6:	8019      	strh	r1, [r3, #0]
 8004ea8:	2300      	movs	r3, #0
 8004eaa:	4616      	mov	r6, r2
 8004eac:	6123      	str	r3, [r4, #16]
 8004eae:	e7bc      	b.n	8004e2a <_printf_i+0x14a>
 8004eb0:	6833      	ldr	r3, [r6, #0]
 8004eb2:	2100      	movs	r1, #0
 8004eb4:	1d1a      	adds	r2, r3, #4
 8004eb6:	6032      	str	r2, [r6, #0]
 8004eb8:	681e      	ldr	r6, [r3, #0]
 8004eba:	6862      	ldr	r2, [r4, #4]
 8004ebc:	4630      	mov	r0, r6
 8004ebe:	f000 f8f7 	bl	80050b0 <memchr>
 8004ec2:	b108      	cbz	r0, 8004ec8 <_printf_i+0x1e8>
 8004ec4:	1b80      	subs	r0, r0, r6
 8004ec6:	6060      	str	r0, [r4, #4]
 8004ec8:	6863      	ldr	r3, [r4, #4]
 8004eca:	6123      	str	r3, [r4, #16]
 8004ecc:	2300      	movs	r3, #0
 8004ece:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004ed2:	e7aa      	b.n	8004e2a <_printf_i+0x14a>
 8004ed4:	4632      	mov	r2, r6
 8004ed6:	4649      	mov	r1, r9
 8004ed8:	4640      	mov	r0, r8
 8004eda:	6923      	ldr	r3, [r4, #16]
 8004edc:	47d0      	blx	sl
 8004ede:	3001      	adds	r0, #1
 8004ee0:	d0ad      	beq.n	8004e3e <_printf_i+0x15e>
 8004ee2:	6823      	ldr	r3, [r4, #0]
 8004ee4:	079b      	lsls	r3, r3, #30
 8004ee6:	d413      	bmi.n	8004f10 <_printf_i+0x230>
 8004ee8:	68e0      	ldr	r0, [r4, #12]
 8004eea:	9b03      	ldr	r3, [sp, #12]
 8004eec:	4298      	cmp	r0, r3
 8004eee:	bfb8      	it	lt
 8004ef0:	4618      	movlt	r0, r3
 8004ef2:	e7a6      	b.n	8004e42 <_printf_i+0x162>
 8004ef4:	2301      	movs	r3, #1
 8004ef6:	4632      	mov	r2, r6
 8004ef8:	4649      	mov	r1, r9
 8004efa:	4640      	mov	r0, r8
 8004efc:	47d0      	blx	sl
 8004efe:	3001      	adds	r0, #1
 8004f00:	d09d      	beq.n	8004e3e <_printf_i+0x15e>
 8004f02:	3501      	adds	r5, #1
 8004f04:	68e3      	ldr	r3, [r4, #12]
 8004f06:	9903      	ldr	r1, [sp, #12]
 8004f08:	1a5b      	subs	r3, r3, r1
 8004f0a:	42ab      	cmp	r3, r5
 8004f0c:	dcf2      	bgt.n	8004ef4 <_printf_i+0x214>
 8004f0e:	e7eb      	b.n	8004ee8 <_printf_i+0x208>
 8004f10:	2500      	movs	r5, #0
 8004f12:	f104 0619 	add.w	r6, r4, #25
 8004f16:	e7f5      	b.n	8004f04 <_printf_i+0x224>
 8004f18:	080054f5 	.word	0x080054f5
 8004f1c:	08005506 	.word	0x08005506

08004f20 <__swhatbuf_r>:
 8004f20:	b570      	push	{r4, r5, r6, lr}
 8004f22:	460c      	mov	r4, r1
 8004f24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004f28:	4615      	mov	r5, r2
 8004f2a:	2900      	cmp	r1, #0
 8004f2c:	461e      	mov	r6, r3
 8004f2e:	b096      	sub	sp, #88	@ 0x58
 8004f30:	da0c      	bge.n	8004f4c <__swhatbuf_r+0x2c>
 8004f32:	89a3      	ldrh	r3, [r4, #12]
 8004f34:	2100      	movs	r1, #0
 8004f36:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004f3a:	bf14      	ite	ne
 8004f3c:	2340      	movne	r3, #64	@ 0x40
 8004f3e:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8004f42:	2000      	movs	r0, #0
 8004f44:	6031      	str	r1, [r6, #0]
 8004f46:	602b      	str	r3, [r5, #0]
 8004f48:	b016      	add	sp, #88	@ 0x58
 8004f4a:	bd70      	pop	{r4, r5, r6, pc}
 8004f4c:	466a      	mov	r2, sp
 8004f4e:	f000 f87d 	bl	800504c <_fstat_r>
 8004f52:	2800      	cmp	r0, #0
 8004f54:	dbed      	blt.n	8004f32 <__swhatbuf_r+0x12>
 8004f56:	9901      	ldr	r1, [sp, #4]
 8004f58:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8004f5c:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8004f60:	4259      	negs	r1, r3
 8004f62:	4159      	adcs	r1, r3
 8004f64:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004f68:	e7eb      	b.n	8004f42 <__swhatbuf_r+0x22>

08004f6a <__smakebuf_r>:
 8004f6a:	898b      	ldrh	r3, [r1, #12]
 8004f6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004f6e:	079d      	lsls	r5, r3, #30
 8004f70:	4606      	mov	r6, r0
 8004f72:	460c      	mov	r4, r1
 8004f74:	d507      	bpl.n	8004f86 <__smakebuf_r+0x1c>
 8004f76:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8004f7a:	6023      	str	r3, [r4, #0]
 8004f7c:	6123      	str	r3, [r4, #16]
 8004f7e:	2301      	movs	r3, #1
 8004f80:	6163      	str	r3, [r4, #20]
 8004f82:	b003      	add	sp, #12
 8004f84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f86:	466a      	mov	r2, sp
 8004f88:	ab01      	add	r3, sp, #4
 8004f8a:	f7ff ffc9 	bl	8004f20 <__swhatbuf_r>
 8004f8e:	9f00      	ldr	r7, [sp, #0]
 8004f90:	4605      	mov	r5, r0
 8004f92:	4639      	mov	r1, r7
 8004f94:	4630      	mov	r0, r6
 8004f96:	f7ff fc65 	bl	8004864 <_malloc_r>
 8004f9a:	b948      	cbnz	r0, 8004fb0 <__smakebuf_r+0x46>
 8004f9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004fa0:	059a      	lsls	r2, r3, #22
 8004fa2:	d4ee      	bmi.n	8004f82 <__smakebuf_r+0x18>
 8004fa4:	f023 0303 	bic.w	r3, r3, #3
 8004fa8:	f043 0302 	orr.w	r3, r3, #2
 8004fac:	81a3      	strh	r3, [r4, #12]
 8004fae:	e7e2      	b.n	8004f76 <__smakebuf_r+0xc>
 8004fb0:	89a3      	ldrh	r3, [r4, #12]
 8004fb2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8004fb6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004fba:	81a3      	strh	r3, [r4, #12]
 8004fbc:	9b01      	ldr	r3, [sp, #4]
 8004fbe:	6020      	str	r0, [r4, #0]
 8004fc0:	b15b      	cbz	r3, 8004fda <__smakebuf_r+0x70>
 8004fc2:	4630      	mov	r0, r6
 8004fc4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004fc8:	f000 f852 	bl	8005070 <_isatty_r>
 8004fcc:	b128      	cbz	r0, 8004fda <__smakebuf_r+0x70>
 8004fce:	89a3      	ldrh	r3, [r4, #12]
 8004fd0:	f023 0303 	bic.w	r3, r3, #3
 8004fd4:	f043 0301 	orr.w	r3, r3, #1
 8004fd8:	81a3      	strh	r3, [r4, #12]
 8004fda:	89a3      	ldrh	r3, [r4, #12]
 8004fdc:	431d      	orrs	r5, r3
 8004fde:	81a5      	strh	r5, [r4, #12]
 8004fe0:	e7cf      	b.n	8004f82 <__smakebuf_r+0x18>

08004fe2 <_putc_r>:
 8004fe2:	b570      	push	{r4, r5, r6, lr}
 8004fe4:	460d      	mov	r5, r1
 8004fe6:	4614      	mov	r4, r2
 8004fe8:	4606      	mov	r6, r0
 8004fea:	b118      	cbz	r0, 8004ff4 <_putc_r+0x12>
 8004fec:	6a03      	ldr	r3, [r0, #32]
 8004fee:	b90b      	cbnz	r3, 8004ff4 <_putc_r+0x12>
 8004ff0:	f7ff f9be 	bl	8004370 <__sinit>
 8004ff4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004ff6:	07d8      	lsls	r0, r3, #31
 8004ff8:	d405      	bmi.n	8005006 <_putc_r+0x24>
 8004ffa:	89a3      	ldrh	r3, [r4, #12]
 8004ffc:	0599      	lsls	r1, r3, #22
 8004ffe:	d402      	bmi.n	8005006 <_putc_r+0x24>
 8005000:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005002:	f7ff fbb4 	bl	800476e <__retarget_lock_acquire_recursive>
 8005006:	68a3      	ldr	r3, [r4, #8]
 8005008:	3b01      	subs	r3, #1
 800500a:	2b00      	cmp	r3, #0
 800500c:	60a3      	str	r3, [r4, #8]
 800500e:	da05      	bge.n	800501c <_putc_r+0x3a>
 8005010:	69a2      	ldr	r2, [r4, #24]
 8005012:	4293      	cmp	r3, r2
 8005014:	db12      	blt.n	800503c <_putc_r+0x5a>
 8005016:	b2eb      	uxtb	r3, r5
 8005018:	2b0a      	cmp	r3, #10
 800501a:	d00f      	beq.n	800503c <_putc_r+0x5a>
 800501c:	6823      	ldr	r3, [r4, #0]
 800501e:	1c5a      	adds	r2, r3, #1
 8005020:	6022      	str	r2, [r4, #0]
 8005022:	701d      	strb	r5, [r3, #0]
 8005024:	b2ed      	uxtb	r5, r5
 8005026:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005028:	07da      	lsls	r2, r3, #31
 800502a:	d405      	bmi.n	8005038 <_putc_r+0x56>
 800502c:	89a3      	ldrh	r3, [r4, #12]
 800502e:	059b      	lsls	r3, r3, #22
 8005030:	d402      	bmi.n	8005038 <_putc_r+0x56>
 8005032:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005034:	f7ff fb9c 	bl	8004770 <__retarget_lock_release_recursive>
 8005038:	4628      	mov	r0, r5
 800503a:	bd70      	pop	{r4, r5, r6, pc}
 800503c:	4629      	mov	r1, r5
 800503e:	4622      	mov	r2, r4
 8005040:	4630      	mov	r0, r6
 8005042:	f7ff fa86 	bl	8004552 <__swbuf_r>
 8005046:	4605      	mov	r5, r0
 8005048:	e7ed      	b.n	8005026 <_putc_r+0x44>
	...

0800504c <_fstat_r>:
 800504c:	b538      	push	{r3, r4, r5, lr}
 800504e:	2300      	movs	r3, #0
 8005050:	4d06      	ldr	r5, [pc, #24]	@ (800506c <_fstat_r+0x20>)
 8005052:	4604      	mov	r4, r0
 8005054:	4608      	mov	r0, r1
 8005056:	4611      	mov	r1, r2
 8005058:	602b      	str	r3, [r5, #0]
 800505a:	f7fc fd4f 	bl	8001afc <_fstat>
 800505e:	1c43      	adds	r3, r0, #1
 8005060:	d102      	bne.n	8005068 <_fstat_r+0x1c>
 8005062:	682b      	ldr	r3, [r5, #0]
 8005064:	b103      	cbz	r3, 8005068 <_fstat_r+0x1c>
 8005066:	6023      	str	r3, [r4, #0]
 8005068:	bd38      	pop	{r3, r4, r5, pc}
 800506a:	bf00      	nop
 800506c:	20013258 	.word	0x20013258

08005070 <_isatty_r>:
 8005070:	b538      	push	{r3, r4, r5, lr}
 8005072:	2300      	movs	r3, #0
 8005074:	4d05      	ldr	r5, [pc, #20]	@ (800508c <_isatty_r+0x1c>)
 8005076:	4604      	mov	r4, r0
 8005078:	4608      	mov	r0, r1
 800507a:	602b      	str	r3, [r5, #0]
 800507c:	f7fc fd4d 	bl	8001b1a <_isatty>
 8005080:	1c43      	adds	r3, r0, #1
 8005082:	d102      	bne.n	800508a <_isatty_r+0x1a>
 8005084:	682b      	ldr	r3, [r5, #0]
 8005086:	b103      	cbz	r3, 800508a <_isatty_r+0x1a>
 8005088:	6023      	str	r3, [r4, #0]
 800508a:	bd38      	pop	{r3, r4, r5, pc}
 800508c:	20013258 	.word	0x20013258

08005090 <_sbrk_r>:
 8005090:	b538      	push	{r3, r4, r5, lr}
 8005092:	2300      	movs	r3, #0
 8005094:	4d05      	ldr	r5, [pc, #20]	@ (80050ac <_sbrk_r+0x1c>)
 8005096:	4604      	mov	r4, r0
 8005098:	4608      	mov	r0, r1
 800509a:	602b      	str	r3, [r5, #0]
 800509c:	f7fc fd54 	bl	8001b48 <_sbrk>
 80050a0:	1c43      	adds	r3, r0, #1
 80050a2:	d102      	bne.n	80050aa <_sbrk_r+0x1a>
 80050a4:	682b      	ldr	r3, [r5, #0]
 80050a6:	b103      	cbz	r3, 80050aa <_sbrk_r+0x1a>
 80050a8:	6023      	str	r3, [r4, #0]
 80050aa:	bd38      	pop	{r3, r4, r5, pc}
 80050ac:	20013258 	.word	0x20013258

080050b0 <memchr>:
 80050b0:	4603      	mov	r3, r0
 80050b2:	b510      	push	{r4, lr}
 80050b4:	b2c9      	uxtb	r1, r1
 80050b6:	4402      	add	r2, r0
 80050b8:	4293      	cmp	r3, r2
 80050ba:	4618      	mov	r0, r3
 80050bc:	d101      	bne.n	80050c2 <memchr+0x12>
 80050be:	2000      	movs	r0, #0
 80050c0:	e003      	b.n	80050ca <memchr+0x1a>
 80050c2:	7804      	ldrb	r4, [r0, #0]
 80050c4:	3301      	adds	r3, #1
 80050c6:	428c      	cmp	r4, r1
 80050c8:	d1f6      	bne.n	80050b8 <memchr+0x8>
 80050ca:	bd10      	pop	{r4, pc}

080050cc <_init>:
 80050cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050ce:	bf00      	nop
 80050d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050d2:	bc08      	pop	{r3}
 80050d4:	469e      	mov	lr, r3
 80050d6:	4770      	bx	lr

080050d8 <_fini>:
 80050d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050da:	bf00      	nop
 80050dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050de:	bc08      	pop	{r3}
 80050e0:	469e      	mov	lr, r3
 80050e2:	4770      	bx	lr
